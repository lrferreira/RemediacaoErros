package module.merfunction.sorter;

import javax.swing.JComponent;
import module.entity.Goal;
import module.entity.Action;
import module.entity.WrongAnswer;
import module.entity.RuleToHuman;
import util.Constants;
import module.entity.MERFunction;
import module.mer.manager.MERManagerController;
import module.entity.DBConnect;


ruleBase MERFunctionSorterKB {






	rule funcaoMRE_1_CAMINHO_1_META_1_COMPONENTE_txt1_REMEDIACAO_1_0 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(1L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(1L);
			action.getGoal().getComponent().equalsIgnoreCase("txt1");
			//action.getRemediation().getId().equals(1L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_1_CAMINHO_1_META_1_COMPONENTE_txt1_REMEDIACAO_1_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_1_CAMINHO_1_META_1_COMPONENTE_txt1_REMEDIACAO_1_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Interpretação Equivocada\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt1\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Papéis Complementares\" \n");
			action.setMerFunction( dbCon.getMERFunction(1L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Papéis Complementares");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_1_CAMINHO_1_META_2_COMPONENTE_txt2_REMEDIACAO_2_1 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(1L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(2L);
			action.getGoal().getComponent().equalsIgnoreCase("txt2");
			//action.getRemediation().getId().equals(2L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_1_CAMINHO_1_META_2_COMPONENTE_txt2_REMEDIACAO_2_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_1_CAMINHO_1_META_2_COMPONENTE_txt2_REMEDIACAO_2_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Interpretação Equivocada\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 2\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt2\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Papéis Complementares\" \n");
			action.setMerFunction( dbCon.getMERFunction(1L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Papéis Complementares");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_2_CAMINHO_1_META_3_COMPONENTE_txt5_REMEDIACAO_3_2 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(2L);
			((WrongAnswer)action.getAnswer()).getErrorType().getSubErrorTypes().get(0).getId().equals(1L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(3L);
			action.getGoal().getComponent().equalsIgnoreCase("txt5");
			//action.getRemediation().getId().equals(3L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_2_CAMINHO_1_META_3_COMPONENTE_txt5_REMEDIACAO_3_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_2_CAMINHO_1_META_3_COMPONENTE_txt5_REMEDIACAO_3_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Diretamente Identificáveis\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tSubtipo de Erro = \"Deficiência em relação ao domínio ou uso inadequado de dados\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 3\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt5\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Restrição de Interpretação\" \n");
			action.setMerFunction( dbCon.getMERFunction(2L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Restrição de Interpretação");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_2_CAMINHO_1_META_1_COMPONENTE_txt1_REMEDIACAO_4_3 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(2L);
			((WrongAnswer)action.getAnswer()).getErrorType().getSubErrorTypes().get(0).getId().equals(1L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(1L);
			action.getGoal().getComponent().equalsIgnoreCase("txt1");
			//action.getRemediation().getId().equals(4L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_2_CAMINHO_1_META_1_COMPONENTE_txt1_REMEDIACAO_4_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_2_CAMINHO_1_META_1_COMPONENTE_txt1_REMEDIACAO_4_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Diretamente Identificáveis\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tSubtipo de Erro = \"Deficiência em relação ao domínio ou uso inadequado de dados\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt1\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Restrição de Interpretação\" \n");
			action.setMerFunction( dbCon.getMERFunction(2L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Restrição de Interpretação");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_2_CAMINHO_1_META_1_COMPONENTE_txt1_REMEDIACAO_5_4 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(2L);
			((WrongAnswer)action.getAnswer()).getErrorType().getSubErrorTypes().get(0).getId().equals(1L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(1L);
			action.getGoal().getComponent().equalsIgnoreCase("txt1");
			//action.getRemediation().getId().equals(5L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_2_CAMINHO_1_META_1_COMPONENTE_txt1_REMEDIACAO_5_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_2_CAMINHO_1_META_1_COMPONENTE_txt1_REMEDIACAO_5_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Diretamente Identificáveis\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tSubtipo de Erro = \"Deficiência em relação ao domínio ou uso inadequado de dados\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt1\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Restrição de Interpretação\" \n");
			action.setMerFunction( dbCon.getMERFunction(2L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Restrição de Interpretação");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_2_CAMINHO_1_META_2_COMPONENTE_txt2_REMEDIACAO_6_5 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(2L);
			((WrongAnswer)action.getAnswer()).getErrorType().getSubErrorTypes().get(0).getId().equals(1L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(2L);
			action.getGoal().getComponent().equalsIgnoreCase("txt2");
			//action.getRemediation().getId().equals(6L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_2_CAMINHO_1_META_2_COMPONENTE_txt2_REMEDIACAO_6_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_2_CAMINHO_1_META_2_COMPONENTE_txt2_REMEDIACAO_6_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Diretamente Identificáveis\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tSubtipo de Erro = \"Deficiência em relação ao domínio ou uso inadequado de dados\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 2\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt2\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Restrição de Interpretação\" \n");
			action.setMerFunction( dbCon.getMERFunction(2L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Restrição de Interpretação");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_2_CAMINHO_1_META_3_COMPONENTE_txt5_REMEDIACAO_7_6 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(2L);
			((WrongAnswer)action.getAnswer()).getErrorType().getSubErrorTypes().get(0).getId().equals(1L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(3L);
			action.getGoal().getComponent().equalsIgnoreCase("txt5");
			//action.getRemediation().getId().equals(7L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_2_CAMINHO_1_META_3_COMPONENTE_txt5_REMEDIACAO_7_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_2_CAMINHO_1_META_3_COMPONENTE_txt5_REMEDIACAO_7_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Diretamente Identificáveis\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tSubtipo de Erro = \"Deficiência em relação ao domínio ou uso inadequado de dados\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 3\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt5\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Restrição de Interpretação\" \n");
			action.setMerFunction( dbCon.getMERFunction(2L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Restrição de Interpretação");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_3_CAMINHO_1_META_4_COMPONENTE_txt3_REMEDIACAO_8_7 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(2L);
			((WrongAnswer)action.getAnswer()).getErrorType().getSubErrorTypes().get(0).getId().equals(3L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(4L);
			action.getGoal().getComponent().equalsIgnoreCase("txt3");
			//action.getRemediation().getId().equals(8L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_3_CAMINHO_1_META_4_COMPONENTE_txt3_REMEDIACAO_8_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_3_CAMINHO_1_META_4_COMPONENTE_txt3_REMEDIACAO_8_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Diretamente Identificáveis\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tSubtipo de Erro = \"Deficiência na escolha do operador correto\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 4\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt3\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Compreensão mais aprofundada\" \n");
			action.setMerFunction( dbCon.getMERFunction(3L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Compreensão mais aprofundada");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_3_CAMINHO_1_META_5_COMPONENTE_txt8_REMEDIACAO_9_8 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(2L);
			((WrongAnswer)action.getAnswer()).getErrorType().getSubErrorTypes().get(0).getId().equals(3L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(5L);
			action.getGoal().getComponent().equalsIgnoreCase("txt8");
			//action.getRemediation().getId().equals(9L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_3_CAMINHO_1_META_5_COMPONENTE_txt8_REMEDIACAO_9_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_3_CAMINHO_1_META_5_COMPONENTE_txt8_REMEDIACAO_9_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Diretamente Identificáveis\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tSubtipo de Erro = \"Deficiência na escolha do operador correto\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 5\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt8\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Compreensão mais aprofundada\" \n");
			action.setMerFunction( dbCon.getMERFunction(3L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Compreensão mais aprofundada");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_3_CAMINHO_1_META_5_COMPONENTE_txt8_REMEDIACAO_10_9 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(2L);
			((WrongAnswer)action.getAnswer()).getErrorType().getSubErrorTypes().get(0).getId().equals(2L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(5L);
			action.getGoal().getComponent().equalsIgnoreCase("txt8");
			//action.getRemediation().getId().equals(10L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_3_CAMINHO_1_META_5_COMPONENTE_txt8_REMEDIACAO_10_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_3_CAMINHO_1_META_5_COMPONENTE_txt8_REMEDIACAO_10_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Diretamente Identificáveis\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tSubtipo de Erro = \"Deficiência de regra, teorema ou definição\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 5\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt8\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Compreensão mais aprofundada\" \n");
			action.setMerFunction( dbCon.getMERFunction(3L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Compreensão mais aprofundada");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_3_CAMINHO_1_META_5_COMPONENTE_txt8_REMEDIACAO_11_10 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(2L);
			((WrongAnswer)action.getAnswer()).getErrorType().getSubErrorTypes().get(0).getId().equals(2L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(5L);
			action.getGoal().getComponent().equalsIgnoreCase("txt8");
			//action.getRemediation().getId().equals(11L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_3_CAMINHO_1_META_5_COMPONENTE_txt8_REMEDIACAO_11_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_3_CAMINHO_1_META_5_COMPONENTE_txt8_REMEDIACAO_11_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Diretamente Identificáveis\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tSubtipo de Erro = \"Deficiência de regra, teorema ou definição\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 5\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt8\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Compreensão mais aprofundada\" \n");
			action.setMerFunction( dbCon.getMERFunction(3L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Compreensão mais aprofundada");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_3_CAMINHO_1_META_5_COMPONENTE_txt8_REMEDIACAO_12_11 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(2L);
			((WrongAnswer)action.getAnswer()).getErrorType().getSubErrorTypes().get(0).getId().equals(2L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(5L);
			action.getGoal().getComponent().equalsIgnoreCase("txt8");
			//action.getRemediation().getId().equals(12L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_3_CAMINHO_1_META_5_COMPONENTE_txt8_REMEDIACAO_12_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_3_CAMINHO_1_META_5_COMPONENTE_txt8_REMEDIACAO_12_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Diretamente Identificáveis\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tSubtipo de Erro = \"Deficiência de regra, teorema ou definição\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 5\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt8\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Compreensão mais aprofundada\" \n");
			action.setMerFunction( dbCon.getMERFunction(3L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Compreensão mais aprofundada");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_2_CAMINHO_1_META_6_COMPONENTE_txt7_REMEDIACAO_13_12 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(3L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(6L);
			action.getGoal().getComponent().equalsIgnoreCase("txt7");
			//action.getRemediation().getId().equals(13L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_2_CAMINHO_1_META_6_COMPONENTE_txt7_REMEDIACAO_13_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_2_CAMINHO_1_META_6_COMPONENTE_txt7_REMEDIACAO_13_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Indiretamente identificáveis\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 6\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt7\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Restrição de Interpretação\" \n");
			action.setMerFunction( dbCon.getMERFunction(2L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Restrição de Interpretação");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_2_CAMINHO_1_META_6_COMPONENTE_txt7_REMEDIACAO_14_13 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(3L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(6L);
			action.getGoal().getComponent().equalsIgnoreCase("txt7");
			//action.getRemediation().getId().equals(14L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_2_CAMINHO_1_META_6_COMPONENTE_txt7_REMEDIACAO_14_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_2_CAMINHO_1_META_6_COMPONENTE_txt7_REMEDIACAO_14_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Indiretamente identificáveis\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 6\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt7\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Restrição de Interpretação\" \n");
			action.setMerFunction( dbCon.getMERFunction(2L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Restrição de Interpretação");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_3_CAMINHO_1_META_1_COMPONENTE_txt1_REMEDIACAO_15_indice_14 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(4L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(1L);
			action.getGoal().getComponent().equalsIgnoreCase("txt1");
			//action.getRemediation().getId().equals(15L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_3_CAMINHO_1_META_1_COMPONENTE_txt1_REMEDIACAO_15_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_3_CAMINHO_1_META_1_COMPONENTE_txt1_REMEDIACAO_15_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Solução não categorizável\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt1\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Compreensão mais aprofundada\" \n");
			action.setMerFunction( dbCon.getMERFunction(3L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Compreensão mais aprofundada");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_3_CAMINHO_1_META_1_COMPONENTE_txt1_REMEDIACAO_15_indice_15 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(4L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(1L);
			action.getGoal().getComponent().equalsIgnoreCase("txt1");
			//action.getRemediation().getId().equals(15L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_3_CAMINHO_1_META_1_COMPONENTE_txt1_REMEDIACAO_15_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_3_CAMINHO_1_META_1_COMPONENTE_txt1_REMEDIACAO_15_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Solução não categorizável\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt1\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Compreensão mais aprofundada\" \n");
			action.setMerFunction( dbCon.getMERFunction(3L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Compreensão mais aprofundada");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_3_CAMINHO_1_META_2_COMPONENTE_txt2_REMEDIACAO_16_indice_16 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(4L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(2L);
			action.getGoal().getComponent().equalsIgnoreCase("txt2");
			//action.getRemediation().getId().equals(16L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_3_CAMINHO_1_META_2_COMPONENTE_txt2_REMEDIACAO_16_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_3_CAMINHO_1_META_2_COMPONENTE_txt2_REMEDIACAO_16_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Solução não categorizável\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 2\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt2\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Compreensão mais aprofundada\" \n");
			action.setMerFunction( dbCon.getMERFunction(3L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Compreensão mais aprofundada");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_3_CAMINHO_1_META_3_COMPONENTE_txt5_REMEDIACAO_17_indice_17 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(4L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(3L);
			action.getGoal().getComponent().equalsIgnoreCase("txt5");
			//action.getRemediation().getId().equals(17L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_3_CAMINHO_1_META_3_COMPONENTE_txt5_REMEDIACAO_17_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_3_CAMINHO_1_META_3_COMPONENTE_txt5_REMEDIACAO_17_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Solução não categorizável\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 3\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt5\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Compreensão mais aprofundada\" \n");
			action.setMerFunction( dbCon.getMERFunction(3L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Compreensão mais aprofundada");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_3_CAMINHO_1_META_4_COMPONENTE_txt3_REMEDIACAO_18_indice_18 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(4L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(4L);
			action.getGoal().getComponent().equalsIgnoreCase("txt3");
			//action.getRemediation().getId().equals(18L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_3_CAMINHO_1_META_4_COMPONENTE_txt3_REMEDIACAO_18_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_3_CAMINHO_1_META_4_COMPONENTE_txt3_REMEDIACAO_18_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Solução não categorizável\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 4\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt3\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Compreensão mais aprofundada\" \n");
			action.setMerFunction( dbCon.getMERFunction(3L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Compreensão mais aprofundada");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_3_CAMINHO_1_META_5_COMPONENTE_txt8_REMEDIACAO_19_indice_19 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(4L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(5L);
			action.getGoal().getComponent().equalsIgnoreCase("txt8");
			//action.getRemediation().getId().equals(19L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_3_CAMINHO_1_META_5_COMPONENTE_txt8_REMEDIACAO_19_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_3_CAMINHO_1_META_5_COMPONENTE_txt8_REMEDIACAO_19_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Solução não categorizável\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 5\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt8\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Compreensão mais aprofundada\" \n");
			action.setMerFunction( dbCon.getMERFunction(3L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Compreensão mais aprofundada");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_3_CAMINHO_1_META_6_COMPONENTE_txt7_REMEDIACAO_20_indice_20 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(4L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(6L);
			action.getGoal().getComponent().equalsIgnoreCase("txt7");
			//action.getRemediation().getId().equals(20L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_3_CAMINHO_1_META_6_COMPONENTE_txt7_REMEDIACAO_20_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_3_CAMINHO_1_META_6_COMPONENTE_txt7_REMEDIACAO_20_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Solução não categorizável\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 6\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt7\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Compreensão mais aprofundada\" \n");
			action.setMerFunction( dbCon.getMERFunction(3L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Compreensão mais aprofundada");
			flush();

	}
// -rule-end- 

// end_rules


// rule necessary by default

	rule compreensao_mais_aprofundada{

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(4L);

		actions
			action.getRegrasAcionadas().add("compreensao_mais_aprofundada");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: compreensao_mais_aprofundada \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Solução Não Categorizável\"\n");

			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Compreensão Mais Aprofundada\" \n");
			action.setMerFunction( dbCon.getMERFunction(2L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Restrição de Interpretação");
			flush();

	}
// -rule-end- 



	rule funcaoMRE_3_CAMINHO_1_META_1_COMPONENTE_txt1_REMEDIACAO_15_indice_15indice_17 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(4L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(1L);
			action.getGoal().getComponent().equalsIgnoreCase("txt1");
			//action.getRemediation().getId().equals(15L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_3_CAMINHO_1_META_1_COMPONENTE_txt1_REMEDIACAO_15_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_3_CAMINHO_1_META_1_COMPONENTE_txt1_REMEDIACAO_15_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Solução não categorizável\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt1\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Compreensão mais aprofundada\" \n");
			action.setMerFunction( dbCon.getMERFunction(3L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Compreensão mais aprofundada");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_3_CAMINHO_1_META_2_COMPONENTE_txt2_REMEDIACAO_16_indice_16indice_19 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(4L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(2L);
			action.getGoal().getComponent().equalsIgnoreCase("txt2");
			//action.getRemediation().getId().equals(16L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_3_CAMINHO_1_META_2_COMPONENTE_txt2_REMEDIACAO_16_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_3_CAMINHO_1_META_2_COMPONENTE_txt2_REMEDIACAO_16_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Solução não categorizável\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 2\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt2\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Compreensão mais aprofundada\" \n");
			action.setMerFunction( dbCon.getMERFunction(3L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Compreensão mais aprofundada");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_3_CAMINHO_1_META_3_COMPONENTE_txt5_REMEDIACAO_17_indice_17indice_21 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(4L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(3L);
			action.getGoal().getComponent().equalsIgnoreCase("txt5");
			//action.getRemediation().getId().equals(17L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_3_CAMINHO_1_META_3_COMPONENTE_txt5_REMEDIACAO_17_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_3_CAMINHO_1_META_3_COMPONENTE_txt5_REMEDIACAO_17_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Solução não categorizável\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 3\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt5\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Compreensão mais aprofundada\" \n");
			action.setMerFunction( dbCon.getMERFunction(3L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Compreensão mais aprofundada");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_3_CAMINHO_1_META_4_COMPONENTE_txt3_REMEDIACAO_18_indice_18indice_23 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(4L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(4L);
			action.getGoal().getComponent().equalsIgnoreCase("txt3");
			//action.getRemediation().getId().equals(18L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_3_CAMINHO_1_META_4_COMPONENTE_txt3_REMEDIACAO_18_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_3_CAMINHO_1_META_4_COMPONENTE_txt3_REMEDIACAO_18_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Solução não categorizável\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 4\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt3\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Compreensão mais aprofundada\" \n");
			action.setMerFunction( dbCon.getMERFunction(3L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Compreensão mais aprofundada");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_3_CAMINHO_1_META_5_COMPONENTE_txt8_REMEDIACAO_19_indice_19indice_25 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(4L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(5L);
			action.getGoal().getComponent().equalsIgnoreCase("txt8");
			//action.getRemediation().getId().equals(19L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_3_CAMINHO_1_META_5_COMPONENTE_txt8_REMEDIACAO_19_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_3_CAMINHO_1_META_5_COMPONENTE_txt8_REMEDIACAO_19_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Solução não categorizável\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 5\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt8\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Compreensão mais aprofundada\" \n");
			action.setMerFunction( dbCon.getMERFunction(3L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Compreensão mais aprofundada");
			flush();

	}
// -rule-end- 


	rule funcaoMRE_3_CAMINHO_1_META_6_COMPONENTE_txt7_REMEDIACAO_20_indice_20indice_27 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			((WrongAnswer)action.getAnswer()).getErrorType().getId().equals(4L);
			action.getGoal().getPath().getId().equals(1L);
			action.getGoal().getId().equals(6L);
			action.getGoal().getComponent().equalsIgnoreCase("txt7");
			//action.getRemediation().getId().equals(20L);

		actions
			action.getRegrasAcionadas().add("funcaoMRE_3_CAMINHO_1_META_6_COMPONENTE_txt7_REMEDIACAO_20_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para classificar a Função da MRE: funcaoMRE_3_CAMINHO_1_META_6_COMPONENTE_txt7_REMEDIACAO_20_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tTipo de Erro = \"Solução não categorizável\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCaminho = 1\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMeta = 6\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tComponente = \"txt7\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Classifique a Função MRE como \"Compreensão mais aprofundada\" \n");
			action.setMerFunction( dbCon.getMERFunction(3L));
			modified(ruleToHuman);
			modified(action);
			System.out.println("Função MRE: Compreensão mais aprofundada");
			flush();

	}
// -rule-end- 

// end_rules
	
}
