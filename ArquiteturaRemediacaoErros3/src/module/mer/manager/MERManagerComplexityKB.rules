package module.mer.manager;

import javax.swing.JComponent;
import module.entity.Goal;
import module.entity.Action;
import module.entity.WrongAnswer;
import util.Constants;
import module.entity.MERFunction;
import module.entity.MultipleExternalRepresentation;
import module.entity.RuleToHuman;
import module.entity.TypeMER;
import module.entity.DBConnect;
import java.util.ArrayList;

ruleBase MERManagerComplexityKB {




	rule ruleMER_1_complexity_1_0 {

		declarations
			Action action;
			Integer complexity;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			complexity == 1;

		actions
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para selecionar a MRE: ruleMER_1_complexity_1_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condi��es:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "complexity == 1;\n");
			MultipleExternalRepresentation m = dbCon.getMER(1L);
			action.setMer(m);
			action.getRegrasAcionadas().add("ruleMER_1_complexity_1_");
			modified(ruleToHuman);
			modified(action);
			System.out.println("Exibi��o de MRE 1 - mre 1");
			flush();

	}
// -rule-end- 


	rule ruleMER_2_complexity_1_1 {

		declarations
			Action action;
			Integer complexity;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			complexity == 1;

		actions
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para selecionar a MRE: ruleMER_2_complexity_1_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condi��es:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "complexity == 1;\n");
			MultipleExternalRepresentation m = dbCon.getMER(2L);
			action.setMer(m);
			action.getRegrasAcionadas().add("ruleMER_2_complexity_1_");
			modified(ruleToHuman);
			modified(action);
			System.out.println("Exibi��o de MRE 2 - mre 2");
			flush();

	}
// -rule-end- 


	rule ruleMER_3_complexity_1_2 {

		declarations
			Action action;
			Integer complexity;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			complexity == 1;

		actions
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para selecionar a MRE: ruleMER_3_complexity_1_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condi��es:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "complexity == 1;\n");
			MultipleExternalRepresentation m = dbCon.getMER(3L);
			action.setMer(m);
			action.getRegrasAcionadas().add("ruleMER_3_complexity_1_");
			modified(ruleToHuman);
			modified(action);
			System.out.println("Exibi��o de MRE 3 - mre 3");
			flush();

	}
// -rule-end- 


	rule ruleMER_4_complexity_1_3 {

		declarations
			Action action;
			Integer complexity;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			complexity == 1;

		actions
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para selecionar a MRE: ruleMER_4_complexity_1_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condi��es:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "complexity == 1;\n");
			MultipleExternalRepresentation m = dbCon.getMER(4L);
			action.setMer(m);
			action.getRegrasAcionadas().add("ruleMER_4_complexity_1_");
			modified(ruleToHuman);
			modified(action);
			System.out.println("Exibi��o de MRE 4 - mre 4");
			flush();

	}
// -rule-end- 


	rule ruleMER_5_complexity_1_4 {

		declarations
			Action action;
			Integer complexity;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			complexity == 1;

		actions
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para selecionar a MRE: ruleMER_5_complexity_1_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condi��es:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "complexity == 1;\n");
			MultipleExternalRepresentation m = dbCon.getMER(5L);
			action.setMer(m);
			action.getRegrasAcionadas().add("ruleMER_5_complexity_1_");
			modified(ruleToHuman);
			modified(action);
			System.out.println("Exibi��o de MRE 5 - mre 5");
			flush();

	}
// -rule-end- 


	rule ruleMER_6_complexity_1_5 {

		declarations
			Action action;
			Integer complexity;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			complexity == 1;

		actions
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para selecionar a MRE: ruleMER_6_complexity_1_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condi��es:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "complexity == 1;\n");
			MultipleExternalRepresentation m = dbCon.getMER(6L);
			action.setMer(m);
			action.getRegrasAcionadas().add("ruleMER_6_complexity_1_");
			modified(ruleToHuman);
			modified(action);
			System.out.println("Exibi��o de MRE 6 - mre 6");
			flush();

	}
// -rule-end- 

// end_rules
	
}
