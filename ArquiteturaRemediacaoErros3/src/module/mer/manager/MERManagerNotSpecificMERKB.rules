package module.mer.manager;

import javax.swing.JComponent;
import module.entity.Goal;
import module.entity.Action;
import module.entity.WrongAnswer;
import util.Constants;
import module.entity.MERFunction;
import module.entity.MultipleExternalRepresentation;
import module.entity.RuleToHuman;
import module.entity.TypeMER;
import module.entity.DBConnect;
import java.util.ArrayList;

ruleBase MERManagerNotSpecificMERKB {




	rule regraMRE_6_REMEDIACAO_22_criterioMRENaoEspecifica_2_indice_0 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			action.getRemediation().getMer().getId().equals(6L);
			action.getRemediation().getCriterion().getId().equals(2L);

		actions
			action.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_22_criterioMRENaoEspecifica_2_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_22_criterioMRENaoEspecifica_2_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMRE = \"MRE 6\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCritério = \"NÃO utilizar MRE específica\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = dbCon.getMER(3L);
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Exiba a MRE \"MRE 3\" \n");
			action.setMer(m);
			action.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_22_criterioMRENaoEspecifica_2_");
			modified(ruleToHuman);
			modified(action);
			System.out.println("Exibição de MRE 3 - MRE 3");
			flush();

	}
// -rule-end- 


	rule regraMRE_6_REMEDIACAO_22_criterioMRENaoEspecifica_2_indice_1 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			action.getRemediation().getMer().getId().equals(6L);
			action.getRemediation().getCriterion().getId().equals(2L);

		actions
			action.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_22_criterioMRENaoEspecifica_2_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_22_criterioMRENaoEspecifica_2_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMRE = \"MRE 6\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCritério = \"NÃO utilizar MRE específica\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = dbCon.getMER(4L);
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Exiba a MRE \"MRE 4\" \n");
			action.setMer(m);
			action.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_22_criterioMRENaoEspecifica_2_");
			modified(ruleToHuman);
			modified(action);
			System.out.println("Exibição de MRE 4 - MRE 4");
			flush();

	}
// -rule-end- 


	rule regraMRE_6_REMEDIACAO_22_criterioMRENaoEspecifica_2_indice_2 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			action.getRemediation().getMer().getId().equals(6L);
			action.getRemediation().getCriterion().getId().equals(2L);

		actions
			action.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_22_criterioMRENaoEspecifica_2_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_22_criterioMRENaoEspecifica_2_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMRE = \"MRE 6\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCritério = \"NÃO utilizar MRE específica\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = dbCon.getMER(3L);
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Exiba a MRE \"MRE 3\" \n");
			action.setMer(m);
			action.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_22_criterioMRENaoEspecifica_2_");
			modified(ruleToHuman);
			modified(action);
			System.out.println("Exibição de MRE 3 - MRE 3");
			flush();

	}
// -rule-end- 


	rule regraMRE_6_REMEDIACAO_22_criterioMRENaoEspecifica_2_indice_3 {

		declarations
			Action action;
			DBConnect dbCon;
			RuleToHuman ruleToHuman;

		localdecl

		conditions
			action.getRemediation().getMer().getId().equals(6L);
			action.getRemediation().getCriterion().getId().equals(2L);

		actions
			action.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_22_criterioMRENaoEspecifica_2_");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_22_criterioMRENaoEspecifica_2_ \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Condições:  \n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tMRE = \"MRE 6\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "\tCritério = \"NÃO utilizar MRE específica\"\n");
			ruleToHuman.setDescription(ruleToHuman.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = dbCon.getMER(4L);
			ruleToHuman.setDescription(ruleToHuman.getDescription() + "	Exiba a MRE \"MRE 4\" \n");
			action.setMer(m);
			action.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_22_criterioMRENaoEspecifica_2_");
			modified(ruleToHuman);
			modified(action);
			System.out.println("Exibição de MRE 4 - MRE 4");
			flush();

	}
// -rule-end- 

// end_rules
	
}
