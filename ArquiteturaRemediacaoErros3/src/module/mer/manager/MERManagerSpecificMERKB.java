package module.mer.manager;

import javax.swing.JComponent;
import module.entity.Goal;
import module.entity.Action;
import module.entity.WrongAnswer;
import util.Constants;
import module.entity.MultipleExternalRepresentation;
import module.entity.RuleToHuman;
import module.entity.TypeMER;
import module.entity.DBConnect;
import java.util.ArrayList;

 class Jeops_RuleBase_MERManagerSpecificMERKB extends jeops.AbstractRuleBase {




	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_0
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_0 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_0
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_0
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_0() {
         return identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_0;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_0.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_0(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_0.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_0(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_0.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_0(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_0.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_0(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_0
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_0() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_0
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_0(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_0.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_0_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_0.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_0_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_0 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_0_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_0_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_0_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_0 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_0(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_0_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_0_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_0(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_0
     */
    private void regraMRE_1_REMEDIACAO_1_criterion_1_indice_0() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_1_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_1
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_1 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_1
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_1
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_1() {
         return identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_1;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_1.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_1(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_1.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_1(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_1.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_1(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_1.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_1(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_1
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_1() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_1
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_1(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_1.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_1_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_1.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_1_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_1 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_1_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_1_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_1_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_1 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_1(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_1_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_1_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_1(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_1
     */
    private void regraMRE_2_REMEDIACAO_4_criterion_1_indice_1() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_4_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_2
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_2 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_2
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_2
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_2() {
         return identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_2;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_2.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_2(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_2.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_2(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_2.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_2(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_2.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_2(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_2
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_2() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_2
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_2(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_2.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_2_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_2.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_2_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_2 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_2_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_2_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_2_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_2 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_2(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_2_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_2_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_2(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_2
     */
    private void regraMRE_2_REMEDIACAO_5_criterion_1_indice_2() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_5_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_3
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_3 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_3
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_3
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_3() {
         return identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_3;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_3.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_3(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_3.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_3(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_3.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_3(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_3.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_3(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_3
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_3() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_3
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_3(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_3.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_3_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_3.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_3_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_3 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_3_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_3_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_3_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_3 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_3(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_3_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_3_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_3(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_3
     */
    private void regraMRE_6_REMEDIACAO_15_criterion_1_indice_3() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_15_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_4
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_4 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_4
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_4
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_4() {
         return identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_4;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_4.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_4(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_4.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_4(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_4.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_4(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_4.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_4(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_4
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_4() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_4
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_4(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_4.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_4_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_4.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_4_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_4 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_4_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_4_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_4_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_4 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_4(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_4_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_4_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_4(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_4
     */
    private void regraMRE_1_REMEDIACAO_2_criterion_1_indice_4() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_2_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_5
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_5 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_5
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_5
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_5() {
         return identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_5;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_5.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_5(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_5.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_5(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_5.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_5(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_5.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_5(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_5
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_5() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_5
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_5(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_5.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_5_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_5.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_5_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_5 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_5_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_5_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_5_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_5 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_5(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_5_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_5_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_5(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_5
     */
    private void regraMRE_2_REMEDIACAO_6_criterion_1_indice_5() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_6_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_6
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_6 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_6
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_6
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_6() {
         return identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_6;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_6.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_6(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_6.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_6(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_6.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_6(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_6.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_6(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_6
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_6() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_6
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_6(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_6.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_6_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_6.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_6_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_6 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_6_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_6_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_6_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_6 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_6(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_6_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_6_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_6(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_6
     */
    private void regraMRE_6_REMEDIACAO_16_criterion_1_indice_6() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_16_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_7
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_7 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_7
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_7
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_7() {
         return identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_7;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_7.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_7(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_7.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_7(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_7.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_7(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_7.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_7(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_7
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_7() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_7
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_7(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_7.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_7_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_7.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_7_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_7 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_7_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_7_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_7_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_7 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_7(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_7_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_7_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_7(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_7
     */
    private void regraMRE_2_REMEDIACAO_3_criterion_1_indice_7() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_3_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_8
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_8 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_8
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_8
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_8() {
         return identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_8;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_8.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_8(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_8.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_8(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_8.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_8(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_8.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_8(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_8
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_8() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_8
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_8(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_8.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_8_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_8.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_8_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_8 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_8_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_8_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_8_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_8 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_8(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_8_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_8_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_8(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_8
     */
    private void regraMRE_2_REMEDIACAO_7_criterion_1_indice_8() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_7_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_9
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_9 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_9
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_9
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_9() {
         return identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_9;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_9.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_9(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_9.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_9(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_9.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_9(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_9.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_9(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_9
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_9() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_9
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_9(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_9.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_9_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_9.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_9_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_9 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_9_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_9_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_9_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_9 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_9(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_9_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_9_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_9(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_9
     */
    private void regraMRE_6_REMEDIACAO_17_criterion_1_indice_9() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_17_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_10
     */
    private String[] identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_10 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_10
     *
     * @return the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_10
     */
    private String[] getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_10() {
         return identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_10;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_10.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_10(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_10.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_10(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_10.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_10(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_10.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_10(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_10
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_10() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_10
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_10(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_10.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(4L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_10_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(4L));
    }

    /**
     * Condition 1 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_10.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_10_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_10 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_10_cond(int index) {
        switch (index) {
            case 0: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_10_cond_0();
            case 1: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_10_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_10 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_10(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_10_cond_0()) return false;
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_10_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_10(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_10
     */
    private void regraMRE_4_REMEDIACAO_8_criterion_1_indice_10() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_4_REMEDIACAO_8_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 4\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(4L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 4\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 4 - MRE 4");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_11
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_11 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_11
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_11
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_11() {
         return identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_11;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_11.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_11(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_11.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_11(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_11.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_11(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_11.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_11(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_11
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_11() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_11
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_11(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_11.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_11_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_11.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_11_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_11 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_11_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_11_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_11_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_11 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_11(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_11_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_11_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_11(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_11
     */
    private void regraMRE_6_REMEDIACAO_18_criterion_1_indice_11() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_18_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_12
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_12 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_12
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_12
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_12() {
         return identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_12;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_12.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_12(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_12.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_12(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_12.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_12(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_12.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_12(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_12
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_12() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_12
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_12(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_12.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_12_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_12.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_12_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_12 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_12_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_12_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_12_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_12 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_12(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_12_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_12_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_12(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_12
     */
    private void regraMRE_5_REMEDIACAO_13_criterion_1_indice_12() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_13_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_13
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_13 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_13
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_13
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_13() {
         return identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_13;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_13.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_13(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_13.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_13(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_13.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_13(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_13.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_13(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_13
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_13() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_13
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_13(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_13.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_13_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_13.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_13_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_13 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_13_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_13_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_13_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_13 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_13(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_13_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_13_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_13(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_13
     */
    private void regraMRE_5_REMEDIACAO_14_criterion_1_indice_13() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_14_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_14
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_14 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_14
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_14
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_14() {
         return identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_14;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_14.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_14(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_14.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_14(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_14.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_14(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_14.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_14(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_14
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_14() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_14
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_14(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_14.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_14_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_14.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_14_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_14 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_14_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_14_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_14_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_14 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_14(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_14_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_14_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_14(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_14
     */
    private void regraMRE_6_REMEDIACAO_20_criterion_1_indice_14() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_20_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_15
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_15 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_15
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_15
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_15() {
         return identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_15;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_15.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_15(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_15.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_15(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_15.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_15(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_15.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_15(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_15
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_15() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_15
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_15(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_15.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_15_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_15.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_15_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_15 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_15_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_15_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_15_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_15 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_15(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_15_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_15_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_15(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_15
     */
    private void regraMRE_1_REMEDIACAO_1_criterion_1_indice_15() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_1_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_16
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_16 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_16
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_16
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_16() {
         return identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_16;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_16.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_16(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_16.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_16(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_16.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_16(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_16.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_16(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_16
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_16() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_16
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_16(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_16.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_16_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_16.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_16_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_16 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_16_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_16_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_16_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_16 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_16(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_16_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_16_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_16(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_16
     */
    private void regraMRE_2_REMEDIACAO_4_criterion_1_indice_16() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_4_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_17
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_17 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_17
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_17
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_17() {
         return identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_17;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_17.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_17(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_17.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_17(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_17.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_17(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_17.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_17(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_17
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_17() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_17
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_17(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_17.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_17_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_17.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_17_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_17 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_17_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_17_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_17_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_17 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_17(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_17_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_17_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_17(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_17
     */
    private void regraMRE_2_REMEDIACAO_5_criterion_1_indice_17() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_5_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_18
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_18 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_18
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_18
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_18() {
         return identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_18;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_18.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_18(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_18.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_18(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_18.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_18(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_18.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_18(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_18
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_18() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_18
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_18(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_18.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_18_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_18.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_18_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_18 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_18_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_18_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_18_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_18 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_18(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_18_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_18_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_18(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_18
     */
    private void regraMRE_6_REMEDIACAO_15_criterion_1_indice_18() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_15_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_19
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_19 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_19
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_19
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_19() {
         return identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_19;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_19.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_19(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_19.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_19(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_19.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_19(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_19.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_19(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_19
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_19() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_19
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_19(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_19.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_19_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_19.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_19_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_19 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_19_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_19_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_19_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_19 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_19(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_19_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_19_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_19(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_19
     */
    private void regraMRE_1_REMEDIACAO_2_criterion_1_indice_19() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_2_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_20
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_20 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_20
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_20
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_20() {
         return identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_20;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_20.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_20(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_20.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_20(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_20.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_20(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_20.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_20(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_20
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_20() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_20
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_20(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_20.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_20_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_20.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_20_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_20 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_20_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_20_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_20_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_20 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_20(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_20_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_20_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_20(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_20
     */
    private void regraMRE_2_REMEDIACAO_6_criterion_1_indice_20() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_6_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_21
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_21 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_21
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_21
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_21() {
         return identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_21;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_21.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_21(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_21.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_21(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_21.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_21(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_21.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_21(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_21
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_21() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_21
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_21(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_21.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_21_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_21.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_21_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_21 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_21_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_21_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_21_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_21 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_21(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_21_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_21_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_21(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_21
     */
    private void regraMRE_6_REMEDIACAO_16_criterion_1_indice_21() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_16_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_22
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_22 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_22
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_22
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_22() {
         return identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_22;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_22.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_22(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_22.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_22(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_22.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_22(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_22.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_22(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_22
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_22() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_22
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_22(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_22.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_22_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_22.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_22_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_22 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_22_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_22_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_22_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_22 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_22(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_22_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_22_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_22(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_22
     */
    private void regraMRE_2_REMEDIACAO_3_criterion_1_indice_22() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_3_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_23
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_23 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_23
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_23
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_23() {
         return identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_23;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_23.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_23(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_23.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_23(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_23.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_23(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_23.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_23(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_23
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_23() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_23
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_23(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_23.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_23_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_23.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_23_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_23 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_23_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_23_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_23_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_23 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_23(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_23_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_23_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_23(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_23
     */
    private void regraMRE_2_REMEDIACAO_7_criterion_1_indice_23() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_7_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_24
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_24 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_24
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_24
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_24() {
         return identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_24;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_24.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_24(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_24.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_24(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_24.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_24(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_24.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_24(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_24
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_24() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_24
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_24(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_24.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_24_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_24.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_24_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_24 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_24_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_24_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_24_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_24 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_24(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_24_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_24_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_24(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_24
     */
    private void regraMRE_6_REMEDIACAO_17_criterion_1_indice_24() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_17_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_25
     */
    private String[] identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_25 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_25
     *
     * @return the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_25
     */
    private String[] getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_25() {
         return identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_25;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_25.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_25(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_25.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_25(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_25.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_25(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_25.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_25(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_25
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_25() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_25
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_25(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_25.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(4L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_25_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(4L));
    }

    /**
     * Condition 1 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_25.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_25_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_25 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_25_cond(int index) {
        switch (index) {
            case 0: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_25_cond_0();
            case 1: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_25_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_25 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_25(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_25_cond_0()) return false;
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_25_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_25(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_25
     */
    private void regraMRE_4_REMEDIACAO_8_criterion_1_indice_25() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_4_REMEDIACAO_8_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 4\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(4L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 4\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 4 - MRE 4");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_26
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_26 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_26
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_26
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_26() {
         return identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_26;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_26.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_26(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_26.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_26(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_26.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_26(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_26.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_26(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_26
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_26() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_26
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_26(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_26.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_26_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_26.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_26_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_26 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_26_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_26_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_26_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_26 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_26(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_26_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_26_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_26(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_26
     */
    private void regraMRE_6_REMEDIACAO_18_criterion_1_indice_26() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_18_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_27
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_27 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_27
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_27
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_27() {
         return identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_27;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_27.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_27(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_27.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_27(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_27.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_27(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_27.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_27(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_27
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_27() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_27
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_27(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_27.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_27_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_27.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_27_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_27 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_27_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_27_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_27_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_27 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_27(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_27_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_27_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_27(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_27
     */
    private void regraMRE_5_REMEDIACAO_13_criterion_1_indice_27() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_13_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_28
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_28 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_28
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_28
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_28() {
         return identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_28;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_28.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_28(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_28.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_28(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_28.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_28(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_28.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_28(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_28
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_28() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_28
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_28(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_28.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_28_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_28.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_28_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_28 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_28_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_28_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_28_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_28 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_28(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_28_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_28_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_28(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_28
     */
    private void regraMRE_5_REMEDIACAO_14_criterion_1_indice_28() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_14_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_29
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_29 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_29
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_29
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_29() {
         return identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_29;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_29.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_29(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_29.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_29(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_29.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_29(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_29.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_29(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_29
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_29() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_29
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_29(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_29.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_29_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_29.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_29_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_29 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_29_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_29_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_29_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_29 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_29(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_29_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_29_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_29(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_29
     */
    private void regraMRE_6_REMEDIACAO_20_criterion_1_indice_29() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_20_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibi��o de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_30
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_30 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_30
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_30
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_30() {
         return identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_30;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_30.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_30(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_30.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_30(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_30.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_30(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_30.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_30(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_30
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_30() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_30
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_30(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_30.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_30_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_30.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_30_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_30 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_30_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_30_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_30_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_30 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_30(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_30_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_30_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_30(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_30
     */
    private void regraMRE_1_REMEDIACAO_1_criterion_1_indice_30() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_1_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_31
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_31 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_31
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_31
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_31() {
         return identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_31;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_31.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_31(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_31.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_31(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_31.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_31(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_31.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_31(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_31
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_31() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_31
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_31(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_31.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_31_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_31.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_31_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_31 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_31_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_31_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_31_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_31 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_31(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_31_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_31_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_31(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_31
     */
    private void regraMRE_2_REMEDIACAO_4_criterion_1_indice_31() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_4_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_32
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_32 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_32
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_32
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_32() {
         return identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_32;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_32.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_32(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_32.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_32(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_32.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_32(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_32.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_32(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_32
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_32() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_32
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_32(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_32.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_32_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_32.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_32_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_32 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_32_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_32_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_32_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_32 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_32(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_32_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_32_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_32(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_32
     */
    private void regraMRE_2_REMEDIACAO_5_criterion_1_indice_32() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_5_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_33
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_33 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_33
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_33
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_33() {
         return identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_33;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_33.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_33(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_33.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_33(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_33.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_33(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_33.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_33(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_33
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_33() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_33
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_33(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_33.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_33_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_33.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_33_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_33 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_33_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_33_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_33_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_33 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_33(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_33_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_33_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_33(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_33
     */
    private void regraMRE_6_REMEDIACAO_15_criterion_1_indice_33() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_15_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_34
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_34 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_34
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_34
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_34() {
         return identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_34;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_34.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_34(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_34.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_34(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_34.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_34(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_34.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_34(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_34
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_34() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_34
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_34(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_34.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_34_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_34.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_34_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_34 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_34_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_34_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_34_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_34 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_34(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_34_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_34_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_34(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_34
     */
    private void regraMRE_1_REMEDIACAO_2_criterion_1_indice_34() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_2_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_35
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_35 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_35
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_35
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_35() {
         return identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_35;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_35.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_35(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_35.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_35(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_35.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_35(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_35.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_35(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_35
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_35() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_35
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_35(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_35.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_35_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_35.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_35_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_35 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_35_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_35_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_35_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_35 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_35(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_35_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_35_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_35(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_35
     */
    private void regraMRE_2_REMEDIACAO_6_criterion_1_indice_35() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_6_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_36
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_36 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_36
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_36
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_36() {
         return identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_36;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_36.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_36(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_36.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_36(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_36.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_36(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_36.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_36(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_36
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_36() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_36
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_36(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_36.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_36_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_36.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_36_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_36 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_36_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_36_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_36_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_36 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_36(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_36_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_36_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_36(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_36
     */
    private void regraMRE_6_REMEDIACAO_16_criterion_1_indice_36() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_16_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_37
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_37 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_37
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_37
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_37() {
         return identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_37;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_37.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_37(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_37.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_37(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_37.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_37(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_37.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_37(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_37
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_37() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_37
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_37(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_37.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_37_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_37.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_37_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_37 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_37_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_37_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_37_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_37 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_37(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_37_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_37_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_37(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_37
     */
    private void regraMRE_2_REMEDIACAO_3_criterion_1_indice_37() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_3_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_38
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_38 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_38
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_38
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_38() {
         return identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_38;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_38.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_38(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_38.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_38(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_38.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_38(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_38.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_38(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_38
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_38() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_38
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_38(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_38.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_38_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_38.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_38_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_38 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_38_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_38_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_38_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_38 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_38(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_38_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_38_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_38(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_38
     */
    private void regraMRE_2_REMEDIACAO_7_criterion_1_indice_38() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_7_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_39
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_39 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_39
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_39
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_39() {
         return identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_39;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_39.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_39(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_39.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_39(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_39.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_39(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_39.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_39(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_39
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_39() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_39
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_39(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_39.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_39_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_39.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_39_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_39 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_39_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_39_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_39_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_39 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_39(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_39_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_39_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_39(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_39
     */
    private void regraMRE_6_REMEDIACAO_17_criterion_1_indice_39() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_17_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_40
     */
    private String[] identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_40 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_40
     *
     * @return the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_40
     */
    private String[] getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_40() {
         return identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_40;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_40.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_40(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_40.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_40(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_40.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_40(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_40.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_40(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_40
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_40() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_40
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_40(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_40.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(4L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_40_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(4L));
    }

    /**
     * Condition 1 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_40.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_40_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_40 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_40_cond(int index) {
        switch (index) {
            case 0: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_40_cond_0();
            case 1: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_40_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_40 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_40(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_40_cond_0()) return false;
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_40_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_40(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_40
     */
    private void regraMRE_4_REMEDIACAO_8_criterion_1_indice_40() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_4_REMEDIACAO_8_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 4\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(4L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 4\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 4 - MRE 4");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_41
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_41 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_41
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_41
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_41() {
         return identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_41;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_41.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_41(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_41.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_41(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_41.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_41(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_41.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_41(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_41
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_41() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_41
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_41(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_41.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_41_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_41.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_41_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_41 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_41_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_41_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_41_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_41 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_41(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_41_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_41_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_41(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_41
     */
    private void regraMRE_6_REMEDIACAO_18_criterion_1_indice_41() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_18_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_42
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_42 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_42
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_42
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_42() {
         return identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_42;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_42.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_42(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_42.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_42(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_42.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_42(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_42.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_42(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_42
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_42() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_42
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_42(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_42.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_42_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_42.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_42_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_42 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_42_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_42_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_42_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_42 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_42(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_42_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_42_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_42(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_42
     */
    private void regraMRE_5_REMEDIACAO_13_criterion_1_indice_42() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_13_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_43
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_43 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_43
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_43
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_43() {
         return identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_43;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_43.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_43(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_43.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_43(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_43.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_43(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_43.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_43(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_43
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_43() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_43
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_43(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_43.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_43_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_43.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_43_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_43 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_43_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_43_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_43_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_43 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_43(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_43_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_43_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_43(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_43
     */
    private void regraMRE_5_REMEDIACAO_14_criterion_1_indice_43() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_14_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_44
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_44 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_44
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_44
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_44() {
         return identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_44;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_44.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_44(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_44.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_44(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_44.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_44(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_44.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_44(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_44
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_44() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_44
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_44(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_44.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_44_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_44.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_44_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_44 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_44_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_44_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_44_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_44 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_44(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_44_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_44_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_44(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_44
     */
    private void regraMRE_6_REMEDIACAO_20_criterion_1_indice_44() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_20_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_45
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_45 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_45
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_45
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_45() {
         return identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_45;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_45.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_45(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_45.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_45(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_45.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_45(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_45.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_45(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_45
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_45() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_45
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_45(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_45.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_45_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_45.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_45_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_45 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_45_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_45_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_45_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_45 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_45(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_45_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_45_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_45(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_45
     */
    private void regraMRE_1_REMEDIACAO_1_criterion_1_indice_45() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_1_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_46
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_46 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_46
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_46
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_46() {
         return identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_46;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_46.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_46(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_46.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_46(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_46.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_46(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_46.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_46(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_46
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_46() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_46
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_46(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_46.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_46_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_46.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_46_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_46 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_46_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_46_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_46_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_46 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_46(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_46_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_46_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_46(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_46
     */
    private void regraMRE_2_REMEDIACAO_4_criterion_1_indice_46() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_4_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_47
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_47 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_47
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_47
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_47() {
         return identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_47;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_47.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_47(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_47.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_47(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_47.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_47(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_47.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_47(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_47
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_47() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_47
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_47(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_47.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_47_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_47.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_47_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_47 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_47_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_47_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_47_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_47 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_47(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_47_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_47_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_47(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_47
     */
    private void regraMRE_2_REMEDIACAO_5_criterion_1_indice_47() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_5_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_48
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_48 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_48
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_48
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_48() {
         return identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_48;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_48.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_48(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_48.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_48(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_48.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_48(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_48.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_48(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_48
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_48() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_48
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_48(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_48.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_48_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_48.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_48_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_48 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_48_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_48_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_48_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_48 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_48(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_48_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_48_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_48(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_48
     */
    private void regraMRE_6_REMEDIACAO_15_criterion_1_indice_48() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_15_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_49
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_49 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_49
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_49
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_49() {
         return identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_49;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_49.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_49(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_49.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_49(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_49.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_49(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_49.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_49(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_49
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_49() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_49
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_49(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_49.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_49_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_49.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_49_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_49 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_49_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_49_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_49_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_49 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_49(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_49_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_49_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_49(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_49
     */
    private void regraMRE_1_REMEDIACAO_2_criterion_1_indice_49() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_2_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_50
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_50 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_50
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_50
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_50() {
         return identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_50;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_50.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_50(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_50.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_50(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_50.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_50(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_50.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_50(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_50
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_50() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_50
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_50(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_50.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_50_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_50.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_50_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_50 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_50_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_50_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_50_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_50 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_50(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_50_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_50_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_50(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_50
     */
    private void regraMRE_2_REMEDIACAO_6_criterion_1_indice_50() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_6_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_51
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_51 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_51
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_51
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_51() {
         return identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_51;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_51.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_51(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_51.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_51(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_51.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_51(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_51.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_51(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_51
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_51() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_51
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_51(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_51.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_51_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_51.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_51_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_51 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_51_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_51_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_51_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_51 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_51(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_51_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_51_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_51(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_51
     */
    private void regraMRE_6_REMEDIACAO_16_criterion_1_indice_51() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_16_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_52
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_52 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_52
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_52
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_52() {
         return identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_52;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_52.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_52(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_52.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_52(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_52.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_52(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_52.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_52(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_52
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_52() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_52
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_52(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_52.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_52_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_52.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_52_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_52 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_52_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_52_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_52_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_52 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_52(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_52_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_52_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_52(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_52
     */
    private void regraMRE_2_REMEDIACAO_3_criterion_1_indice_52() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_3_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_53
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_53 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_53
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_53
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_53() {
         return identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_53;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_53.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_53(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_53.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_53(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_53.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_53(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_53.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_53(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_53
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_53() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_53
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_53(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_53.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_53_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_53.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_53_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_53 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_53_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_53_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_53_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_53 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_53(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_53_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_53_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_53(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_53
     */
    private void regraMRE_2_REMEDIACAO_7_criterion_1_indice_53() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_7_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_54
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_54 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_54
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_54
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_54() {
         return identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_54;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_54.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_54(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_54.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_54(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_54.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_54(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_54.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_54(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_54
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_54() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_54
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_54(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_54.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_54_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_54.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_54_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_54 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_54_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_54_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_54_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_54 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_54(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_54_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_54_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_54(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_54
     */
    private void regraMRE_6_REMEDIACAO_17_criterion_1_indice_54() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_17_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_55
     */
    private String[] identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_55 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_55
     *
     * @return the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_55
     */
    private String[] getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_55() {
         return identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_55;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_55.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_55(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_55.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_55(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_55.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_55(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_55.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_55(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_55
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_55() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_55
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_55(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_55.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(4L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_55_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(4L));
    }

    /**
     * Condition 1 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_55.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_55_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_55 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_55_cond(int index) {
        switch (index) {
            case 0: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_55_cond_0();
            case 1: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_55_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_55 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_55(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_55_cond_0()) return false;
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_55_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_55(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_55
     */
    private void regraMRE_4_REMEDIACAO_8_criterion_1_indice_55() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_4_REMEDIACAO_8_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 4\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(4L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 4\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 4 - MRE 4");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_56
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_56 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_56
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_56
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_56() {
         return identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_56;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_56.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_56(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_56.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_56(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_56.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_56(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_56.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_56(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_56
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_56() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_56
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_56(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_56.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_56_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_56.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_56_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_56 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_56_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_56_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_56_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_56 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_56(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_56_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_56_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_56(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_56
     */
    private void regraMRE_6_REMEDIACAO_18_criterion_1_indice_56() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_18_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_57
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_57 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_57
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_57
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_57() {
         return identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_57;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_57.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_57(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_57.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_57(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_57.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_57(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_57.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_57(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_57
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_57() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_57
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_57(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_57.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_57_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_57.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_57_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_57 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_57_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_57_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_57_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_57 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_57(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_57_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_57_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_57(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_57
     */
    private void regraMRE_5_REMEDIACAO_13_criterion_1_indice_57() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_13_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_58
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_58 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_58
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_58
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_58() {
         return identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_58;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_58.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_58(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_58.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_58(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_58.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_58(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_58.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_58(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_58
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_58() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_58
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_58(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_58.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_58_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_58.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_58_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_58 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_58_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_58_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_58_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_58 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_58(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_58_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_58_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_58(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_58
     */
    private void regraMRE_5_REMEDIACAO_14_criterion_1_indice_58() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_14_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_59
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_59 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_59
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_59
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_59() {
         return identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_59;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_59.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_59(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_59.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_59(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_59.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_59(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_59.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_59(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_59
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_59() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_59
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_59(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_59.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_59_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_59.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_59_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_59 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_59_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_59_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_59_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_59 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_59(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_59_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_59_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_59(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_59
     */
    private void regraMRE_6_REMEDIACAO_20_criterion_1_indice_59() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_20_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_60
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_60 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_60
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_60
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_60() {
         return identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_60;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_60.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_60(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_60.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_60(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_60.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_60(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_60.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_60(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_60
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_60() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_60
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_60(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_60.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_60_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_60.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_60_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_60 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_60_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_60_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_60_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_60 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_60(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_60_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_60_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_60(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_60
     */
    private void regraMRE_1_REMEDIACAO_1_criterion_1_indice_60() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_1_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_61
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_61 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_61
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_61
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_61() {
         return identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_61;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_61.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_61(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_61.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_61(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_61.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_61(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_61.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_61(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_61
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_61() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_61
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_61(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_61.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_61_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_61.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_61_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_61 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_61_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_61_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_61_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_61 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_61(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_61_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_61_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_61(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_61
     */
    private void regraMRE_2_REMEDIACAO_4_criterion_1_indice_61() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_4_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_62
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_62 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_62
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_62
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_62() {
         return identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_62;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_62.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_62(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_62.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_62(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_62.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_62(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_62.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_62(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_62
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_62() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_62
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_62(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_62.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_62_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_62.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_62_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_62 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_62_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_62_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_62_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_62 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_62(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_62_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_62_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_62(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_62
     */
    private void regraMRE_2_REMEDIACAO_5_criterion_1_indice_62() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_5_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_63
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_63 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_63
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_63
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_63() {
         return identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_63;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_63.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_63(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_63.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_63(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_63.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_63(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_63.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_63(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_63
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_63() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_63
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_63(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_63.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_63_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_63.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_63_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_63 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_63_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_63_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_63_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_63 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_63(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_63_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_63_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_63(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_63
     */
    private void regraMRE_6_REMEDIACAO_15_criterion_1_indice_63() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_15_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_64
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_64 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_64
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_64
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_64() {
         return identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_64;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_64.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_64(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_64.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_64(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_64.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_64(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_64.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_64(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_64
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_64() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_64
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_64(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_64.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_64_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_64.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_64_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_64 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_64_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_64_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_64_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_64 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_64(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_64_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_64_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_64(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_64
     */
    private void regraMRE_1_REMEDIACAO_2_criterion_1_indice_64() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_2_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_65
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_65 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_65
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_65
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_65() {
         return identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_65;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_65.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_65(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_65.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_65(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_65.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_65(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_65.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_65(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_65
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_65() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_65
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_65(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_65.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_65_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_65.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_65_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_65 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_65_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_65_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_65_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_65 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_65(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_65_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_65_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_65(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_65
     */
    private void regraMRE_2_REMEDIACAO_6_criterion_1_indice_65() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_6_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_66
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_66 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_66
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_66
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_66() {
         return identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_66;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_66.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_66(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_66.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_66(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_66.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_66(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_66.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_66(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_66
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_66() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_66
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_66(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_66.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_66_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_66.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_66_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_66 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_66_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_66_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_66_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_66 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_66(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_66_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_66_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_66(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_66
     */
    private void regraMRE_6_REMEDIACAO_16_criterion_1_indice_66() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_16_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_67
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_67 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_67
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_67
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_67() {
         return identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_67;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_67.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_67(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_67.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_67(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_67.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_67(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_67.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_67(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_67
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_67() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_67
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_67(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_67.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_67_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_67.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_67_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_67 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_67_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_67_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_67_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_67 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_67(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_67_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_67_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_67(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_67
     */
    private void regraMRE_2_REMEDIACAO_3_criterion_1_indice_67() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_3_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_68
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_68 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_68
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_68
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_68() {
         return identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_68;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_68.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_68(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_68.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_68(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_68.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_68(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_68.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_68(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_68
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_68() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_68
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_68(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_68.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_68_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_68.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_68_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_68 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_68_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_68_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_68_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_68 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_68(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_68_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_68_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_68(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_68
     */
    private void regraMRE_2_REMEDIACAO_7_criterion_1_indice_68() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_7_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_69
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_69 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_69
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_69
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_69() {
         return identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_69;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_69.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_69(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_69.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_69(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_69.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_69(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_69.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_69(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_69
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_69() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_69
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_69(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_69.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_69_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_69.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_69_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_69 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_69_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_69_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_69_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_69 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_69(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_69_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_69_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_69(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_69
     */
    private void regraMRE_6_REMEDIACAO_17_criterion_1_indice_69() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_17_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_70
     */
    private String[] identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_70 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_70
     *
     * @return the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_70
     */
    private String[] getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_70() {
         return identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_70;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_70.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_70(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_70.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_70(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_70.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_70(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_70.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_70(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_70
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_70() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_70
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_70(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_70.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(4L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_70_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(4L));
    }

    /**
     * Condition 1 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_70.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_70_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_70 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_70_cond(int index) {
        switch (index) {
            case 0: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_70_cond_0();
            case 1: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_70_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_70 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_70(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_70_cond_0()) return false;
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_70_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_70(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_70
     */
    private void regraMRE_4_REMEDIACAO_8_criterion_1_indice_70() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_4_REMEDIACAO_8_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 4\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(4L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 4\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 4 - MRE 4");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_71
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_71 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_71
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_71
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_71() {
         return identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_71;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_71.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_71(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_71.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_71(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_71.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_71(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_71.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_71(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_71
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_71() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_71
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_71(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_71.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_71_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_71.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_71_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_71 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_71_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_71_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_71_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_71 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_71(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_71_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_71_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_71(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_71
     */
    private void regraMRE_6_REMEDIACAO_18_criterion_1_indice_71() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_18_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_72
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_72 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_72
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_72
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_72() {
         return identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_72;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_72.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_72(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_72.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_72(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_72.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_72(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_72.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_72(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_72
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_72() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_72
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_72(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_72.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_72_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_72.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_72_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_72 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_72_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_72_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_72_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_72 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_72(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_72_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_72_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_72(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_72
     */
    private void regraMRE_5_REMEDIACAO_13_criterion_1_indice_72() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_13_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_73
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_73 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_73
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_73
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_73() {
         return identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_73;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_73.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_73(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_73.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_73(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_73.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_73(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_73.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_73(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_73
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_73() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_73
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_73(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_73.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_73_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_73.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_73_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_73 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_73_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_73_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_73_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_73 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_73(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_73_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_73_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_73(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_73
     */
    private void regraMRE_5_REMEDIACAO_14_criterion_1_indice_73() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_14_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_74
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_74 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_74
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_74
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_74() {
         return identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_74;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_74.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_74(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_74.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_74(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_74.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_74(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_74.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_74(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_74
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_74() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_74
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_74(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_74.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_74_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_74.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_74_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_74 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_74_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_74_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_74_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_74 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_74(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_74_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_74_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_74(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_74
     */
    private void regraMRE_6_REMEDIACAO_20_criterion_1_indice_74() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_20_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_75
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_75 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_75
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_75
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_75() {
         return identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_75;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_75.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_75(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_75.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_75(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_75.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_75(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_75.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_75(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_75
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_75() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_75
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_75(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_75.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_75_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_75.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_75_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_75 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_75_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_75_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_75_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_75 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_75(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_75_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_75_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_75(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_75
     */
    private void regraMRE_1_REMEDIACAO_1_criterion_1_indice_75() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_1_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_76
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_76 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_76
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_76
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_76() {
         return identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_76;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_76.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_76(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_76.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_76(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_76.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_76(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_76.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_76(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_76
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_76() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_76
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_76(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_76.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_76_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_76.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_76_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_76 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_76_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_76_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_76_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_76 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_76(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_76_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_76_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_76(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_76
     */
    private void regraMRE_2_REMEDIACAO_4_criterion_1_indice_76() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_4_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_77
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_77 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_77
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_77
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_77() {
         return identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_77;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_77.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_77(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_77.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_77(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_77.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_77(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_77.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_77(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_77
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_77() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_77
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_77(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_77.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_77_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_77.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_77_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_77 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_77_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_77_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_77_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_77 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_77(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_77_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_77_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_77(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_77
     */
    private void regraMRE_2_REMEDIACAO_5_criterion_1_indice_77() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_5_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_78
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_78 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_78
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_78
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_78() {
         return identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_78;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_78.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_78(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_78.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_78(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_78.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_78(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_78.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_78(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_78
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_78() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_78
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_78(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_78.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_78_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_78.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_78_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_78 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_78_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_78_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_78_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_78 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_78(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_78_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_78_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_78(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_78
     */
    private void regraMRE_6_REMEDIACAO_15_criterion_1_indice_78() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_15_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_79
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_79 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_79
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_79
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_79() {
         return identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_79;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_79.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_79(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_79.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_79(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_79.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_79(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_79.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_79(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_79
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_79() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_79
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_79(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_79.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_79_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_79.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_79_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_79 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_79_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_79_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_79_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_79 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_79(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_79_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_79_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_79(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_79
     */
    private void regraMRE_1_REMEDIACAO_2_criterion_1_indice_79() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_2_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_80
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_80 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_80
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_80
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_80() {
         return identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_80;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_80.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_80(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_80.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_80(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_80.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_80(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_80.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_80(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_80
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_80() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_80
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_80(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_80.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_80_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_80.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_80_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_80 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_80_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_80_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_80_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_80 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_80(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_80_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_80_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_80(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_80
     */
    private void regraMRE_2_REMEDIACAO_6_criterion_1_indice_80() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_6_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_81
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_81 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_81
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_81
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_81() {
         return identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_81;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_81.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_81(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_81.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_81(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_81.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_81(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_81.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_81(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_81
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_81() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_81
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_81(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_81.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_81_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_81.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_81_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_81 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_81_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_81_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_81_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_81 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_81(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_81_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_81_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_81(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_81
     */
    private void regraMRE_6_REMEDIACAO_16_criterion_1_indice_81() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_16_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_82
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_82 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_82
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_82
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_82() {
         return identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_82;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_82.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_82(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_82.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_82(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_82.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_82(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_82.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_82(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_82
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_82() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_82
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_82(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_82.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_82_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_82.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_82_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_82 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_82_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_82_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_82_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_82 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_82(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_82_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_82_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_82(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_82
     */
    private void regraMRE_2_REMEDIACAO_3_criterion_1_indice_82() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_3_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_83
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_83 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_83
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_83
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_83() {
         return identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_83;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_83.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_83(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_83.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_83(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_83.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_83(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_83.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_83(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_83
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_83() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_83
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_83(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_83.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_83_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_83.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_83_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_83 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_83_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_83_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_83_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_83 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_83(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_83_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_83_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_83(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_83
     */
    private void regraMRE_2_REMEDIACAO_7_criterion_1_indice_83() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_7_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_84
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_84 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_84
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_84
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_84() {
         return identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_84;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_84.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_84(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_84.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_84(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_84.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_84(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_84.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_84(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_84
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_84() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_84
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_84(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_84.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_84_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_84.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_84_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_84 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_84_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_84_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_84_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_84 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_84(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_84_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_84_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_84(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_84
     */
    private void regraMRE_6_REMEDIACAO_17_criterion_1_indice_84() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_17_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_85
     */
    private String[] identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_85 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_85
     *
     * @return the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_85
     */
    private String[] getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_85() {
         return identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_85;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_85.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_85(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_85.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_85(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_85.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_85(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_85.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_85(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_85
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_85() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_85
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_85(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_85.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(4L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_85_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(4L));
    }

    /**
     * Condition 1 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_85.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_85_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_85 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_85_cond(int index) {
        switch (index) {
            case 0: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_85_cond_0();
            case 1: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_85_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_85 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_85(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_85_cond_0()) return false;
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_85_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_85(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_85
     */
    private void regraMRE_4_REMEDIACAO_8_criterion_1_indice_85() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_4_REMEDIACAO_8_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 4\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(4L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 4\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 4 - MRE 4");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_86
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_86 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_86
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_86
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_86() {
         return identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_86;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_86.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_86(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_86.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_86(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_86.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_86(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_86.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_86(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_86
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_86() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_86
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_86(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_86.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_86_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_86.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_86_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_86 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_86_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_86_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_86_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_86 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_86(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_86_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_86_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_86(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_86
     */
    private void regraMRE_6_REMEDIACAO_18_criterion_1_indice_86() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_18_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_87
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_87 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_87
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_87
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_87() {
         return identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_87;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_87.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_87(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_87.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_87(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_87.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_87(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_87.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_87(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_87
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_87() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_87
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_87(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_87.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_87_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_87.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_87_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_87 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_87_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_87_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_87_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_87 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_87(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_87_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_87_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_87(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_87
     */
    private void regraMRE_5_REMEDIACAO_13_criterion_1_indice_87() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_13_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_88
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_88 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_88
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_88
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_88() {
         return identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_88;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_88.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_88(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_88.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_88(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_88.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_88(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_88.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_88(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_88
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_88() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_88
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_88(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_88.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_88_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_88.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_88_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_88 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_88_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_88_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_88_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_88 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_88(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_88_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_88_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_88(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_88
     */
    private void regraMRE_5_REMEDIACAO_14_criterion_1_indice_88() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_14_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_89
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_89 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_89
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_89
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_89() {
         return identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_89;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_89.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_89(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_89.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_89(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_89.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_89(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_89.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_89(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_89
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_89() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_89
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_89(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_89.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_89_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_89.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_89_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_89 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_89_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_89_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_89_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_89 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_89(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_89_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_89_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_89(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_89
     */
    private void regraMRE_6_REMEDIACAO_20_criterion_1_indice_89() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_20_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_90
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_90 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_90
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_90
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_90() {
         return identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_90;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_90.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_90(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_90.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_90(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_90.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_90(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_90.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_90(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_90
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_90() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_90
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_90(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_90.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_90_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_90.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_90_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_90 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_90_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_90_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_90_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_90 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_90(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_90_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_90_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_90(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_90
     */
    private void regraMRE_1_REMEDIACAO_1_criterion_1_indice_90() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_1_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_91
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_91 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_91
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_91
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_91() {
         return identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_91;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_91.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_91(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_91.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_91(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_91.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_91(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_91.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_91(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_91
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_91() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_91
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_91(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_91.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_91_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_91.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_91_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_91 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_91_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_91_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_91_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_91 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_91(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_91_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_91_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_91(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_91
     */
    private void regraMRE_2_REMEDIACAO_4_criterion_1_indice_91() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_4_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_92
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_92 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_92
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_92
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_92() {
         return identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_92;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_92.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_92(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_92.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_92(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_92.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_92(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_92.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_92(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_92
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_92() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_92
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_92(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_92.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_92_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_92.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_92_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_92 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_92_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_92_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_92_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_92 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_92(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_92_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_92_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_92(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_92
     */
    private void regraMRE_2_REMEDIACAO_5_criterion_1_indice_92() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_5_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_93
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_93 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_93
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_93
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_93() {
         return identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_93;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_93.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_93(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_93.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_93(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_93.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_93(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_93.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_93(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_93
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_93() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_93
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_93(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_93.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_93_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_93.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_93_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_93 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_93_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_93_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_93_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_93 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_93(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_93_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_93_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_93(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_93
     */
    private void regraMRE_6_REMEDIACAO_15_criterion_1_indice_93() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_15_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_94
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_94 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_94
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_94
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_94() {
         return identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_94;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_94.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_94(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_94.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_94(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_94.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_94(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_94.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_94(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_94
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_94() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_94
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_94(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_94.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_94_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_94.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_94_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_94 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_94_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_94_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_94_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_94 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_94(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_94_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_94_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_94(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_94
     */
    private void regraMRE_1_REMEDIACAO_2_criterion_1_indice_94() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_2_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_95
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_95 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_95
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_95
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_95() {
         return identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_95;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_95.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_95(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_95.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_95(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_95.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_95(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_95.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_95(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_95
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_95() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_95
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_95(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_95.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_95_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_95.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_95_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_95 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_95_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_95_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_95_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_95 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_95(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_95_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_95_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_95(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_95
     */
    private void regraMRE_2_REMEDIACAO_6_criterion_1_indice_95() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_6_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_96
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_96 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_96
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_96
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_96() {
         return identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_96;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_96.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_96(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_96.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_96(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_96.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_96(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_96.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_96(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_96
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_96() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_96
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_96(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_96.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_96_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_96.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_96_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_96 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_96_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_96_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_96_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_96 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_96(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_96_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_96_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_96(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_96
     */
    private void regraMRE_6_REMEDIACAO_16_criterion_1_indice_96() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_16_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_97
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_97 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_97
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_97
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_97() {
         return identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_97;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_97.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_97(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_97.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_97(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_97.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_97(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_97.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_97(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_97
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_97() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_97
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_97(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_97.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_97_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_97.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_97_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_97 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_97_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_97_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_97_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_97 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_97(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_97_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_97_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_97(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_97
     */
    private void regraMRE_2_REMEDIACAO_3_criterion_1_indice_97() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_3_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_98
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_98 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_98
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_98
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_98() {
         return identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_98;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_98.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_98(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_98.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_98(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_98.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_98(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_98.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_98(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_98
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_98() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_98
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_98(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_98.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_98_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_98.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_98_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_98 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_98_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_98_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_98_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_98 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_98(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_98_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_98_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_98(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_98
     */
    private void regraMRE_2_REMEDIACAO_7_criterion_1_indice_98() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_7_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_99
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_99 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_99
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_99
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_99() {
         return identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_99;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_99.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_99(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_99.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_99(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_99.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_99(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_99.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_99(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_99
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_99() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_99
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_99(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_99.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_99_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_99.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_99_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_99 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_99_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_99_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_99_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_99 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_99(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_99_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_99_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_99(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_99
     */
    private void regraMRE_6_REMEDIACAO_17_criterion_1_indice_99() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_17_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_100
     */
    private String[] identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_100 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_100
     *
     * @return the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_100
     */
    private String[] getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_100() {
         return identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_100;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_100.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_100(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_100.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_100(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_100.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_100(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_100.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_100(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_100
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_100() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_100
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_100(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_100.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(4L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_100_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(4L));
    }

    /**
     * Condition 1 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_100.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_100_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_100 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_100_cond(int index) {
        switch (index) {
            case 0: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_100_cond_0();
            case 1: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_100_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_100 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_100(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_100_cond_0()) return false;
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_100_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_100(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_100
     */
    private void regraMRE_4_REMEDIACAO_8_criterion_1_indice_100() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_4_REMEDIACAO_8_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 4\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(4L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 4\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 4 - MRE 4");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_101
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_101 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_101
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_101
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_101() {
         return identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_101;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_101.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_101(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_101.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_101(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_101.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_101(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_101.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_101(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_101
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_101() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_101
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_101(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_101.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_101_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_101.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_101_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_101 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_101_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_101_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_101_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_101 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_101(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_101_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_101_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_101(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_101
     */
    private void regraMRE_6_REMEDIACAO_18_criterion_1_indice_101() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_18_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_102
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_102 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_102
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_102
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_102() {
         return identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_102;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_102.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_102(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_102.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_102(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_102.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_102(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_102.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_102(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_102
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_102() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_102
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_102(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_102.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_102_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_102.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_102_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_102 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_102_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_102_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_102_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_102 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_102(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_102_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_102_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_102(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_102
     */
    private void regraMRE_5_REMEDIACAO_13_criterion_1_indice_102() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_13_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_103
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_103 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_103
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_103
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_103() {
         return identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_103;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_103.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_103(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_103.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_103(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_103.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_103(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_103.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_103(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_103
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_103() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_103
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_103(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_103.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_103_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_103.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_103_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_103 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_103_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_103_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_103_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_103 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_103(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_103_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_103_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_103(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_103
     */
    private void regraMRE_5_REMEDIACAO_14_criterion_1_indice_103() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_14_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_104
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_104 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_104
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_104
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_104() {
         return identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_104;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_104.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_104(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_104.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_104(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_104.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_104(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_104.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_104(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_104
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_104() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_104
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_104(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_104.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_104_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_104.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_104_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_104 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_104_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_104_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_104_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_104 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_104(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_104_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_104_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_104(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_104
     */
    private void regraMRE_6_REMEDIACAO_20_criterion_1_indice_104() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_20_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_105
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_105 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_105
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_105
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_105() {
         return identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_105;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_105.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_105(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_105.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_105(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_105.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_105(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_105.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_105(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_105
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_105() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_105
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_105(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_105.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_105_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_105.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_105_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_105 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_105_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_105_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_105_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_105 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_105(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_105_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_105_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_105(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_105
     */
    private void regraMRE_1_REMEDIACAO_1_criterion_1_indice_105() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_1_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_106
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_106 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_106
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_106
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_106() {
         return identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_106;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_106.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_106(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_106.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_106(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_106.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_106(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_106.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_106(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_106
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_106() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_106
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_106(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_106.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_106_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_106.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_106_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_106 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_106_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_106_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_106_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_106 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_106(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_106_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_106_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_106(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_106
     */
    private void regraMRE_2_REMEDIACAO_4_criterion_1_indice_106() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_4_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_107
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_107 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_107
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_107
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_107() {
         return identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_107;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_107.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_107(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_107.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_107(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_107.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_107(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_107.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_107(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_107
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_107() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_107
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_107(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_107.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_107_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_107.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_107_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_107 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_107_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_107_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_107_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_107 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_107(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_107_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_107_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_107(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_107
     */
    private void regraMRE_2_REMEDIACAO_5_criterion_1_indice_107() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_5_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_108
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_108 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_108
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_108
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_108() {
         return identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_108;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_108.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_108(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_108.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_108(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_108.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_108(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_108.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_108(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_108
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_108() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_108
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_108(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_108.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_108_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_108.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_108_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_108 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_108_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_108_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_108_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_108 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_108(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_108_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_108_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_108(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_108
     */
    private void regraMRE_6_REMEDIACAO_15_criterion_1_indice_108() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_15_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_109
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_109 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_109
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_109
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_109() {
         return identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_109;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_109.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_109(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_109.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_109(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_109.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_109(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_109.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_109(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_109
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_109() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_109
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_109(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_109.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_109_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_109.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_109_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_109 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_109_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_109_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_109_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_109 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_109(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_109_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_109_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_109(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_109
     */
    private void regraMRE_1_REMEDIACAO_2_criterion_1_indice_109() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_2_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_110
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_110 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_110
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_110
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_110() {
         return identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_110;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_110.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_110(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_110.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_110(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_110.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_110(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_110.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_110(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_110
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_110() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_110
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_110(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_110.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_110_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_110.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_110_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_110 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_110_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_110_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_110_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_110 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_110(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_110_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_110_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_110(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_110
     */
    private void regraMRE_2_REMEDIACAO_6_criterion_1_indice_110() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_6_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_111
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_111 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_111
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_111
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_111() {
         return identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_111;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_111.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_111(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_111.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_111(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_111.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_111(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_111.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_111(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_111
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_111() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_111
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_111(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_111.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_111_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_111.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_111_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_111 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_111_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_111_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_111_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_111 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_111(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_111_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_111_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_111(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_111
     */
    private void regraMRE_6_REMEDIACAO_16_criterion_1_indice_111() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_16_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_112
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_112 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_112
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_112
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_112() {
         return identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_112;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_112.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_112(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_112.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_112(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_112.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_112(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_112.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_112(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_112
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_112() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_112
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_112(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_112.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_112_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_112.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_112_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_112 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_112_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_112_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_112_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_112 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_112(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_112_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_112_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_112(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_112
     */
    private void regraMRE_2_REMEDIACAO_3_criterion_1_indice_112() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_3_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_113
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_113 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_113
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_113
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_113() {
         return identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_113;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_113.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_113(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_113.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_113(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_113.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_113(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_113.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_113(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_113
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_113() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_113
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_113(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_113.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_113_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_113.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_113_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_113 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_113_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_113_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_113_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_113 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_113(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_113_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_113_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_113(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_113
     */
    private void regraMRE_2_REMEDIACAO_7_criterion_1_indice_113() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_7_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_114
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_114 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_114
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_114
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_114() {
         return identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_114;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_114.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_114(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_114.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_114(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_114.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_114(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_114.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_114(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_114
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_114() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_114
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_114(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_114.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_114_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_114.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_114_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_114 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_114_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_114_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_114_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_114 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_114(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_114_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_114_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_114(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_114
     */
    private void regraMRE_6_REMEDIACAO_17_criterion_1_indice_114() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_17_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_115
     */
    private String[] identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_115 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_115
     *
     * @return the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_115
     */
    private String[] getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_115() {
         return identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_115;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_115.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_115(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_115.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_115(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_115.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_115(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_115.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_115(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_115
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_115() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_115
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_115(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_115.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(4L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_115_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(4L));
    }

    /**
     * Condition 1 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_115.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_115_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_115 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_115_cond(int index) {
        switch (index) {
            case 0: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_115_cond_0();
            case 1: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_115_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_115 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_115(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_115_cond_0()) return false;
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_115_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_115(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_115
     */
    private void regraMRE_4_REMEDIACAO_8_criterion_1_indice_115() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_4_REMEDIACAO_8_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 4\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(4L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 4\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 4 - MRE 4");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_116
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_116 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_116
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_116
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_116() {
         return identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_116;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_116.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_116(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_116.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_116(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_116.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_116(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_116.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_116(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_116
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_116() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_116
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_116(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_116.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_116_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_116.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_116_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_116 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_116_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_116_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_116_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_116 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_116(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_116_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_116_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_116(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_116
     */
    private void regraMRE_6_REMEDIACAO_18_criterion_1_indice_116() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_18_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_117
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_117 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_117
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_117
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_117() {
         return identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_117;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_117.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_117(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_117.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_117(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_117.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_117(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_117.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_117(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_117
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_117() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_117
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_117(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_117.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_117_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_117.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_117_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_117 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_117_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_117_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_117_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_117 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_117(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_117_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_117_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_117(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_117
     */
    private void regraMRE_5_REMEDIACAO_13_criterion_1_indice_117() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_13_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_118
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_118 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_118
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_118
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_118() {
         return identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_118;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_118.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_118(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_118.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_118(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_118.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_118(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_118.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_118(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_118
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_118() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_118
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_118(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_118.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_118_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_118.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_118_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_118 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_118_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_118_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_118_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_118 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_118(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_118_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_118_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_118(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_118
     */
    private void regraMRE_5_REMEDIACAO_14_criterion_1_indice_118() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_14_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_119
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_119 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_119
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_119
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_119() {
         return identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_119;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_119.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_119(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_119.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_119(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_119.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_119(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_119.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_119(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_119
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_119() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_119
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_119(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_119.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_119_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_119.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_119_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_119 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_119_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_119_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_119_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_119 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_119(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_119_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_119_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_119(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_119
     */
    private void regraMRE_6_REMEDIACAO_20_criterion_1_indice_119() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_20_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_120
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_120 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_120
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_120
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_120() {
         return identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_120;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_120.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_120(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_120.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_120(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_120.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_120(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_120.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_120(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_120
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_120() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_120
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_120(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_120.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_120_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_120.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_120_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_120 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_120_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_120_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_120_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_120 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_120(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_120_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_120_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_120(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_120
     */
    private void regraMRE_1_REMEDIACAO_1_criterion_1_indice_120() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_1_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_121
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_121 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_121
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_121
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_121() {
         return identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_121;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_121.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_121(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_121.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_121(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_121.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_121(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_121.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_121(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_121
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_121() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_121
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_121(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_121.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_121_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_121.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_121_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_121 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_121_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_121_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_121_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_121 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_121(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_121_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_121_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_121(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_121
     */
    private void regraMRE_2_REMEDIACAO_4_criterion_1_indice_121() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_4_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_122
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_122 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_122
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_122
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_122() {
         return identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_122;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_122.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_122(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_122.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_122(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_122.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_122(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_122.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_122(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_122
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_122() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_122
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_122(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_122.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_122_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_122.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_122_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_122 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_122_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_122_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_122_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_122 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_122(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_122_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_122_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_122(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_122
     */
    private void regraMRE_2_REMEDIACAO_5_criterion_1_indice_122() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_5_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_123
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_123 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_123
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_123
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_123() {
         return identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_123;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_123.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_123(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_123.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_123(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_123.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_123(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_123.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_123(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_123
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_123() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_123
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_123(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_123.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_123_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_123.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_123_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_123 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_123_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_123_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_123_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_123 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_123(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_123_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_123_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_123(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_123
     */
    private void regraMRE_6_REMEDIACAO_15_criterion_1_indice_123() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_15_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_124
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_124 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_124
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_124
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_124() {
         return identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_124;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_124.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_124(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_124.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_124(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_124.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_124(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_124.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_124(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_124
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_124() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_124
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_124(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_124.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_124_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_124.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_124_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_124 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_124_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_124_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_124_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_124 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_124(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_124_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_124_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_124(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_124
     */
    private void regraMRE_1_REMEDIACAO_2_criterion_1_indice_124() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_2_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_125
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_125 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_125
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_125
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_125() {
         return identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_125;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_125.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_125(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_125.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_125(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_125.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_125(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_125.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_125(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_125
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_125() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_125
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_125(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_125.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_125_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_125.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_125_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_125 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_125_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_125_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_125_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_125 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_125(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_125_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_125_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_125(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_125
     */
    private void regraMRE_2_REMEDIACAO_6_criterion_1_indice_125() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_6_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_126
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_126 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_126
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_126
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_126() {
         return identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_126;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_126.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_126(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_126.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_126(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_126.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_126(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_126.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_126(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_126
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_126() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_126
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_126(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_126.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_126_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_126.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_126_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_126 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_126_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_126_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_126_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_126 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_126(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_126_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_126_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_126(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_126
     */
    private void regraMRE_6_REMEDIACAO_16_criterion_1_indice_126() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_16_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_127
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_127 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_127
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_127
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_127() {
         return identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_127;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_127.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_127(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_127.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_127(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_127.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_127(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_127.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_127(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_127
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_127() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_127
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_127(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_127.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_127_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_127.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_127_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_127 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_127_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_127_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_127_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_127 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_127(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_127_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_127_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_127(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_127
     */
    private void regraMRE_2_REMEDIACAO_3_criterion_1_indice_127() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_3_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_128
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_128 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_128
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_128
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_128() {
         return identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_128;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_128.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_128(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_128.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_128(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_128.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_128(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_128.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_128(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_128
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_128() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_128
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_128(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_128.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_128_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_128.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_128_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_128 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_128_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_128_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_128_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_128 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_128(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_128_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_128_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_128(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_128
     */
    private void regraMRE_2_REMEDIACAO_7_criterion_1_indice_128() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_7_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_129
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_129 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_129
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_129
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_129() {
         return identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_129;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_129.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_129(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_129.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_129(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_129.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_129(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_129.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_129(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_129
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_129() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_129
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_129(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_129.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_129_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_129.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_129_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_129 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_129_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_129_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_129_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_129 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_129(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_129_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_129_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_129(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_129
     */
    private void regraMRE_6_REMEDIACAO_17_criterion_1_indice_129() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_17_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_130
     */
    private String[] identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_130 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_130
     *
     * @return the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_130
     */
    private String[] getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_130() {
         return identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_130;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_130.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_130(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_130.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_130(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_130.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_130(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_130.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_130(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_130
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_130() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_130
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_130(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_130.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(4L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_130_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(4L));
    }

    /**
     * Condition 1 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_130.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_130_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_130 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_130_cond(int index) {
        switch (index) {
            case 0: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_130_cond_0();
            case 1: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_130_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_130 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_130(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_130_cond_0()) return false;
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_130_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_130(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_130
     */
    private void regraMRE_4_REMEDIACAO_8_criterion_1_indice_130() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_4_REMEDIACAO_8_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 4\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(4L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 4\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 4 - MRE 4");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_131
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_131 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_131
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_131
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_131() {
         return identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_131;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_131.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_131(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_131.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_131(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_131.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_131(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_131.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_131(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_131
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_131() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_131
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_131(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_131.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_131_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_131.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_131_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_131 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_131_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_131_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_131_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_131 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_131(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_131_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_131_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_131(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_131
     */
    private void regraMRE_6_REMEDIACAO_18_criterion_1_indice_131() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_18_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_132
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_132 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_132
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_132
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_132() {
         return identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_132;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_132.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_132(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_132.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_132(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_132.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_132(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_132.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_132(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_132
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_132() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_132
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_132(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_132.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_132_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_132.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_132_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_132 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_132_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_132_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_132_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_132 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_132(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_132_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_132_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_132(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_132
     */
    private void regraMRE_5_REMEDIACAO_13_criterion_1_indice_132() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_13_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_133
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_133 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_133
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_133
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_133() {
         return identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_133;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_133.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_133(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_133.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_133(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_133.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_133(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_133.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_133(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_133
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_133() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_133
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_133(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_133.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_133_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_133.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_133_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_133 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_133_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_133_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_133_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_133 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_133(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_133_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_133_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_133(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_133
     */
    private void regraMRE_5_REMEDIACAO_14_criterion_1_indice_133() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_14_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_134
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_134 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_134
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_134
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_134() {
         return identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_134;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_134.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_134(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_134.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_134(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_134.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_134(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_134.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_134(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_134
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_134() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_134
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_134(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_134.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_134_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_134.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_134_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_134 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_134_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_134_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_134_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_134 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_134(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_134_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_134_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_134(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_134
     */
    private void regraMRE_6_REMEDIACAO_20_criterion_1_indice_134() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_20_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_135
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_135 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_135
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_135
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_135() {
         return identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_135;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_135.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_135(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_135.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_135(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_135.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_135(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_135.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_135(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_135
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_135() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_135
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_135(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_135.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_135_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_135.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_135_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_135 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_135_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_135_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_135_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_135 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_135(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_135_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_135_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_135(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_135
     */
    private void regraMRE_1_REMEDIACAO_1_criterion_1_indice_135() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_1_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_136
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_136 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_136
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_136
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_136() {
         return identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_136;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_136.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_136(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_136.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_136(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_136.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_136(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_136.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_136(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_136
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_136() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_136
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_136(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_136.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_136_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_136.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_136_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_136 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_136_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_136_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_136_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_136 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_136(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_136_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_136_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_136(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_136
     */
    private void regraMRE_2_REMEDIACAO_4_criterion_1_indice_136() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_4_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_137
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_137 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_137
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_137
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_137() {
         return identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_137;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_137.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_137(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_137.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_137(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_137.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_137(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_137.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_137(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_137
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_137() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_137
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_137(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_137.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_137_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_137.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_137_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_137 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_137_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_137_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_137_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_137 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_137(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_137_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_137_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_137(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_137
     */
    private void regraMRE_2_REMEDIACAO_5_criterion_1_indice_137() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_5_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_138
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_138 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_138
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_138
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_138() {
         return identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_138;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_138.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_138(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_138.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_138(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_138.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_138(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_138.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_138(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_138
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_138() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_138
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_138(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_138.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_138_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_138.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_138_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_138 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_138_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_138_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_138_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_138 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_138(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_138_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_138_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_138(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_138
     */
    private void regraMRE_6_REMEDIACAO_15_criterion_1_indice_138() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_15_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_139
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_139 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_139
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_139
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_139() {
         return identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_139;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_139.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_139(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_139.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_139(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_139.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_139(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_139.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_139(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_139
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_139() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_139
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_139(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_139.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_139_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_139.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_139_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_139 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_139_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_139_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_139_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_139 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_139(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_139_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_139_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_139(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_139
     */
    private void regraMRE_1_REMEDIACAO_2_criterion_1_indice_139() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_2_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_140
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_140 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_140
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_140
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_140() {
         return identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_140;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_140.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_140(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_140.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_140(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_140.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_140(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_140.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_140(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_140
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_140() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_140
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_140(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_140.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_140_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_140.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_140_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_140 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_140_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_140_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_140_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_140 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_140(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_140_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_140_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_140(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_140
     */
    private void regraMRE_2_REMEDIACAO_6_criterion_1_indice_140() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_6_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_141
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_141 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_141
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_141
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_141() {
         return identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_141;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_141.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_141(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_141.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_141(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_141.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_141(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_141.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_141(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_141
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_141() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_141
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_141(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_141.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_141_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_141.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_141_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_141 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_141_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_141_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_141_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_141 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_141(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_141_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_141_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_141(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_141
     */
    private void regraMRE_6_REMEDIACAO_16_criterion_1_indice_141() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_16_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_142
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_142 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_142
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_142
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_142() {
         return identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_142;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_142.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_142(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_142.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_142(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_142.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_142(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_142.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_142(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_142
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_142() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_142
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_142(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_142.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_142_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_142.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_142_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_142 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_142_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_142_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_142_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_142 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_142(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_142_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_142_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_142(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_142
     */
    private void regraMRE_2_REMEDIACAO_3_criterion_1_indice_142() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_3_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_143
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_143 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_143
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_143
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_143() {
         return identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_143;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_143.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_143(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_143.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_143(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_143.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_143(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_143.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_143(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_143
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_143() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_143
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_143(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_143.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_143_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_143.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_143_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_143 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_143_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_143_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_143_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_143 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_143(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_143_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_143_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_143(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_143
     */
    private void regraMRE_2_REMEDIACAO_7_criterion_1_indice_143() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_7_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_144
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_144 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_144
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_144
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_144() {
         return identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_144;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_144.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_144(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_144.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_144(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_144.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_144(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_144.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_144(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_144
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_144() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_144
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_144(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_144.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_144_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_144.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_144_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_144 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_144_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_144_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_144_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_144 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_144(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_144_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_144_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_144(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_144
     */
    private void regraMRE_6_REMEDIACAO_17_criterion_1_indice_144() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_17_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_145
     */
    private String[] identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_145 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_145
     *
     * @return the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_145
     */
    private String[] getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_145() {
         return identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_145;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_145.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_145(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_145.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_145(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_145.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_145(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_145.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_145(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_145
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_145() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_145
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_145(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_145.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(4L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_145_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(4L));
    }

    /**
     * Condition 1 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_145.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_145_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_145 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_145_cond(int index) {
        switch (index) {
            case 0: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_145_cond_0();
            case 1: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_145_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_145 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_145(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_145_cond_0()) return false;
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_145_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_145(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_145
     */
    private void regraMRE_4_REMEDIACAO_8_criterion_1_indice_145() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_4_REMEDIACAO_8_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 4\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(4L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 4\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 4 - MRE 4");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_146
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_146 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_146
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_146
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_146() {
         return identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_146;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_146.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_146(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_146.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_146(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_146.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_146(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_146.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_146(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_146
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_146() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_146
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_146(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_146.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_146_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_146.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_146_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_146 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_146_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_146_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_146_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_146 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_146(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_146_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_146_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_146(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_146
     */
    private void regraMRE_6_REMEDIACAO_18_criterion_1_indice_146() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_18_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_147
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_147 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_147
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_147
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_147() {
         return identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_147;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_147.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_147(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_147.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_147(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_147.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_147(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_147.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_147(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_147
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_147() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_147
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_147(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_147.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_147_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_147.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_147_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_147 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_147_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_147_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_147_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_147 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_147(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_147_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_147_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_147(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_147
     */
    private void regraMRE_5_REMEDIACAO_13_criterion_1_indice_147() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_13_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_148
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_148 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_148
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_148
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_148() {
         return identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_148;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_148.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_148(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_148.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_148(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_148.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_148(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_148.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_148(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_148
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_148() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_148
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_148(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_148.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_148_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_148.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_148_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_148 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_148_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_148_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_148_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_148 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_148(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_148_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_148_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_148(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_148
     */
    private void regraMRE_5_REMEDIACAO_14_criterion_1_indice_148() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_14_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_149
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_149 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_149
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_149
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_149() {
         return identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_149;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_149.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_149(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_149.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_149(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_149.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_149(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_149.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_149(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_149
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_149() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_149
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_149(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_149.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_149_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_149.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_149_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_149 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_149_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_149_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_149_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_149 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_149(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_149_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_149_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_149(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_149
     */
    private void regraMRE_6_REMEDIACAO_20_criterion_1_indice_149() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_20_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_150
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_150 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_150
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_150
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_150() {
         return identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_150;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_150.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_150(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_150.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_150(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_150.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_150(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_150.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_150(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_150
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_150() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_150
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_150(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_150.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_150_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_150.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_150_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_150 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_150_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_150_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_150_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_150 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_150(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_150_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_150_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_150(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_150
     */
    private void regraMRE_1_REMEDIACAO_1_criterion_1_indice_150() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_1_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_151
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_151 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_151
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_151
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_151() {
         return identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_151;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_151.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_151(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_151.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_151(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_151.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_151(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_151.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_151(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_151
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_151() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_151
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_151(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_151.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_151_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_151.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_151_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_151 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_151_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_151_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_151_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_151 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_151(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_151_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_151_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_151(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_151
     */
    private void regraMRE_2_REMEDIACAO_4_criterion_1_indice_151() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_4_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_152
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_152 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_152
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_152
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_152() {
         return identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_152;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_152.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_152(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_152.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_152(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_152.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_152(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_152.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_152(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_152
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_152() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_152
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_152(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_152.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_152_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_152.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_152_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_152 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_152_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_152_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_152_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_152 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_152(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_152_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_152_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_152(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_152
     */
    private void regraMRE_2_REMEDIACAO_5_criterion_1_indice_152() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_5_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_153
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_153 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_153
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_153
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_153() {
         return identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_153;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_153.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_153(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_153.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_153(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_153.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_153(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_153.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_153(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_153
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_153() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_153
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_153(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_153.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_153_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_153.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_153_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_153 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_153_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_153_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_153_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_153 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_153(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_153_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_153_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_153(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_153
     */
    private void regraMRE_6_REMEDIACAO_15_criterion_1_indice_153() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_15_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_154
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_154 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_154
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_154
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_154() {
         return identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_154;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_154.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_154(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_154.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_154(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_154.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_154(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_154.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_154(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_154
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_154() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_154
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_154(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_154.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_154_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_154.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_154_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_154 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_154_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_154_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_154_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_154 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_154(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_154_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_154_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_154(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_154
     */
    private void regraMRE_1_REMEDIACAO_2_criterion_1_indice_154() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_2_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_155
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_155 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_155
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_155
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_155() {
         return identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_155;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_155.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_155(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_155.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_155(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_155.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_155(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_155.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_155(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_155
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_155() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_155
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_155(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_155.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_155_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_155.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_155_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_155 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_155_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_155_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_155_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_155 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_155(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_155_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_155_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_155(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_155
     */
    private void regraMRE_2_REMEDIACAO_6_criterion_1_indice_155() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_6_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_156
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_156 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_156
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_156
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_156() {
         return identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_156;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_156.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_156(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_156.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_156(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_156.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_156(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_156.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_156(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_156
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_156() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_156
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_156(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_156.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_156_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_156.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_156_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_156 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_156_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_156_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_156_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_156 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_156(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_156_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_156_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_156(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_156
     */
    private void regraMRE_6_REMEDIACAO_16_criterion_1_indice_156() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_16_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_157
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_157 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_157
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_157
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_157() {
         return identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_157;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_157.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_157(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_157.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_157(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_157.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_157(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_157.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_157(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_157
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_157() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_157
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_157(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_157.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_157_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_157.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_157_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_157 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_157_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_157_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_157_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_157 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_157(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_157_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_157_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_157(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_157
     */
    private void regraMRE_2_REMEDIACAO_3_criterion_1_indice_157() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_3_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_158
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_158 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_158
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_158
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_158() {
         return identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_158;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_158.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_158(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_158.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_158(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_158.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_158(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_158.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_158(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_158
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_158() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_158
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_158(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_158.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_158_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_158.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_158_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_158 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_158_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_158_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_158_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_158 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_158(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_158_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_158_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_158(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_158
     */
    private void regraMRE_2_REMEDIACAO_7_criterion_1_indice_158() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_7_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_159
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_159 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_159
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_159
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_159() {
         return identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_159;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_159.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_159(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_159.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_159(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_159.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_159(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_159.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_159(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_159
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_159() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_159
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_159(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_159.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_159_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_159.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_159_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_159 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_159_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_159_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_159_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_159 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_159(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_159_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_159_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_159(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_159
     */
    private void regraMRE_6_REMEDIACAO_17_criterion_1_indice_159() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_17_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_160
     */
    private String[] identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_160 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_160
     *
     * @return the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_160
     */
    private String[] getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_160() {
         return identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_160;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_160.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_160(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_160.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_160(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_160.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_160(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_160.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_160(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_160
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_160() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_160
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_160(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_160.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(4L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_160_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(4L));
    }

    /**
     * Condition 1 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_160.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_160_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_160 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_160_cond(int index) {
        switch (index) {
            case 0: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_160_cond_0();
            case 1: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_160_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_160 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_160(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_160_cond_0()) return false;
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_160_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_160(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_160
     */
    private void regraMRE_4_REMEDIACAO_8_criterion_1_indice_160() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_4_REMEDIACAO_8_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 4\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(4L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 4\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 4 - MRE 4");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_161
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_161 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_161
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_161
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_161() {
         return identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_161;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_161.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_161(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_161.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_161(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_161.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_161(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_161.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_161(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_161
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_161() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_161
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_161(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_161.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_161_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_161.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_161_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_161 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_161_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_161_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_161_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_161 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_161(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_161_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_161_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_161(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_161
     */
    private void regraMRE_6_REMEDIACAO_18_criterion_1_indice_161() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_18_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_162
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_162 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_162
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_162
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_162() {
         return identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_162;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_162.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_162(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_162.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_162(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_162.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_162(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_162.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_162(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_162
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_162() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_162
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_162(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_162.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_162_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_162.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_162_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_162 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_162_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_162_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_162_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_162 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_162(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_162_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_162_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_162(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_162
     */
    private void regraMRE_5_REMEDIACAO_13_criterion_1_indice_162() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_13_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_163
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_163 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_163
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_163
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_163() {
         return identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_163;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_163.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_163(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_163.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_163(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_163.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_163(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_163.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_163(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_163
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_163() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_163
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_163(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_163.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_163_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_163.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_163_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_163 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_163_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_163_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_163_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_163 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_163(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_163_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_163_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_163(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_163
     */
    private void regraMRE_5_REMEDIACAO_14_criterion_1_indice_163() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_14_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_164
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_164 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_164
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_164
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_164() {
         return identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_164;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_164.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_164(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_164.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_164(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_164.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_164(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_164.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_164(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_164
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_164() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_164
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_164(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_164.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_164_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_164.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_164_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_164 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_164_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_164_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_164_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_164 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_164(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_164_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_164_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_164(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_164
     */
    private void regraMRE_6_REMEDIACAO_20_criterion_1_indice_164() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_20_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_165
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_165 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_165
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_165
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_165() {
         return identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_165;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_165.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_165(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_165.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_165(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_165.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_165(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_165.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_165(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_165
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_165() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_165
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_165(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_165.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_165_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_165.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_165_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_165 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_165_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_165_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_165_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_165 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_165(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_165_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_165_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_165(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_165
     */
    private void regraMRE_1_REMEDIACAO_1_criterion_1_indice_165() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_1_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_166
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_166 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_166
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_166
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_166() {
         return identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_166;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_166.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_166(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_166.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_166(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_166.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_166(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_166.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_166(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_166
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_166() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_166
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_166(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_166.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_166_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_166.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_166_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_166 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_166_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_166_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_166_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_166 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_166(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_166_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_166_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_166(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_166
     */
    private void regraMRE_2_REMEDIACAO_4_criterion_1_indice_166() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_4_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_167
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_167 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_167
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_167
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_167() {
         return identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_167;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_167.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_167(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_167.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_167(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_167.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_167(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_167.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_167(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_167
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_167() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_167
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_167(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_167.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_167_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_167.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_167_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_167 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_167_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_167_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_167_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_167 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_167(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_167_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_167_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_167(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_167
     */
    private void regraMRE_2_REMEDIACAO_5_criterion_1_indice_167() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_5_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_168
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_168 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_168
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_168
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_168() {
         return identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_168;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_168.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_168(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_168.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_168(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_168.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_168(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_168.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_168(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_168
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_168() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_168
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_168(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_168.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_168_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_168.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_168_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_168 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_168_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_168_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_168_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_168 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_168(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_168_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_168_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_168(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_168
     */
    private void regraMRE_6_REMEDIACAO_15_criterion_1_indice_168() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_15_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_169
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_169 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_169
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_169
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_169() {
         return identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_169;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_169.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_169(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_169.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_169(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_169.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_169(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_169.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_169(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_169
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_169() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_169
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_169(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_169.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_169_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_169.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_169_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_169 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_169_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_169_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_169_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_169 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_169(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_169_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_169_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_169(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_169
     */
    private void regraMRE_1_REMEDIACAO_2_criterion_1_indice_169() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_2_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_170
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_170 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_170
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_170
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_170() {
         return identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_170;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_170.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_170(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_170.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_170(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_170.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_170(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_170.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_170(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_170
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_170() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_170
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_170(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_170.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_170_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_170.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_170_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_170 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_170_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_170_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_170_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_170 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_170(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_170_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_170_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_170(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_170
     */
    private void regraMRE_2_REMEDIACAO_6_criterion_1_indice_170() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_6_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_171
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_171 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_171
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_171
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_171() {
         return identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_171;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_171.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_171(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_171.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_171(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_171.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_171(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_171.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_171(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_171
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_171() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_171
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_171(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_171.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_171_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_171.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_171_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_171 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_171_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_171_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_171_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_171 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_171(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_171_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_171_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_171(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_171
     */
    private void regraMRE_6_REMEDIACAO_16_criterion_1_indice_171() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_16_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_172
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_172 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_172
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_172
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_172() {
         return identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_172;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_172.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_172(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_172.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_172(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_172.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_172(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_172.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_172(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_172
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_172() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_172
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_172(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_172.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_172_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_172.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_172_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_172 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_172_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_172_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_172_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_172 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_172(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_172_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_172_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_172(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_172
     */
    private void regraMRE_2_REMEDIACAO_3_criterion_1_indice_172() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_3_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_173
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_173 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_173
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_173
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_173() {
         return identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_173;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_173.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_173(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_173.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_173(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_173.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_173(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_173.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_173(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_173
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_173() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_173
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_173(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_173.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_173_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_173.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_173_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_173 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_173_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_173_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_173_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_173 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_173(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_173_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_173_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_173(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_173
     */
    private void regraMRE_2_REMEDIACAO_7_criterion_1_indice_173() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_7_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_174
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_174 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_174
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_174
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_174() {
         return identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_174;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_174.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_174(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_174.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_174(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_174.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_174(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_174.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_174(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_174
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_174() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_174
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_174(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_174.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_174_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_174.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_174_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_174 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_174_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_174_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_174_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_174 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_174(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_174_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_174_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_174(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_174
     */
    private void regraMRE_6_REMEDIACAO_17_criterion_1_indice_174() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_17_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_175
     */
    private String[] identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_175 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_175
     *
     * @return the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_175
     */
    private String[] getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_175() {
         return identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_175;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_175.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_175(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_175.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_175(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_175.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_175(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_175.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_175(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_175
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_175() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_175
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_175(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_175.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(4L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_175_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(4L));
    }

    /**
     * Condition 1 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_175.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_175_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_175 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_175_cond(int index) {
        switch (index) {
            case 0: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_175_cond_0();
            case 1: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_175_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_175 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_175(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_175_cond_0()) return false;
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_175_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_175(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_175
     */
    private void regraMRE_4_REMEDIACAO_8_criterion_1_indice_175() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_4_REMEDIACAO_8_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 4\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(4L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 4\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 4 - MRE 4");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_176
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_176 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_176
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_176
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_176() {
         return identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_176;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_176.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_176(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_176.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_176(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_176.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_176(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_176.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_176(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_176
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_176() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_176
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_176(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_176.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_176_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_176.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_176_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_176 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_176_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_176_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_176_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_176 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_176(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_176_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_176_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_176(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_176
     */
    private void regraMRE_6_REMEDIACAO_18_criterion_1_indice_176() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_18_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_177
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_177 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_177
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_177
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_177() {
         return identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_177;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_177.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_177(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_177.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_177(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_177.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_177(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_177.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_177(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_177
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_177() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_177
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_177(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_177.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_177_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_177.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_177_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_177 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_177_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_177_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_177_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_177 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_177(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_177_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_177_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_177(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_177
     */
    private void regraMRE_5_REMEDIACAO_13_criterion_1_indice_177() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_13_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_178
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_178 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_178
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_178
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_178() {
         return identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_178;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_178.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_178(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_178.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_178(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_178.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_178(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_178.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_178(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_178
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_178() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_178
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_178(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_178.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_178_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_178.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_178_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_178 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_178_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_178_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_178_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_178 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_178(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_178_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_178_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_178(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_178
     */
    private void regraMRE_5_REMEDIACAO_14_criterion_1_indice_178() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_14_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_179
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_179 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_179
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_179
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_179() {
         return identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_179;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_179.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_179(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_179.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_179(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_179.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_179(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_179.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_179(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_179
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_179() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_179
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_179(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_179.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_179_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_179.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_179_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_179 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_179_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_179_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_179_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_179 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_179(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_179_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_179_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_179(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_179
     */
    private void regraMRE_6_REMEDIACAO_20_criterion_1_indice_179() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_20_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_180
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_180 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_180
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_180
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_180() {
         return identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_180;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_180.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_180(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_180.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_180(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_180.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_180(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_180.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_180(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_180
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_180() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_180
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_180(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_180.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_180_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_180.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_180_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_180 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_180_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_180_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_180_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_180 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_180(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_180_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_180_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_180(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_180
     */
    private void regraMRE_1_REMEDIACAO_1_criterion_1_indice_180() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_1_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_181
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_181 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_181
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_181
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_181() {
         return identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_181;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_181.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_181(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_181.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_181(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_181.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_181(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_181.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_181(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_181
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_181() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_181
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_181(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_181.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_181_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_181.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_181_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_181 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_181_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_181_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_181_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_181 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_181(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_181_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_181_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_181(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_181
     */
    private void regraMRE_2_REMEDIACAO_4_criterion_1_indice_181() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_4_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_182
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_182 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_182
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_182
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_182() {
         return identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_182;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_182.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_182(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_182.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_182(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_182.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_182(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_182.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_182(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_182
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_182() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_182
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_182(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_182.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_182_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_182.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_182_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_182 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_182_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_182_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_182_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_182 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_182(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_182_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_182_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_182(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_182
     */
    private void regraMRE_2_REMEDIACAO_5_criterion_1_indice_182() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_5_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_183
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_183 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_183
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_183
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_183() {
         return identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_183;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_183.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_183(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_183.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_183(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_183.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_183(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_183.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_183(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_183
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_183() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_183
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_183(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_183.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_183_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_183.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_183_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_183 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_183_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_183_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_183_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_183 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_183(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_183_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_183_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_183(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_183
     */
    private void regraMRE_6_REMEDIACAO_15_criterion_1_indice_183() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_15_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_184
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_184 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_184
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_184
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_184() {
         return identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_184;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_184.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_184(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_184.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_184(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_184.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_184(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_184.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_184(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_184
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_184() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_184
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_184(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_184.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_184_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_184.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_184_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_184 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_184_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_184_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_184_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_184 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_184(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_184_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_184_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_184(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_184
     */
    private void regraMRE_1_REMEDIACAO_2_criterion_1_indice_184() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_2_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_185
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_185 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_185
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_185
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_185() {
         return identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_185;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_185.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_185(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_185.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_185(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_185.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_185(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_185.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_185(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_185
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_185() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_185
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_185(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_185.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_185_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_185.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_185_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_185 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_185_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_185_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_185_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_185 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_185(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_185_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_185_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_185(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_185
     */
    private void regraMRE_2_REMEDIACAO_6_criterion_1_indice_185() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_6_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_186
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_186 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_186
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_186
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_186() {
         return identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_186;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_186.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_186(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_186.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_186(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_186.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_186(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_186.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_186(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_186
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_186() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_186
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_186(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_186.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_186_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_186.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_186_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_186 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_186_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_186_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_186_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_186 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_186(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_186_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_186_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_186(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_186
     */
    private void regraMRE_6_REMEDIACAO_16_criterion_1_indice_186() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_16_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_187
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_187 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_187
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_187
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_187() {
         return identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_187;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_187.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_187(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_187.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_187(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_187.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_187(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_187.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_187(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_187
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_187() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_187
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_187(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_187.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_187_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_187.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_187_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_187 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_187_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_187_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_187_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_187 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_187(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_187_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_187_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_187(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_187
     */
    private void regraMRE_2_REMEDIACAO_3_criterion_1_indice_187() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_3_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_188
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_188 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_188
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_188
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_188() {
         return identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_188;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_188.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_188(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_188.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_188(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_188.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_188(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_188.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_188(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_188
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_188() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_188
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_188(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_188.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_188_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_188.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_188_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_188 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_188_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_188_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_188_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_188 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_188(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_188_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_188_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_188(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_188
     */
    private void regraMRE_2_REMEDIACAO_7_criterion_1_indice_188() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_7_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_189
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_189 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_189
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_189
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_189() {
         return identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_189;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_189.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_189(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_189.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_189(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_189.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_189(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_189.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_189(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_189
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_189() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_189
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_189(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_189.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_189_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_189.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_189_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_189 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_189_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_189_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_189_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_189 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_189(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_189_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_189_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_189(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_189
     */
    private void regraMRE_6_REMEDIACAO_17_criterion_1_indice_189() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_17_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_190
     */
    private String[] identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_190 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_190
     *
     * @return the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_190
     */
    private String[] getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_190() {
         return identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_190;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_190.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_190(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_190.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_190(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_190.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_190(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_190.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_190(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_190
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_190() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_190
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_190(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_190.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(4L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_190_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(4L));
    }

    /**
     * Condition 1 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_190.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_190_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_190 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_190_cond(int index) {
        switch (index) {
            case 0: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_190_cond_0();
            case 1: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_190_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_190 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_190(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_190_cond_0()) return false;
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_190_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_190(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_190
     */
    private void regraMRE_4_REMEDIACAO_8_criterion_1_indice_190() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_4_REMEDIACAO_8_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 4\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(4L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 4\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 4 - MRE 4");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_191
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_191 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_191
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_191
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_191() {
         return identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_191;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_191.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_191(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_191.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_191(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_191.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_191(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_191.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_191(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_191
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_191() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_191
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_191(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_191.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_191_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_191.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_191_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_191 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_191_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_191_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_191_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_191 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_191(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_191_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_191_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_191(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_191
     */
    private void regraMRE_6_REMEDIACAO_18_criterion_1_indice_191() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_18_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_192
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_192 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_192
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_192
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_192() {
         return identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_192;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_192.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_192(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_192.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_192(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_192.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_192(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_192.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_192(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_192
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_192() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_192
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_192(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_192.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_192_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_192.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_192_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_192 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_192_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_192_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_192_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_192 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_192(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_192_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_192_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_192(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_192
     */
    private void regraMRE_5_REMEDIACAO_13_criterion_1_indice_192() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_13_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_193
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_193 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_193
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_193
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_193() {
         return identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_193;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_193.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_193(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_193.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_193(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_193.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_193(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_193.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_193(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_193
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_193() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_193
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_193(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_193.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_193_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_193.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_193_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_193 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_193_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_193_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_193_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_193 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_193(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_193_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_193_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_193(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_193
     */
    private void regraMRE_5_REMEDIACAO_14_criterion_1_indice_193() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_14_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_194
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_194 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_194
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_194
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_194() {
         return identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_194;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_194.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_194(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_194.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_194(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_194.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_194(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_194.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_194(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_194
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_194() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_194
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_194(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_194.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_194_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_194.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_194_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_194 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_194_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_194_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_194_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_194 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_194(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_194_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_194_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_194(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_194
     */
    private void regraMRE_6_REMEDIACAO_20_criterion_1_indice_194() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_20_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_195
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_195 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_195
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_195
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_195() {
         return identifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_195;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_195.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_195(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_195.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_195(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_195.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_195(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_195.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_195(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_195
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_195() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_195
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_195(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_195.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_195_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_195.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_195_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_195 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_1_criterion_1_indice_195_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_195_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_195_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_195 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_195(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_195_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_1_criterion_1_indice_195_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_195(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_1_criterion_1_indice_195
     */
    private void regraMRE_1_REMEDIACAO_1_criterion_1_indice_195() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_1_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_1_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_196
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_196 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_196
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_196
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_196() {
         return identifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_196;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_196.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_196(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_196.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_196(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_196.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_196(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_196.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_196(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_196
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_196() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_196
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_196(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_196.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_196_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_196.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_196_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_196 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_4_criterion_1_indice_196_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_196_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_196_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_196 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_196(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_196_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_4_criterion_1_indice_196_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_196(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_4_criterion_1_indice_196
     */
    private void regraMRE_2_REMEDIACAO_4_criterion_1_indice_196() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_4_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_4_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_197
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_197 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_197
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_197
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_197() {
         return identifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_197;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_197.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_197(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_197.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_197(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_197.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_197(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_197.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_197(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_197
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_197() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_197
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_197(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_197.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_197_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_197.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_197_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_197 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_5_criterion_1_indice_197_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_197_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_197_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_197 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_197(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_197_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_5_criterion_1_indice_197_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_197(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_5_criterion_1_indice_197
     */
    private void regraMRE_2_REMEDIACAO_5_criterion_1_indice_197() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_5_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_5_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_198
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_198 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_198
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_198
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_198() {
         return identifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_198;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_198.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_198(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_198.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_198(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_198.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_198(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_198.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_198(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_198
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_198() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_198
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_198(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_198.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_198_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_198.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_198_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_198 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_15_criterion_1_indice_198_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_198_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_198_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_198 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_198(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_198_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_15_criterion_1_indice_198_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_198(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_15_criterion_1_indice_198
     */
    private void regraMRE_6_REMEDIACAO_15_criterion_1_indice_198() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_15_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_15_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_199
     */
    private String[] identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_199 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_199
     *
     * @return the identifiers declared in rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_199
     */
    private String[] getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_199() {
         return identifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_199;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_199.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_199(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_199.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_199(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_199.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_199(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_199.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_199(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_199
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_199() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_199
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_199(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_199.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_199_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(1L));
    }

    /**
     * Condition 1 of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_199.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_199_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_199 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_1_REMEDIACAO_2_criterion_1_indice_199_cond(int index) {
        switch (index) {
            case 0: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_199_cond_0();
            case 1: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_199_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_199 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_199(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_199_cond_0()) return false;
                if (!regraMRE_1_REMEDIACAO_2_criterion_1_indice_199_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_199(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_1_REMEDIACAO_2_criterion_1_indice_199
     */
    private void regraMRE_1_REMEDIACAO_2_criterion_1_indice_199() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_1_REMEDIACAO_2_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 1\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(1L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 1\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_1_REMEDIACAO_2_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 1 - MRE 1");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_200
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_200 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_200
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_200
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_200() {
         return identifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_200;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_200.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_200(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_200.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_200(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_200.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_200(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_200.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_200(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_200
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_200() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_200
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_200(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_200.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_200_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_200.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_200_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_200 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_6_criterion_1_indice_200_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_200_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_200_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_200 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_200(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_200_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_6_criterion_1_indice_200_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_200(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_6_criterion_1_indice_200
     */
    private void regraMRE_2_REMEDIACAO_6_criterion_1_indice_200() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_6_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_6_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_201
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_201 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_201
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_201
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_201() {
         return identifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_201;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_201.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_201(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_201.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_201(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_201.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_201(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_201.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_201(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_201
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_201() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_201
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_201(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_201.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_201_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_201.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_201_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_201 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_16_criterion_1_indice_201_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_201_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_201_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_201 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_201(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_201_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_16_criterion_1_indice_201_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_201(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_16_criterion_1_indice_201
     */
    private void regraMRE_6_REMEDIACAO_16_criterion_1_indice_201() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_16_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_16_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_202
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_202 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_202
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_202
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_202() {
         return identifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_202;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_202.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_202(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_202.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_202(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_202.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_202(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_202.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_202(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_202
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_202() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_202
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_202(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_202.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_202_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_202.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_202_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_202 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_3_criterion_1_indice_202_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_202_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_202_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_202 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_202(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_202_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_3_criterion_1_indice_202_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_202(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_3_criterion_1_indice_202
     */
    private void regraMRE_2_REMEDIACAO_3_criterion_1_indice_202() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_3_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_3_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_203
     */
    private String[] identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_203 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_203
     *
     * @return the identifiers declared in rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_203
     */
    private String[] getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_203() {
         return identifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_203;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_203.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_203(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_203.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_203(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_203.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_203(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_203.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_203(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_203
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_203() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_203
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_203(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_203.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(2L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_203_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(2L));
    }

    /**
     * Condition 1 of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_203.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_203_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_203 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_2_REMEDIACAO_7_criterion_1_indice_203_cond(int index) {
        switch (index) {
            case 0: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_203_cond_0();
            case 1: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_203_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_203 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_203(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_203_cond_0()) return false;
                if (!regraMRE_2_REMEDIACAO_7_criterion_1_indice_203_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_203(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_2_REMEDIACAO_7_criterion_1_indice_203
     */
    private void regraMRE_2_REMEDIACAO_7_criterion_1_indice_203() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_2_REMEDIACAO_7_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 2\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(2L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 2\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_2_REMEDIACAO_7_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 2 - MRE 2");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_204
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_204 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_204
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_204
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_204() {
         return identifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_204;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_204.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_204(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_204.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_204(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_204.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_204(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_204.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_204(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_204
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_204() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_204
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_204(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_204.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_204_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_204.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_204_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_204 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_17_criterion_1_indice_204_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_204_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_204_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_204 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_204(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_204_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_17_criterion_1_indice_204_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_204(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_17_criterion_1_indice_204
     */
    private void regraMRE_6_REMEDIACAO_17_criterion_1_indice_204() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_17_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_17_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_205
     */
    private String[] identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_205 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_205
     *
     * @return the identifiers declared in rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_205
     */
    private String[] getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_205() {
         return identifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_205;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_205.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_205(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_205.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_205(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_205.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_205(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_205.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_205(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_205
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_205() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_205
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_205(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_205.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(4L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_205_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(4L));
    }

    /**
     * Condition 1 of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_205.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_205_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_205 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_4_REMEDIACAO_8_criterion_1_indice_205_cond(int index) {
        switch (index) {
            case 0: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_205_cond_0();
            case 1: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_205_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_205 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_205(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_205_cond_0()) return false;
                if (!regraMRE_4_REMEDIACAO_8_criterion_1_indice_205_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_205(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_4_REMEDIACAO_8_criterion_1_indice_205
     */
    private void regraMRE_4_REMEDIACAO_8_criterion_1_indice_205() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_4_REMEDIACAO_8_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 4\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(4L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 4\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_4_REMEDIACAO_8_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 4 - MRE 4");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_206
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_206 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_206
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_206
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_206() {
         return identifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_206;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_206.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_206(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_206.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_206(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_206.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_206(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_206.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_206(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_206
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_206() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_206
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_206(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_206.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_206_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_206.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_206_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_206 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_18_criterion_1_indice_206_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_206_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_206_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_206 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_206(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_206_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_18_criterion_1_indice_206_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_206(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_18_criterion_1_indice_206
     */
    private void regraMRE_6_REMEDIACAO_18_criterion_1_indice_206() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_18_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_18_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_207
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_207 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_207
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_207
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_207() {
         return identifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_207;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_207.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_207(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_207.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_207(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_207.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_207(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_207.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_207(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_207
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_207() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_207
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_207(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_207.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_207_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_207.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_207_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_207 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_13_criterion_1_indice_207_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_207_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_207_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_207 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_207(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_207_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_13_criterion_1_indice_207_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_207(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_13_criterion_1_indice_207
     */
    private void regraMRE_5_REMEDIACAO_13_criterion_1_indice_207() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_13_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_13_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_208
     */
    private String[] identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_208 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_208
     *
     * @return the identifiers declared in rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_208
     */
    private String[] getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_208() {
         return identifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_208;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_208.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_208(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_208.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_208(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_208.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_208(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_208.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_208(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_208
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_208() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_208
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_208(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_208.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(5L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_208_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(5L));
    }

    /**
     * Condition 1 of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_208.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_208_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_208 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_5_REMEDIACAO_14_criterion_1_indice_208_cond(int index) {
        switch (index) {
            case 0: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_208_cond_0();
            case 1: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_208_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_208 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_208(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_208_cond_0()) return false;
                if (!regraMRE_5_REMEDIACAO_14_criterion_1_indice_208_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_208(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_5_REMEDIACAO_14_criterion_1_indice_208
     */
    private void regraMRE_5_REMEDIACAO_14_criterion_1_indice_208() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_5_REMEDIACAO_14_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 5\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(5L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 5\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_5_REMEDIACAO_14_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 5 - MRE 5");
			flush();

	    }


// -rule-end- 


	
    /**
     * Identifiers of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_209
     */
    private String[] identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_209 = {
        "action",
        "dbCon",
        "ruleToHuman"
    };

    /**
     * Returns the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_209
     *
     * @return the identifiers declared in rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_209
     */
    private String[] getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_209() {
         return identifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_209;
    }

    /**
     * Returns the name of the class of one declared object for
     * rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_209.
     *
     * @param index the index of the declaration
     * @return the name of the class of the declared objects for
     *          this rule.
     */
    private String getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_209(int index) {
        switch (index) {
            case 0: return "module.entity.Action";
            case 1: return "module.entity.DBConnect";
            case 2: return "module.entity.RuleToHuman";
            default: return null;
        }
    }

    /**
     * Returns the class of one declared object for rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_209.
     *
     * @param index the index of the declaration
     * @return the class of the declared objects for this rule.
     */
    private Class getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_209(int index) {
        switch (index) {
            case 0: return module.entity.Action.class;
            case 1: return module.entity.DBConnect.class;
            case 2: return module.entity.RuleToHuman.class;
            default: return null;
        }
    }

    /**
     * Sets an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_209.
     *
     * @param index the index of the declared object
     * @param value the value of the object being set.
     */
    private void setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_209(int index, Object value) {
        switch (index) {
            case 0: this.module_entity_Action_1 = (module.entity.Action) value; break;
            case 1: this.module_entity_DBConnect_1 = (module.entity.DBConnect) value; break;
            case 2: this.module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) value; break;
        }
    }

    /**
     * Returns an object declared in the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_209.
     *
     * @param index the index of the declared object
     * @return the value of the corresponding object.
     */
    private Object getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_209(int index) {
        switch (index) {
            case 0: return module_entity_Action_1;
            case 1: return module_entity_DBConnect_1;
            case 2: return module_entity_RuleToHuman_1;
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_209
     *
     * @return an object array of the variables bound to the
     *          declarations of this rule.
     */
    private Object[] getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_209() {
        return new Object[] {
                            module_entity_Action_1,
                            module_entity_DBConnect_1,
                            module_entity_RuleToHuman_1
                            };
    }

    /**
     * Defines all variables bound to the declarations 
     * of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_209
     *
     * @param objects an object array of the variables bound to the
     *          declarations of this rule.
     */
    private void setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_209(Object[] objects) {
        module_entity_Action_1 = (module.entity.Action) objects[0];
        module_entity_DBConnect_1 = (module.entity.DBConnect) objects[1];
        module_entity_RuleToHuman_1 = (module.entity.RuleToHuman) objects[2];
    }

    /**
     * Condition 0 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_209.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getMer().getId().equals(6L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_209_cond_0() {
        return (module_entity_Action_1.getRemediation().getMer().getId().equals(6L));
    }

    /**
     * Condition 1 of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_209.<p>
     * The original expression was:<br>
     * <code>action.getRemediation().getCriterion().getId().equals(1L)</code>
     *
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_209_cond_1() {
        return (module_entity_Action_1.getRemediation().getCriterion().getId().equals(1L));
    }

    /**
     * Checks whether some conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_209 is satisfied.
     *
     * @param index the index of the condition to be checked.
     * @return <code>true</code> if the condition is satisfied;
     *          <code>false</code> otherwise.
     */
    private boolean regraMRE_6_REMEDIACAO_20_criterion_1_indice_209_cond(int index) {
        switch (index) {
            case 0: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_209_cond_0();
            case 1: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_209_cond_1();
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_209 that depend only on
     * the given object are satisfied.
     *
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          this rule are satisfied; <code>false</code> otherwise.
     */
    private boolean checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_209(int declIndex) {
        switch (declIndex) {
            case 0:
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_209_cond_0()) return false;
                if (!regraMRE_6_REMEDIACAO_20_criterion_1_indice_209_cond_1()) return false;
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference some declared element of the declarations are
     * true.
     *
     * @param declIndex the index of the declared element.
     * @return <code>true</code> if the conditions that reference
     *          up to the given declaration are true;
     *          <code>false</code> otherwise.
     */
    private boolean checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_209(int declIndex) {
        switch (declIndex) {
            case 0:
                return true;
            case 1:
                return true;
            case 2:
                return true;
            default: return false;
        }
    }

    /**
     * Executes the action part of the rule regraMRE_6_REMEDIACAO_20_criterion_1_indice_209
     */
    private void regraMRE_6_REMEDIACAO_20_criterion_1_indice_209() {
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "Regra acionada para selecionar a MRE: regraMRE_6_REMEDIACAO_20_criterion_1_ \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Condições:  \n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tMRE = \"MRE 6\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "\tCritério = \"MRE específica para o erro\"\n");
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + " Ações:  \n");
			MultipleExternalRepresentation m = module_entity_DBConnect_1.getMER(6L);
			module_entity_RuleToHuman_1.setDescription(module_entity_RuleToHuman_1.getDescription() + "	Exiba a MRE \"MRE 6\" \n");
			module_entity_Action_1.setMer(m);
			module_entity_Action_1.getRegrasAcionadas().add("regraMRE_6_REMEDIACAO_20_criterion_1_");
			modified(module_entity_RuleToHuman_1);
			modified(module_entity_Action_1);
			System.out.println("Exibição de MRE 6 - MRE 6");
			flush();

	    }


// -rule-end- 

// end_rules
	

    /**
     * The names of the rules in this class file
     */
    private static final String[] File_ruleNames = {
        "regraMRE_1_REMEDIACAO_1_criterion_1_indice_0",
        "regraMRE_2_REMEDIACAO_4_criterion_1_indice_1",
        "regraMRE_2_REMEDIACAO_5_criterion_1_indice_2",
        "regraMRE_6_REMEDIACAO_15_criterion_1_indice_3",
        "regraMRE_1_REMEDIACAO_2_criterion_1_indice_4",
        "regraMRE_2_REMEDIACAO_6_criterion_1_indice_5",
        "regraMRE_6_REMEDIACAO_16_criterion_1_indice_6",
        "regraMRE_2_REMEDIACAO_3_criterion_1_indice_7",
        "regraMRE_2_REMEDIACAO_7_criterion_1_indice_8",
        "regraMRE_6_REMEDIACAO_17_criterion_1_indice_9",
        "regraMRE_4_REMEDIACAO_8_criterion_1_indice_10",
        "regraMRE_6_REMEDIACAO_18_criterion_1_indice_11",
        "regraMRE_5_REMEDIACAO_13_criterion_1_indice_12",
        "regraMRE_5_REMEDIACAO_14_criterion_1_indice_13",
        "regraMRE_6_REMEDIACAO_20_criterion_1_indice_14",
        "regraMRE_1_REMEDIACAO_1_criterion_1_indice_15",
        "regraMRE_2_REMEDIACAO_4_criterion_1_indice_16",
        "regraMRE_2_REMEDIACAO_5_criterion_1_indice_17",
        "regraMRE_6_REMEDIACAO_15_criterion_1_indice_18",
        "regraMRE_1_REMEDIACAO_2_criterion_1_indice_19",
        "regraMRE_2_REMEDIACAO_6_criterion_1_indice_20",
        "regraMRE_6_REMEDIACAO_16_criterion_1_indice_21",
        "regraMRE_2_REMEDIACAO_3_criterion_1_indice_22",
        "regraMRE_2_REMEDIACAO_7_criterion_1_indice_23",
        "regraMRE_6_REMEDIACAO_17_criterion_1_indice_24",
        "regraMRE_4_REMEDIACAO_8_criterion_1_indice_25",
        "regraMRE_6_REMEDIACAO_18_criterion_1_indice_26",
        "regraMRE_5_REMEDIACAO_13_criterion_1_indice_27",
        "regraMRE_5_REMEDIACAO_14_criterion_1_indice_28",
        "regraMRE_6_REMEDIACAO_20_criterion_1_indice_29",
        "regraMRE_1_REMEDIACAO_1_criterion_1_indice_30",
        "regraMRE_2_REMEDIACAO_4_criterion_1_indice_31",
        "regraMRE_2_REMEDIACAO_5_criterion_1_indice_32",
        "regraMRE_6_REMEDIACAO_15_criterion_1_indice_33",
        "regraMRE_1_REMEDIACAO_2_criterion_1_indice_34",
        "regraMRE_2_REMEDIACAO_6_criterion_1_indice_35",
        "regraMRE_6_REMEDIACAO_16_criterion_1_indice_36",
        "regraMRE_2_REMEDIACAO_3_criterion_1_indice_37",
        "regraMRE_2_REMEDIACAO_7_criterion_1_indice_38",
        "regraMRE_6_REMEDIACAO_17_criterion_1_indice_39",
        "regraMRE_4_REMEDIACAO_8_criterion_1_indice_40",
        "regraMRE_6_REMEDIACAO_18_criterion_1_indice_41",
        "regraMRE_5_REMEDIACAO_13_criterion_1_indice_42",
        "regraMRE_5_REMEDIACAO_14_criterion_1_indice_43",
        "regraMRE_6_REMEDIACAO_20_criterion_1_indice_44",
        "regraMRE_1_REMEDIACAO_1_criterion_1_indice_45",
        "regraMRE_2_REMEDIACAO_4_criterion_1_indice_46",
        "regraMRE_2_REMEDIACAO_5_criterion_1_indice_47",
        "regraMRE_6_REMEDIACAO_15_criterion_1_indice_48",
        "regraMRE_1_REMEDIACAO_2_criterion_1_indice_49",
        "regraMRE_2_REMEDIACAO_6_criterion_1_indice_50",
        "regraMRE_6_REMEDIACAO_16_criterion_1_indice_51",
        "regraMRE_2_REMEDIACAO_3_criterion_1_indice_52",
        "regraMRE_2_REMEDIACAO_7_criterion_1_indice_53",
        "regraMRE_6_REMEDIACAO_17_criterion_1_indice_54",
        "regraMRE_4_REMEDIACAO_8_criterion_1_indice_55",
        "regraMRE_6_REMEDIACAO_18_criterion_1_indice_56",
        "regraMRE_5_REMEDIACAO_13_criterion_1_indice_57",
        "regraMRE_5_REMEDIACAO_14_criterion_1_indice_58",
        "regraMRE_6_REMEDIACAO_20_criterion_1_indice_59",
        "regraMRE_1_REMEDIACAO_1_criterion_1_indice_60",
        "regraMRE_2_REMEDIACAO_4_criterion_1_indice_61",
        "regraMRE_2_REMEDIACAO_5_criterion_1_indice_62",
        "regraMRE_6_REMEDIACAO_15_criterion_1_indice_63",
        "regraMRE_1_REMEDIACAO_2_criterion_1_indice_64",
        "regraMRE_2_REMEDIACAO_6_criterion_1_indice_65",
        "regraMRE_6_REMEDIACAO_16_criterion_1_indice_66",
        "regraMRE_2_REMEDIACAO_3_criterion_1_indice_67",
        "regraMRE_2_REMEDIACAO_7_criterion_1_indice_68",
        "regraMRE_6_REMEDIACAO_17_criterion_1_indice_69",
        "regraMRE_4_REMEDIACAO_8_criterion_1_indice_70",
        "regraMRE_6_REMEDIACAO_18_criterion_1_indice_71",
        "regraMRE_5_REMEDIACAO_13_criterion_1_indice_72",
        "regraMRE_5_REMEDIACAO_14_criterion_1_indice_73",
        "regraMRE_6_REMEDIACAO_20_criterion_1_indice_74",
        "regraMRE_1_REMEDIACAO_1_criterion_1_indice_75",
        "regraMRE_2_REMEDIACAO_4_criterion_1_indice_76",
        "regraMRE_2_REMEDIACAO_5_criterion_1_indice_77",
        "regraMRE_6_REMEDIACAO_15_criterion_1_indice_78",
        "regraMRE_1_REMEDIACAO_2_criterion_1_indice_79",
        "regraMRE_2_REMEDIACAO_6_criterion_1_indice_80",
        "regraMRE_6_REMEDIACAO_16_criterion_1_indice_81",
        "regraMRE_2_REMEDIACAO_3_criterion_1_indice_82",
        "regraMRE_2_REMEDIACAO_7_criterion_1_indice_83",
        "regraMRE_6_REMEDIACAO_17_criterion_1_indice_84",
        "regraMRE_4_REMEDIACAO_8_criterion_1_indice_85",
        "regraMRE_6_REMEDIACAO_18_criterion_1_indice_86",
        "regraMRE_5_REMEDIACAO_13_criterion_1_indice_87",
        "regraMRE_5_REMEDIACAO_14_criterion_1_indice_88",
        "regraMRE_6_REMEDIACAO_20_criterion_1_indice_89",
        "regraMRE_1_REMEDIACAO_1_criterion_1_indice_90",
        "regraMRE_2_REMEDIACAO_4_criterion_1_indice_91",
        "regraMRE_2_REMEDIACAO_5_criterion_1_indice_92",
        "regraMRE_6_REMEDIACAO_15_criterion_1_indice_93",
        "regraMRE_1_REMEDIACAO_2_criterion_1_indice_94",
        "regraMRE_2_REMEDIACAO_6_criterion_1_indice_95",
        "regraMRE_6_REMEDIACAO_16_criterion_1_indice_96",
        "regraMRE_2_REMEDIACAO_3_criterion_1_indice_97",
        "regraMRE_2_REMEDIACAO_7_criterion_1_indice_98",
        "regraMRE_6_REMEDIACAO_17_criterion_1_indice_99",
        "regraMRE_4_REMEDIACAO_8_criterion_1_indice_100",
        "regraMRE_6_REMEDIACAO_18_criterion_1_indice_101",
        "regraMRE_5_REMEDIACAO_13_criterion_1_indice_102",
        "regraMRE_5_REMEDIACAO_14_criterion_1_indice_103",
        "regraMRE_6_REMEDIACAO_20_criterion_1_indice_104",
        "regraMRE_1_REMEDIACAO_1_criterion_1_indice_105",
        "regraMRE_2_REMEDIACAO_4_criterion_1_indice_106",
        "regraMRE_2_REMEDIACAO_5_criterion_1_indice_107",
        "regraMRE_6_REMEDIACAO_15_criterion_1_indice_108",
        "regraMRE_1_REMEDIACAO_2_criterion_1_indice_109",
        "regraMRE_2_REMEDIACAO_6_criterion_1_indice_110",
        "regraMRE_6_REMEDIACAO_16_criterion_1_indice_111",
        "regraMRE_2_REMEDIACAO_3_criterion_1_indice_112",
        "regraMRE_2_REMEDIACAO_7_criterion_1_indice_113",
        "regraMRE_6_REMEDIACAO_17_criterion_1_indice_114",
        "regraMRE_4_REMEDIACAO_8_criterion_1_indice_115",
        "regraMRE_6_REMEDIACAO_18_criterion_1_indice_116",
        "regraMRE_5_REMEDIACAO_13_criterion_1_indice_117",
        "regraMRE_5_REMEDIACAO_14_criterion_1_indice_118",
        "regraMRE_6_REMEDIACAO_20_criterion_1_indice_119",
        "regraMRE_1_REMEDIACAO_1_criterion_1_indice_120",
        "regraMRE_2_REMEDIACAO_4_criterion_1_indice_121",
        "regraMRE_2_REMEDIACAO_5_criterion_1_indice_122",
        "regraMRE_6_REMEDIACAO_15_criterion_1_indice_123",
        "regraMRE_1_REMEDIACAO_2_criterion_1_indice_124",
        "regraMRE_2_REMEDIACAO_6_criterion_1_indice_125",
        "regraMRE_6_REMEDIACAO_16_criterion_1_indice_126",
        "regraMRE_2_REMEDIACAO_3_criterion_1_indice_127",
        "regraMRE_2_REMEDIACAO_7_criterion_1_indice_128",
        "regraMRE_6_REMEDIACAO_17_criterion_1_indice_129",
        "regraMRE_4_REMEDIACAO_8_criterion_1_indice_130",
        "regraMRE_6_REMEDIACAO_18_criterion_1_indice_131",
        "regraMRE_5_REMEDIACAO_13_criterion_1_indice_132",
        "regraMRE_5_REMEDIACAO_14_criterion_1_indice_133",
        "regraMRE_6_REMEDIACAO_20_criterion_1_indice_134",
        "regraMRE_1_REMEDIACAO_1_criterion_1_indice_135",
        "regraMRE_2_REMEDIACAO_4_criterion_1_indice_136",
        "regraMRE_2_REMEDIACAO_5_criterion_1_indice_137",
        "regraMRE_6_REMEDIACAO_15_criterion_1_indice_138",
        "regraMRE_1_REMEDIACAO_2_criterion_1_indice_139",
        "regraMRE_2_REMEDIACAO_6_criterion_1_indice_140",
        "regraMRE_6_REMEDIACAO_16_criterion_1_indice_141",
        "regraMRE_2_REMEDIACAO_3_criterion_1_indice_142",
        "regraMRE_2_REMEDIACAO_7_criterion_1_indice_143",
        "regraMRE_6_REMEDIACAO_17_criterion_1_indice_144",
        "regraMRE_4_REMEDIACAO_8_criterion_1_indice_145",
        "regraMRE_6_REMEDIACAO_18_criterion_1_indice_146",
        "regraMRE_5_REMEDIACAO_13_criterion_1_indice_147",
        "regraMRE_5_REMEDIACAO_14_criterion_1_indice_148",
        "regraMRE_6_REMEDIACAO_20_criterion_1_indice_149",
        "regraMRE_1_REMEDIACAO_1_criterion_1_indice_150",
        "regraMRE_2_REMEDIACAO_4_criterion_1_indice_151",
        "regraMRE_2_REMEDIACAO_5_criterion_1_indice_152",
        "regraMRE_6_REMEDIACAO_15_criterion_1_indice_153",
        "regraMRE_1_REMEDIACAO_2_criterion_1_indice_154",
        "regraMRE_2_REMEDIACAO_6_criterion_1_indice_155",
        "regraMRE_6_REMEDIACAO_16_criterion_1_indice_156",
        "regraMRE_2_REMEDIACAO_3_criterion_1_indice_157",
        "regraMRE_2_REMEDIACAO_7_criterion_1_indice_158",
        "regraMRE_6_REMEDIACAO_17_criterion_1_indice_159",
        "regraMRE_4_REMEDIACAO_8_criterion_1_indice_160",
        "regraMRE_6_REMEDIACAO_18_criterion_1_indice_161",
        "regraMRE_5_REMEDIACAO_13_criterion_1_indice_162",
        "regraMRE_5_REMEDIACAO_14_criterion_1_indice_163",
        "regraMRE_6_REMEDIACAO_20_criterion_1_indice_164",
        "regraMRE_1_REMEDIACAO_1_criterion_1_indice_165",
        "regraMRE_2_REMEDIACAO_4_criterion_1_indice_166",
        "regraMRE_2_REMEDIACAO_5_criterion_1_indice_167",
        "regraMRE_6_REMEDIACAO_15_criterion_1_indice_168",
        "regraMRE_1_REMEDIACAO_2_criterion_1_indice_169",
        "regraMRE_2_REMEDIACAO_6_criterion_1_indice_170",
        "regraMRE_6_REMEDIACAO_16_criterion_1_indice_171",
        "regraMRE_2_REMEDIACAO_3_criterion_1_indice_172",
        "regraMRE_2_REMEDIACAO_7_criterion_1_indice_173",
        "regraMRE_6_REMEDIACAO_17_criterion_1_indice_174",
        "regraMRE_4_REMEDIACAO_8_criterion_1_indice_175",
        "regraMRE_6_REMEDIACAO_18_criterion_1_indice_176",
        "regraMRE_5_REMEDIACAO_13_criterion_1_indice_177",
        "regraMRE_5_REMEDIACAO_14_criterion_1_indice_178",
        "regraMRE_6_REMEDIACAO_20_criterion_1_indice_179",
        "regraMRE_1_REMEDIACAO_1_criterion_1_indice_180",
        "regraMRE_2_REMEDIACAO_4_criterion_1_indice_181",
        "regraMRE_2_REMEDIACAO_5_criterion_1_indice_182",
        "regraMRE_6_REMEDIACAO_15_criterion_1_indice_183",
        "regraMRE_1_REMEDIACAO_2_criterion_1_indice_184",
        "regraMRE_2_REMEDIACAO_6_criterion_1_indice_185",
        "regraMRE_6_REMEDIACAO_16_criterion_1_indice_186",
        "regraMRE_2_REMEDIACAO_3_criterion_1_indice_187",
        "regraMRE_2_REMEDIACAO_7_criterion_1_indice_188",
        "regraMRE_6_REMEDIACAO_17_criterion_1_indice_189",
        "regraMRE_4_REMEDIACAO_8_criterion_1_indice_190",
        "regraMRE_6_REMEDIACAO_18_criterion_1_indice_191",
        "regraMRE_5_REMEDIACAO_13_criterion_1_indice_192",
        "regraMRE_5_REMEDIACAO_14_criterion_1_indice_193",
        "regraMRE_6_REMEDIACAO_20_criterion_1_indice_194",
        "regraMRE_1_REMEDIACAO_1_criterion_1_indice_195",
        "regraMRE_2_REMEDIACAO_4_criterion_1_indice_196",
        "regraMRE_2_REMEDIACAO_5_criterion_1_indice_197",
        "regraMRE_6_REMEDIACAO_15_criterion_1_indice_198",
        "regraMRE_1_REMEDIACAO_2_criterion_1_indice_199",
        "regraMRE_2_REMEDIACAO_6_criterion_1_indice_200",
        "regraMRE_6_REMEDIACAO_16_criterion_1_indice_201",
        "regraMRE_2_REMEDIACAO_3_criterion_1_indice_202",
        "regraMRE_2_REMEDIACAO_7_criterion_1_indice_203",
        "regraMRE_6_REMEDIACAO_17_criterion_1_indice_204",
        "regraMRE_4_REMEDIACAO_8_criterion_1_indice_205",
        "regraMRE_6_REMEDIACAO_18_criterion_1_indice_206",
        "regraMRE_5_REMEDIACAO_13_criterion_1_indice_207",
        "regraMRE_5_REMEDIACAO_14_criterion_1_indice_208",
        "regraMRE_6_REMEDIACAO_20_criterion_1_indice_209"
    };

    /**
     * Returns the name of the rules in this class file.
     *
     * @return the name of the rules in this class file.
     */
    public String[] getRuleNames() {
        return File_ruleNames;
    }

    /**
     * The number of declarations of the rules in this class file.
     */
    private static final int[] File_numberOfDeclarations = {
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3
    };

    /**
     * Returns the number of declarations of the rules in this class file.
     *
     * @return the number of declarations  of the rules in this class file.
     */
    public int[] getNumberOfDeclarations() {
        return File_numberOfDeclarations;
    }

    /**
     * The number of conditions of the rules in this class file.
     */
    private static final int[] File_numberOfConditions = {
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2
    };

    /**
     * Returns the number of conditions of the rules in this class file.
     *
     * @return the number of conditions  of the rules in this class file.
     */
    public int[] getNumberOfConditions() {
        return File_numberOfConditions;
    }

    /**
     * Checks whether a condition of some rule is satisfied.
     *
     * @param ruleIndex the index of the rule to be checked
     * @param condIndex the index of the condition to be checked
     * @return <code>true</code> if the corresponding condition for the
     *          given rule is satisfied. <code>false</code> otherwise.
     */
    public boolean checkCondition(int ruleIndex, int condIndex) {
        switch (ruleIndex) {
            case 0: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_0_cond(condIndex);
            case 1: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_1_cond(condIndex);
            case 2: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_2_cond(condIndex);
            case 3: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_3_cond(condIndex);
            case 4: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_4_cond(condIndex);
            case 5: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_5_cond(condIndex);
            case 6: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_6_cond(condIndex);
            case 7: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_7_cond(condIndex);
            case 8: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_8_cond(condIndex);
            case 9: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_9_cond(condIndex);
            case 10: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_10_cond(condIndex);
            case 11: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_11_cond(condIndex);
            case 12: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_12_cond(condIndex);
            case 13: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_13_cond(condIndex);
            case 14: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_14_cond(condIndex);
            case 15: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_15_cond(condIndex);
            case 16: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_16_cond(condIndex);
            case 17: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_17_cond(condIndex);
            case 18: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_18_cond(condIndex);
            case 19: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_19_cond(condIndex);
            case 20: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_20_cond(condIndex);
            case 21: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_21_cond(condIndex);
            case 22: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_22_cond(condIndex);
            case 23: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_23_cond(condIndex);
            case 24: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_24_cond(condIndex);
            case 25: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_25_cond(condIndex);
            case 26: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_26_cond(condIndex);
            case 27: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_27_cond(condIndex);
            case 28: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_28_cond(condIndex);
            case 29: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_29_cond(condIndex);
            case 30: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_30_cond(condIndex);
            case 31: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_31_cond(condIndex);
            case 32: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_32_cond(condIndex);
            case 33: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_33_cond(condIndex);
            case 34: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_34_cond(condIndex);
            case 35: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_35_cond(condIndex);
            case 36: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_36_cond(condIndex);
            case 37: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_37_cond(condIndex);
            case 38: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_38_cond(condIndex);
            case 39: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_39_cond(condIndex);
            case 40: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_40_cond(condIndex);
            case 41: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_41_cond(condIndex);
            case 42: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_42_cond(condIndex);
            case 43: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_43_cond(condIndex);
            case 44: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_44_cond(condIndex);
            case 45: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_45_cond(condIndex);
            case 46: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_46_cond(condIndex);
            case 47: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_47_cond(condIndex);
            case 48: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_48_cond(condIndex);
            case 49: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_49_cond(condIndex);
            case 50: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_50_cond(condIndex);
            case 51: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_51_cond(condIndex);
            case 52: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_52_cond(condIndex);
            case 53: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_53_cond(condIndex);
            case 54: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_54_cond(condIndex);
            case 55: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_55_cond(condIndex);
            case 56: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_56_cond(condIndex);
            case 57: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_57_cond(condIndex);
            case 58: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_58_cond(condIndex);
            case 59: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_59_cond(condIndex);
            case 60: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_60_cond(condIndex);
            case 61: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_61_cond(condIndex);
            case 62: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_62_cond(condIndex);
            case 63: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_63_cond(condIndex);
            case 64: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_64_cond(condIndex);
            case 65: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_65_cond(condIndex);
            case 66: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_66_cond(condIndex);
            case 67: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_67_cond(condIndex);
            case 68: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_68_cond(condIndex);
            case 69: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_69_cond(condIndex);
            case 70: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_70_cond(condIndex);
            case 71: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_71_cond(condIndex);
            case 72: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_72_cond(condIndex);
            case 73: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_73_cond(condIndex);
            case 74: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_74_cond(condIndex);
            case 75: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_75_cond(condIndex);
            case 76: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_76_cond(condIndex);
            case 77: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_77_cond(condIndex);
            case 78: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_78_cond(condIndex);
            case 79: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_79_cond(condIndex);
            case 80: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_80_cond(condIndex);
            case 81: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_81_cond(condIndex);
            case 82: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_82_cond(condIndex);
            case 83: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_83_cond(condIndex);
            case 84: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_84_cond(condIndex);
            case 85: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_85_cond(condIndex);
            case 86: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_86_cond(condIndex);
            case 87: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_87_cond(condIndex);
            case 88: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_88_cond(condIndex);
            case 89: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_89_cond(condIndex);
            case 90: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_90_cond(condIndex);
            case 91: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_91_cond(condIndex);
            case 92: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_92_cond(condIndex);
            case 93: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_93_cond(condIndex);
            case 94: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_94_cond(condIndex);
            case 95: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_95_cond(condIndex);
            case 96: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_96_cond(condIndex);
            case 97: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_97_cond(condIndex);
            case 98: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_98_cond(condIndex);
            case 99: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_99_cond(condIndex);
            case 100: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_100_cond(condIndex);
            case 101: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_101_cond(condIndex);
            case 102: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_102_cond(condIndex);
            case 103: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_103_cond(condIndex);
            case 104: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_104_cond(condIndex);
            case 105: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_105_cond(condIndex);
            case 106: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_106_cond(condIndex);
            case 107: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_107_cond(condIndex);
            case 108: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_108_cond(condIndex);
            case 109: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_109_cond(condIndex);
            case 110: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_110_cond(condIndex);
            case 111: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_111_cond(condIndex);
            case 112: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_112_cond(condIndex);
            case 113: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_113_cond(condIndex);
            case 114: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_114_cond(condIndex);
            case 115: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_115_cond(condIndex);
            case 116: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_116_cond(condIndex);
            case 117: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_117_cond(condIndex);
            case 118: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_118_cond(condIndex);
            case 119: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_119_cond(condIndex);
            case 120: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_120_cond(condIndex);
            case 121: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_121_cond(condIndex);
            case 122: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_122_cond(condIndex);
            case 123: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_123_cond(condIndex);
            case 124: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_124_cond(condIndex);
            case 125: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_125_cond(condIndex);
            case 126: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_126_cond(condIndex);
            case 127: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_127_cond(condIndex);
            case 128: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_128_cond(condIndex);
            case 129: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_129_cond(condIndex);
            case 130: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_130_cond(condIndex);
            case 131: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_131_cond(condIndex);
            case 132: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_132_cond(condIndex);
            case 133: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_133_cond(condIndex);
            case 134: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_134_cond(condIndex);
            case 135: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_135_cond(condIndex);
            case 136: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_136_cond(condIndex);
            case 137: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_137_cond(condIndex);
            case 138: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_138_cond(condIndex);
            case 139: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_139_cond(condIndex);
            case 140: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_140_cond(condIndex);
            case 141: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_141_cond(condIndex);
            case 142: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_142_cond(condIndex);
            case 143: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_143_cond(condIndex);
            case 144: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_144_cond(condIndex);
            case 145: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_145_cond(condIndex);
            case 146: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_146_cond(condIndex);
            case 147: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_147_cond(condIndex);
            case 148: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_148_cond(condIndex);
            case 149: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_149_cond(condIndex);
            case 150: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_150_cond(condIndex);
            case 151: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_151_cond(condIndex);
            case 152: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_152_cond(condIndex);
            case 153: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_153_cond(condIndex);
            case 154: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_154_cond(condIndex);
            case 155: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_155_cond(condIndex);
            case 156: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_156_cond(condIndex);
            case 157: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_157_cond(condIndex);
            case 158: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_158_cond(condIndex);
            case 159: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_159_cond(condIndex);
            case 160: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_160_cond(condIndex);
            case 161: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_161_cond(condIndex);
            case 162: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_162_cond(condIndex);
            case 163: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_163_cond(condIndex);
            case 164: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_164_cond(condIndex);
            case 165: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_165_cond(condIndex);
            case 166: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_166_cond(condIndex);
            case 167: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_167_cond(condIndex);
            case 168: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_168_cond(condIndex);
            case 169: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_169_cond(condIndex);
            case 170: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_170_cond(condIndex);
            case 171: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_171_cond(condIndex);
            case 172: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_172_cond(condIndex);
            case 173: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_173_cond(condIndex);
            case 174: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_174_cond(condIndex);
            case 175: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_175_cond(condIndex);
            case 176: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_176_cond(condIndex);
            case 177: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_177_cond(condIndex);
            case 178: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_178_cond(condIndex);
            case 179: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_179_cond(condIndex);
            case 180: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_180_cond(condIndex);
            case 181: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_181_cond(condIndex);
            case 182: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_182_cond(condIndex);
            case 183: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_183_cond(condIndex);
            case 184: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_184_cond(condIndex);
            case 185: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_185_cond(condIndex);
            case 186: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_186_cond(condIndex);
            case 187: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_187_cond(condIndex);
            case 188: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_188_cond(condIndex);
            case 189: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_189_cond(condIndex);
            case 190: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_190_cond(condIndex);
            case 191: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_191_cond(condIndex);
            case 192: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_192_cond(condIndex);
            case 193: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_193_cond(condIndex);
            case 194: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_194_cond(condIndex);
            case 195: return regraMRE_1_REMEDIACAO_1_criterion_1_indice_195_cond(condIndex);
            case 196: return regraMRE_2_REMEDIACAO_4_criterion_1_indice_196_cond(condIndex);
            case 197: return regraMRE_2_REMEDIACAO_5_criterion_1_indice_197_cond(condIndex);
            case 198: return regraMRE_6_REMEDIACAO_15_criterion_1_indice_198_cond(condIndex);
            case 199: return regraMRE_1_REMEDIACAO_2_criterion_1_indice_199_cond(condIndex);
            case 200: return regraMRE_2_REMEDIACAO_6_criterion_1_indice_200_cond(condIndex);
            case 201: return regraMRE_6_REMEDIACAO_16_criterion_1_indice_201_cond(condIndex);
            case 202: return regraMRE_2_REMEDIACAO_3_criterion_1_indice_202_cond(condIndex);
            case 203: return regraMRE_2_REMEDIACAO_7_criterion_1_indice_203_cond(condIndex);
            case 204: return regraMRE_6_REMEDIACAO_17_criterion_1_indice_204_cond(condIndex);
            case 205: return regraMRE_4_REMEDIACAO_8_criterion_1_indice_205_cond(condIndex);
            case 206: return regraMRE_6_REMEDIACAO_18_criterion_1_indice_206_cond(condIndex);
            case 207: return regraMRE_5_REMEDIACAO_13_criterion_1_indice_207_cond(condIndex);
            case 208: return regraMRE_5_REMEDIACAO_14_criterion_1_indice_208_cond(condIndex);
            case 209: return regraMRE_6_REMEDIACAO_20_criterion_1_indice_209_cond(condIndex);
            default: return false;
        }
    }

    /**
     * Checks whether all conditions of some rule that depend only on
     * the given object are satisfied.
     *
     * @param ruleIndex the index of the rule to be checked
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all corresponding conditions for
     *          the given rule are satisfied;
     *           <code>false</code> otherwise.
     */
    public boolean checkConditionsOnlyOf(int ruleIndex, int declIndex) {
        switch (ruleIndex) {
            case 0: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_0(declIndex);
            case 1: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_1(declIndex);
            case 2: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_2(declIndex);
            case 3: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_3(declIndex);
            case 4: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_4(declIndex);
            case 5: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_5(declIndex);
            case 6: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_6(declIndex);
            case 7: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_7(declIndex);
            case 8: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_8(declIndex);
            case 9: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_9(declIndex);
            case 10: return checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_10(declIndex);
            case 11: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_11(declIndex);
            case 12: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_12(declIndex);
            case 13: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_13(declIndex);
            case 14: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_14(declIndex);
            case 15: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_15(declIndex);
            case 16: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_16(declIndex);
            case 17: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_17(declIndex);
            case 18: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_18(declIndex);
            case 19: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_19(declIndex);
            case 20: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_20(declIndex);
            case 21: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_21(declIndex);
            case 22: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_22(declIndex);
            case 23: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_23(declIndex);
            case 24: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_24(declIndex);
            case 25: return checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_25(declIndex);
            case 26: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_26(declIndex);
            case 27: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_27(declIndex);
            case 28: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_28(declIndex);
            case 29: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_29(declIndex);
            case 30: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_30(declIndex);
            case 31: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_31(declIndex);
            case 32: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_32(declIndex);
            case 33: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_33(declIndex);
            case 34: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_34(declIndex);
            case 35: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_35(declIndex);
            case 36: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_36(declIndex);
            case 37: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_37(declIndex);
            case 38: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_38(declIndex);
            case 39: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_39(declIndex);
            case 40: return checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_40(declIndex);
            case 41: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_41(declIndex);
            case 42: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_42(declIndex);
            case 43: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_43(declIndex);
            case 44: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_44(declIndex);
            case 45: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_45(declIndex);
            case 46: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_46(declIndex);
            case 47: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_47(declIndex);
            case 48: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_48(declIndex);
            case 49: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_49(declIndex);
            case 50: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_50(declIndex);
            case 51: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_51(declIndex);
            case 52: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_52(declIndex);
            case 53: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_53(declIndex);
            case 54: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_54(declIndex);
            case 55: return checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_55(declIndex);
            case 56: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_56(declIndex);
            case 57: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_57(declIndex);
            case 58: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_58(declIndex);
            case 59: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_59(declIndex);
            case 60: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_60(declIndex);
            case 61: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_61(declIndex);
            case 62: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_62(declIndex);
            case 63: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_63(declIndex);
            case 64: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_64(declIndex);
            case 65: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_65(declIndex);
            case 66: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_66(declIndex);
            case 67: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_67(declIndex);
            case 68: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_68(declIndex);
            case 69: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_69(declIndex);
            case 70: return checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_70(declIndex);
            case 71: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_71(declIndex);
            case 72: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_72(declIndex);
            case 73: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_73(declIndex);
            case 74: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_74(declIndex);
            case 75: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_75(declIndex);
            case 76: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_76(declIndex);
            case 77: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_77(declIndex);
            case 78: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_78(declIndex);
            case 79: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_79(declIndex);
            case 80: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_80(declIndex);
            case 81: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_81(declIndex);
            case 82: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_82(declIndex);
            case 83: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_83(declIndex);
            case 84: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_84(declIndex);
            case 85: return checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_85(declIndex);
            case 86: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_86(declIndex);
            case 87: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_87(declIndex);
            case 88: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_88(declIndex);
            case 89: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_89(declIndex);
            case 90: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_90(declIndex);
            case 91: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_91(declIndex);
            case 92: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_92(declIndex);
            case 93: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_93(declIndex);
            case 94: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_94(declIndex);
            case 95: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_95(declIndex);
            case 96: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_96(declIndex);
            case 97: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_97(declIndex);
            case 98: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_98(declIndex);
            case 99: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_99(declIndex);
            case 100: return checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_100(declIndex);
            case 101: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_101(declIndex);
            case 102: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_102(declIndex);
            case 103: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_103(declIndex);
            case 104: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_104(declIndex);
            case 105: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_105(declIndex);
            case 106: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_106(declIndex);
            case 107: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_107(declIndex);
            case 108: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_108(declIndex);
            case 109: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_109(declIndex);
            case 110: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_110(declIndex);
            case 111: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_111(declIndex);
            case 112: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_112(declIndex);
            case 113: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_113(declIndex);
            case 114: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_114(declIndex);
            case 115: return checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_115(declIndex);
            case 116: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_116(declIndex);
            case 117: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_117(declIndex);
            case 118: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_118(declIndex);
            case 119: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_119(declIndex);
            case 120: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_120(declIndex);
            case 121: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_121(declIndex);
            case 122: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_122(declIndex);
            case 123: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_123(declIndex);
            case 124: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_124(declIndex);
            case 125: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_125(declIndex);
            case 126: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_126(declIndex);
            case 127: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_127(declIndex);
            case 128: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_128(declIndex);
            case 129: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_129(declIndex);
            case 130: return checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_130(declIndex);
            case 131: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_131(declIndex);
            case 132: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_132(declIndex);
            case 133: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_133(declIndex);
            case 134: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_134(declIndex);
            case 135: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_135(declIndex);
            case 136: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_136(declIndex);
            case 137: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_137(declIndex);
            case 138: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_138(declIndex);
            case 139: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_139(declIndex);
            case 140: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_140(declIndex);
            case 141: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_141(declIndex);
            case 142: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_142(declIndex);
            case 143: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_143(declIndex);
            case 144: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_144(declIndex);
            case 145: return checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_145(declIndex);
            case 146: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_146(declIndex);
            case 147: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_147(declIndex);
            case 148: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_148(declIndex);
            case 149: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_149(declIndex);
            case 150: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_150(declIndex);
            case 151: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_151(declIndex);
            case 152: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_152(declIndex);
            case 153: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_153(declIndex);
            case 154: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_154(declIndex);
            case 155: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_155(declIndex);
            case 156: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_156(declIndex);
            case 157: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_157(declIndex);
            case 158: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_158(declIndex);
            case 159: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_159(declIndex);
            case 160: return checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_160(declIndex);
            case 161: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_161(declIndex);
            case 162: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_162(declIndex);
            case 163: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_163(declIndex);
            case 164: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_164(declIndex);
            case 165: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_165(declIndex);
            case 166: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_166(declIndex);
            case 167: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_167(declIndex);
            case 168: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_168(declIndex);
            case 169: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_169(declIndex);
            case 170: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_170(declIndex);
            case 171: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_171(declIndex);
            case 172: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_172(declIndex);
            case 173: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_173(declIndex);
            case 174: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_174(declIndex);
            case 175: return checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_175(declIndex);
            case 176: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_176(declIndex);
            case 177: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_177(declIndex);
            case 178: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_178(declIndex);
            case 179: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_179(declIndex);
            case 180: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_180(declIndex);
            case 181: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_181(declIndex);
            case 182: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_182(declIndex);
            case 183: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_183(declIndex);
            case 184: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_184(declIndex);
            case 185: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_185(declIndex);
            case 186: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_186(declIndex);
            case 187: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_187(declIndex);
            case 188: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_188(declIndex);
            case 189: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_189(declIndex);
            case 190: return checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_190(declIndex);
            case 191: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_191(declIndex);
            case 192: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_192(declIndex);
            case 193: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_193(declIndex);
            case 194: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_194(declIndex);
            case 195: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_1_criterion_1_indice_195(declIndex);
            case 196: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_4_criterion_1_indice_196(declIndex);
            case 197: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_5_criterion_1_indice_197(declIndex);
            case 198: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_15_criterion_1_indice_198(declIndex);
            case 199: return checkConditionsOnlyOf_regraMRE_1_REMEDIACAO_2_criterion_1_indice_199(declIndex);
            case 200: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_6_criterion_1_indice_200(declIndex);
            case 201: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_16_criterion_1_indice_201(declIndex);
            case 202: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_3_criterion_1_indice_202(declIndex);
            case 203: return checkConditionsOnlyOf_regraMRE_2_REMEDIACAO_7_criterion_1_indice_203(declIndex);
            case 204: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_17_criterion_1_indice_204(declIndex);
            case 205: return checkConditionsOnlyOf_regraMRE_4_REMEDIACAO_8_criterion_1_indice_205(declIndex);
            case 206: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_18_criterion_1_indice_206(declIndex);
            case 207: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_13_criterion_1_indice_207(declIndex);
            case 208: return checkConditionsOnlyOf_regraMRE_5_REMEDIACAO_14_criterion_1_indice_208(declIndex);
            case 209: return checkConditionsOnlyOf_regraMRE_6_REMEDIACAO_20_criterion_1_indice_209(declIndex);
            default: return false;
        }
    }

    /**
     * Checks whether all the conditions of a rule which
     * reference only the elements declared up to the given index
     * are true.
     *
     * @param ruleIndex the index of the rule to be checked
     * @param declIndex the index of the declaration to be checked
     * @return <code>true</code> if all the conditions of a rule which
     *          reference only the elements declared up to the given index
     *          are satisfied; <code>false</code> otherwise.
     */
    public boolean checkCondForDeclaration(int ruleIndex, int declIndex) {
        switch (ruleIndex) {
            case 0: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_0(declIndex);
            case 1: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_1(declIndex);
            case 2: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_2(declIndex);
            case 3: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_3(declIndex);
            case 4: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_4(declIndex);
            case 5: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_5(declIndex);
            case 6: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_6(declIndex);
            case 7: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_7(declIndex);
            case 8: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_8(declIndex);
            case 9: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_9(declIndex);
            case 10: return checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_10(declIndex);
            case 11: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_11(declIndex);
            case 12: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_12(declIndex);
            case 13: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_13(declIndex);
            case 14: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_14(declIndex);
            case 15: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_15(declIndex);
            case 16: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_16(declIndex);
            case 17: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_17(declIndex);
            case 18: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_18(declIndex);
            case 19: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_19(declIndex);
            case 20: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_20(declIndex);
            case 21: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_21(declIndex);
            case 22: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_22(declIndex);
            case 23: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_23(declIndex);
            case 24: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_24(declIndex);
            case 25: return checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_25(declIndex);
            case 26: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_26(declIndex);
            case 27: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_27(declIndex);
            case 28: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_28(declIndex);
            case 29: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_29(declIndex);
            case 30: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_30(declIndex);
            case 31: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_31(declIndex);
            case 32: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_32(declIndex);
            case 33: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_33(declIndex);
            case 34: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_34(declIndex);
            case 35: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_35(declIndex);
            case 36: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_36(declIndex);
            case 37: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_37(declIndex);
            case 38: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_38(declIndex);
            case 39: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_39(declIndex);
            case 40: return checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_40(declIndex);
            case 41: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_41(declIndex);
            case 42: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_42(declIndex);
            case 43: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_43(declIndex);
            case 44: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_44(declIndex);
            case 45: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_45(declIndex);
            case 46: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_46(declIndex);
            case 47: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_47(declIndex);
            case 48: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_48(declIndex);
            case 49: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_49(declIndex);
            case 50: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_50(declIndex);
            case 51: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_51(declIndex);
            case 52: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_52(declIndex);
            case 53: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_53(declIndex);
            case 54: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_54(declIndex);
            case 55: return checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_55(declIndex);
            case 56: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_56(declIndex);
            case 57: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_57(declIndex);
            case 58: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_58(declIndex);
            case 59: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_59(declIndex);
            case 60: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_60(declIndex);
            case 61: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_61(declIndex);
            case 62: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_62(declIndex);
            case 63: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_63(declIndex);
            case 64: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_64(declIndex);
            case 65: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_65(declIndex);
            case 66: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_66(declIndex);
            case 67: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_67(declIndex);
            case 68: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_68(declIndex);
            case 69: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_69(declIndex);
            case 70: return checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_70(declIndex);
            case 71: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_71(declIndex);
            case 72: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_72(declIndex);
            case 73: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_73(declIndex);
            case 74: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_74(declIndex);
            case 75: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_75(declIndex);
            case 76: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_76(declIndex);
            case 77: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_77(declIndex);
            case 78: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_78(declIndex);
            case 79: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_79(declIndex);
            case 80: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_80(declIndex);
            case 81: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_81(declIndex);
            case 82: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_82(declIndex);
            case 83: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_83(declIndex);
            case 84: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_84(declIndex);
            case 85: return checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_85(declIndex);
            case 86: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_86(declIndex);
            case 87: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_87(declIndex);
            case 88: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_88(declIndex);
            case 89: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_89(declIndex);
            case 90: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_90(declIndex);
            case 91: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_91(declIndex);
            case 92: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_92(declIndex);
            case 93: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_93(declIndex);
            case 94: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_94(declIndex);
            case 95: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_95(declIndex);
            case 96: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_96(declIndex);
            case 97: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_97(declIndex);
            case 98: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_98(declIndex);
            case 99: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_99(declIndex);
            case 100: return checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_100(declIndex);
            case 101: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_101(declIndex);
            case 102: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_102(declIndex);
            case 103: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_103(declIndex);
            case 104: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_104(declIndex);
            case 105: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_105(declIndex);
            case 106: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_106(declIndex);
            case 107: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_107(declIndex);
            case 108: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_108(declIndex);
            case 109: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_109(declIndex);
            case 110: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_110(declIndex);
            case 111: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_111(declIndex);
            case 112: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_112(declIndex);
            case 113: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_113(declIndex);
            case 114: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_114(declIndex);
            case 115: return checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_115(declIndex);
            case 116: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_116(declIndex);
            case 117: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_117(declIndex);
            case 118: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_118(declIndex);
            case 119: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_119(declIndex);
            case 120: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_120(declIndex);
            case 121: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_121(declIndex);
            case 122: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_122(declIndex);
            case 123: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_123(declIndex);
            case 124: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_124(declIndex);
            case 125: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_125(declIndex);
            case 126: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_126(declIndex);
            case 127: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_127(declIndex);
            case 128: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_128(declIndex);
            case 129: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_129(declIndex);
            case 130: return checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_130(declIndex);
            case 131: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_131(declIndex);
            case 132: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_132(declIndex);
            case 133: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_133(declIndex);
            case 134: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_134(declIndex);
            case 135: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_135(declIndex);
            case 136: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_136(declIndex);
            case 137: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_137(declIndex);
            case 138: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_138(declIndex);
            case 139: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_139(declIndex);
            case 140: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_140(declIndex);
            case 141: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_141(declIndex);
            case 142: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_142(declIndex);
            case 143: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_143(declIndex);
            case 144: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_144(declIndex);
            case 145: return checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_145(declIndex);
            case 146: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_146(declIndex);
            case 147: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_147(declIndex);
            case 148: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_148(declIndex);
            case 149: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_149(declIndex);
            case 150: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_150(declIndex);
            case 151: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_151(declIndex);
            case 152: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_152(declIndex);
            case 153: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_153(declIndex);
            case 154: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_154(declIndex);
            case 155: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_155(declIndex);
            case 156: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_156(declIndex);
            case 157: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_157(declIndex);
            case 158: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_158(declIndex);
            case 159: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_159(declIndex);
            case 160: return checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_160(declIndex);
            case 161: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_161(declIndex);
            case 162: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_162(declIndex);
            case 163: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_163(declIndex);
            case 164: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_164(declIndex);
            case 165: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_165(declIndex);
            case 166: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_166(declIndex);
            case 167: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_167(declIndex);
            case 168: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_168(declIndex);
            case 169: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_169(declIndex);
            case 170: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_170(declIndex);
            case 171: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_171(declIndex);
            case 172: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_172(declIndex);
            case 173: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_173(declIndex);
            case 174: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_174(declIndex);
            case 175: return checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_175(declIndex);
            case 176: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_176(declIndex);
            case 177: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_177(declIndex);
            case 178: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_178(declIndex);
            case 179: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_179(declIndex);
            case 180: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_180(declIndex);
            case 181: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_181(declIndex);
            case 182: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_182(declIndex);
            case 183: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_183(declIndex);
            case 184: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_184(declIndex);
            case 185: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_185(declIndex);
            case 186: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_186(declIndex);
            case 187: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_187(declIndex);
            case 188: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_188(declIndex);
            case 189: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_189(declIndex);
            case 190: return checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_190(declIndex);
            case 191: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_191(declIndex);
            case 192: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_192(declIndex);
            case 193: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_193(declIndex);
            case 194: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_194(declIndex);
            case 195: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_1_criterion_1_indice_195(declIndex);
            case 196: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_4_criterion_1_indice_196(declIndex);
            case 197: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_5_criterion_1_indice_197(declIndex);
            case 198: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_15_criterion_1_indice_198(declIndex);
            case 199: return checkCondForDeclaration_regraMRE_1_REMEDIACAO_2_criterion_1_indice_199(declIndex);
            case 200: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_6_criterion_1_indice_200(declIndex);
            case 201: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_16_criterion_1_indice_201(declIndex);
            case 202: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_3_criterion_1_indice_202(declIndex);
            case 203: return checkCondForDeclaration_regraMRE_2_REMEDIACAO_7_criterion_1_indice_203(declIndex);
            case 204: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_17_criterion_1_indice_204(declIndex);
            case 205: return checkCondForDeclaration_regraMRE_4_REMEDIACAO_8_criterion_1_indice_205(declIndex);
            case 206: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_18_criterion_1_indice_206(declIndex);
            case 207: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_13_criterion_1_indice_207(declIndex);
            case 208: return checkCondForDeclaration_regraMRE_5_REMEDIACAO_14_criterion_1_indice_208(declIndex);
            case 209: return checkCondForDeclaration_regraMRE_6_REMEDIACAO_20_criterion_1_indice_209(declIndex);
            default: return false;
        }
    }

    /**
     * Returns the class name of an object declared in a rule.
     *
     * @param ruleIndex the index of the rule
     * @param declIndex the index of the declaration
     * @return the class name of the declared object.
     */
    public String getDeclaredClassName(int ruleIndex, int declIndex) {
        switch (ruleIndex) {
            case 0: return getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_0(declIndex);
            case 1: return getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_1(declIndex);
            case 2: return getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_2(declIndex);
            case 3: return getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_3(declIndex);
            case 4: return getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_4(declIndex);
            case 5: return getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_5(declIndex);
            case 6: return getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_6(declIndex);
            case 7: return getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_7(declIndex);
            case 8: return getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_8(declIndex);
            case 9: return getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_9(declIndex);
            case 10: return getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_10(declIndex);
            case 11: return getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_11(declIndex);
            case 12: return getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_12(declIndex);
            case 13: return getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_13(declIndex);
            case 14: return getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_14(declIndex);
            case 15: return getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_15(declIndex);
            case 16: return getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_16(declIndex);
            case 17: return getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_17(declIndex);
            case 18: return getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_18(declIndex);
            case 19: return getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_19(declIndex);
            case 20: return getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_20(declIndex);
            case 21: return getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_21(declIndex);
            case 22: return getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_22(declIndex);
            case 23: return getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_23(declIndex);
            case 24: return getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_24(declIndex);
            case 25: return getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_25(declIndex);
            case 26: return getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_26(declIndex);
            case 27: return getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_27(declIndex);
            case 28: return getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_28(declIndex);
            case 29: return getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_29(declIndex);
            case 30: return getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_30(declIndex);
            case 31: return getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_31(declIndex);
            case 32: return getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_32(declIndex);
            case 33: return getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_33(declIndex);
            case 34: return getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_34(declIndex);
            case 35: return getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_35(declIndex);
            case 36: return getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_36(declIndex);
            case 37: return getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_37(declIndex);
            case 38: return getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_38(declIndex);
            case 39: return getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_39(declIndex);
            case 40: return getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_40(declIndex);
            case 41: return getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_41(declIndex);
            case 42: return getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_42(declIndex);
            case 43: return getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_43(declIndex);
            case 44: return getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_44(declIndex);
            case 45: return getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_45(declIndex);
            case 46: return getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_46(declIndex);
            case 47: return getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_47(declIndex);
            case 48: return getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_48(declIndex);
            case 49: return getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_49(declIndex);
            case 50: return getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_50(declIndex);
            case 51: return getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_51(declIndex);
            case 52: return getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_52(declIndex);
            case 53: return getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_53(declIndex);
            case 54: return getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_54(declIndex);
            case 55: return getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_55(declIndex);
            case 56: return getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_56(declIndex);
            case 57: return getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_57(declIndex);
            case 58: return getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_58(declIndex);
            case 59: return getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_59(declIndex);
            case 60: return getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_60(declIndex);
            case 61: return getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_61(declIndex);
            case 62: return getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_62(declIndex);
            case 63: return getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_63(declIndex);
            case 64: return getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_64(declIndex);
            case 65: return getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_65(declIndex);
            case 66: return getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_66(declIndex);
            case 67: return getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_67(declIndex);
            case 68: return getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_68(declIndex);
            case 69: return getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_69(declIndex);
            case 70: return getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_70(declIndex);
            case 71: return getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_71(declIndex);
            case 72: return getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_72(declIndex);
            case 73: return getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_73(declIndex);
            case 74: return getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_74(declIndex);
            case 75: return getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_75(declIndex);
            case 76: return getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_76(declIndex);
            case 77: return getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_77(declIndex);
            case 78: return getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_78(declIndex);
            case 79: return getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_79(declIndex);
            case 80: return getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_80(declIndex);
            case 81: return getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_81(declIndex);
            case 82: return getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_82(declIndex);
            case 83: return getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_83(declIndex);
            case 84: return getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_84(declIndex);
            case 85: return getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_85(declIndex);
            case 86: return getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_86(declIndex);
            case 87: return getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_87(declIndex);
            case 88: return getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_88(declIndex);
            case 89: return getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_89(declIndex);
            case 90: return getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_90(declIndex);
            case 91: return getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_91(declIndex);
            case 92: return getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_92(declIndex);
            case 93: return getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_93(declIndex);
            case 94: return getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_94(declIndex);
            case 95: return getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_95(declIndex);
            case 96: return getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_96(declIndex);
            case 97: return getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_97(declIndex);
            case 98: return getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_98(declIndex);
            case 99: return getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_99(declIndex);
            case 100: return getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_100(declIndex);
            case 101: return getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_101(declIndex);
            case 102: return getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_102(declIndex);
            case 103: return getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_103(declIndex);
            case 104: return getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_104(declIndex);
            case 105: return getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_105(declIndex);
            case 106: return getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_106(declIndex);
            case 107: return getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_107(declIndex);
            case 108: return getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_108(declIndex);
            case 109: return getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_109(declIndex);
            case 110: return getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_110(declIndex);
            case 111: return getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_111(declIndex);
            case 112: return getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_112(declIndex);
            case 113: return getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_113(declIndex);
            case 114: return getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_114(declIndex);
            case 115: return getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_115(declIndex);
            case 116: return getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_116(declIndex);
            case 117: return getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_117(declIndex);
            case 118: return getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_118(declIndex);
            case 119: return getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_119(declIndex);
            case 120: return getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_120(declIndex);
            case 121: return getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_121(declIndex);
            case 122: return getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_122(declIndex);
            case 123: return getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_123(declIndex);
            case 124: return getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_124(declIndex);
            case 125: return getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_125(declIndex);
            case 126: return getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_126(declIndex);
            case 127: return getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_127(declIndex);
            case 128: return getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_128(declIndex);
            case 129: return getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_129(declIndex);
            case 130: return getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_130(declIndex);
            case 131: return getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_131(declIndex);
            case 132: return getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_132(declIndex);
            case 133: return getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_133(declIndex);
            case 134: return getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_134(declIndex);
            case 135: return getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_135(declIndex);
            case 136: return getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_136(declIndex);
            case 137: return getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_137(declIndex);
            case 138: return getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_138(declIndex);
            case 139: return getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_139(declIndex);
            case 140: return getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_140(declIndex);
            case 141: return getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_141(declIndex);
            case 142: return getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_142(declIndex);
            case 143: return getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_143(declIndex);
            case 144: return getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_144(declIndex);
            case 145: return getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_145(declIndex);
            case 146: return getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_146(declIndex);
            case 147: return getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_147(declIndex);
            case 148: return getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_148(declIndex);
            case 149: return getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_149(declIndex);
            case 150: return getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_150(declIndex);
            case 151: return getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_151(declIndex);
            case 152: return getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_152(declIndex);
            case 153: return getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_153(declIndex);
            case 154: return getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_154(declIndex);
            case 155: return getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_155(declIndex);
            case 156: return getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_156(declIndex);
            case 157: return getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_157(declIndex);
            case 158: return getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_158(declIndex);
            case 159: return getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_159(declIndex);
            case 160: return getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_160(declIndex);
            case 161: return getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_161(declIndex);
            case 162: return getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_162(declIndex);
            case 163: return getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_163(declIndex);
            case 164: return getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_164(declIndex);
            case 165: return getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_165(declIndex);
            case 166: return getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_166(declIndex);
            case 167: return getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_167(declIndex);
            case 168: return getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_168(declIndex);
            case 169: return getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_169(declIndex);
            case 170: return getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_170(declIndex);
            case 171: return getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_171(declIndex);
            case 172: return getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_172(declIndex);
            case 173: return getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_173(declIndex);
            case 174: return getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_174(declIndex);
            case 175: return getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_175(declIndex);
            case 176: return getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_176(declIndex);
            case 177: return getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_177(declIndex);
            case 178: return getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_178(declIndex);
            case 179: return getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_179(declIndex);
            case 180: return getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_180(declIndex);
            case 181: return getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_181(declIndex);
            case 182: return getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_182(declIndex);
            case 183: return getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_183(declIndex);
            case 184: return getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_184(declIndex);
            case 185: return getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_185(declIndex);
            case 186: return getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_186(declIndex);
            case 187: return getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_187(declIndex);
            case 188: return getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_188(declIndex);
            case 189: return getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_189(declIndex);
            case 190: return getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_190(declIndex);
            case 191: return getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_191(declIndex);
            case 192: return getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_192(declIndex);
            case 193: return getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_193(declIndex);
            case 194: return getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_194(declIndex);
            case 195: return getDeclaredClassName_regraMRE_1_REMEDIACAO_1_criterion_1_indice_195(declIndex);
            case 196: return getDeclaredClassName_regraMRE_2_REMEDIACAO_4_criterion_1_indice_196(declIndex);
            case 197: return getDeclaredClassName_regraMRE_2_REMEDIACAO_5_criterion_1_indice_197(declIndex);
            case 198: return getDeclaredClassName_regraMRE_6_REMEDIACAO_15_criterion_1_indice_198(declIndex);
            case 199: return getDeclaredClassName_regraMRE_1_REMEDIACAO_2_criterion_1_indice_199(declIndex);
            case 200: return getDeclaredClassName_regraMRE_2_REMEDIACAO_6_criterion_1_indice_200(declIndex);
            case 201: return getDeclaredClassName_regraMRE_6_REMEDIACAO_16_criterion_1_indice_201(declIndex);
            case 202: return getDeclaredClassName_regraMRE_2_REMEDIACAO_3_criterion_1_indice_202(declIndex);
            case 203: return getDeclaredClassName_regraMRE_2_REMEDIACAO_7_criterion_1_indice_203(declIndex);
            case 204: return getDeclaredClassName_regraMRE_6_REMEDIACAO_17_criterion_1_indice_204(declIndex);
            case 205: return getDeclaredClassName_regraMRE_4_REMEDIACAO_8_criterion_1_indice_205(declIndex);
            case 206: return getDeclaredClassName_regraMRE_6_REMEDIACAO_18_criterion_1_indice_206(declIndex);
            case 207: return getDeclaredClassName_regraMRE_5_REMEDIACAO_13_criterion_1_indice_207(declIndex);
            case 208: return getDeclaredClassName_regraMRE_5_REMEDIACAO_14_criterion_1_indice_208(declIndex);
            case 209: return getDeclaredClassName_regraMRE_6_REMEDIACAO_20_criterion_1_indice_209(declIndex);
            default: return null;
        }
    }

    /**
     * Returns the class of an object declared in a rule.
     *
     * @param ruleIndex the index of the rule
     * @param declIndex the index of the declaration
     * @return the class of the declared object.
     */
    public Class getDeclaredClass(int ruleIndex, int declIndex) {
        switch (ruleIndex) {
            case 0: return getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_0(declIndex);
            case 1: return getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_1(declIndex);
            case 2: return getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_2(declIndex);
            case 3: return getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_3(declIndex);
            case 4: return getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_4(declIndex);
            case 5: return getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_5(declIndex);
            case 6: return getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_6(declIndex);
            case 7: return getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_7(declIndex);
            case 8: return getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_8(declIndex);
            case 9: return getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_9(declIndex);
            case 10: return getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_10(declIndex);
            case 11: return getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_11(declIndex);
            case 12: return getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_12(declIndex);
            case 13: return getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_13(declIndex);
            case 14: return getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_14(declIndex);
            case 15: return getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_15(declIndex);
            case 16: return getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_16(declIndex);
            case 17: return getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_17(declIndex);
            case 18: return getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_18(declIndex);
            case 19: return getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_19(declIndex);
            case 20: return getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_20(declIndex);
            case 21: return getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_21(declIndex);
            case 22: return getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_22(declIndex);
            case 23: return getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_23(declIndex);
            case 24: return getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_24(declIndex);
            case 25: return getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_25(declIndex);
            case 26: return getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_26(declIndex);
            case 27: return getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_27(declIndex);
            case 28: return getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_28(declIndex);
            case 29: return getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_29(declIndex);
            case 30: return getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_30(declIndex);
            case 31: return getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_31(declIndex);
            case 32: return getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_32(declIndex);
            case 33: return getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_33(declIndex);
            case 34: return getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_34(declIndex);
            case 35: return getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_35(declIndex);
            case 36: return getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_36(declIndex);
            case 37: return getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_37(declIndex);
            case 38: return getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_38(declIndex);
            case 39: return getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_39(declIndex);
            case 40: return getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_40(declIndex);
            case 41: return getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_41(declIndex);
            case 42: return getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_42(declIndex);
            case 43: return getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_43(declIndex);
            case 44: return getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_44(declIndex);
            case 45: return getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_45(declIndex);
            case 46: return getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_46(declIndex);
            case 47: return getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_47(declIndex);
            case 48: return getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_48(declIndex);
            case 49: return getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_49(declIndex);
            case 50: return getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_50(declIndex);
            case 51: return getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_51(declIndex);
            case 52: return getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_52(declIndex);
            case 53: return getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_53(declIndex);
            case 54: return getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_54(declIndex);
            case 55: return getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_55(declIndex);
            case 56: return getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_56(declIndex);
            case 57: return getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_57(declIndex);
            case 58: return getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_58(declIndex);
            case 59: return getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_59(declIndex);
            case 60: return getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_60(declIndex);
            case 61: return getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_61(declIndex);
            case 62: return getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_62(declIndex);
            case 63: return getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_63(declIndex);
            case 64: return getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_64(declIndex);
            case 65: return getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_65(declIndex);
            case 66: return getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_66(declIndex);
            case 67: return getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_67(declIndex);
            case 68: return getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_68(declIndex);
            case 69: return getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_69(declIndex);
            case 70: return getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_70(declIndex);
            case 71: return getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_71(declIndex);
            case 72: return getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_72(declIndex);
            case 73: return getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_73(declIndex);
            case 74: return getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_74(declIndex);
            case 75: return getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_75(declIndex);
            case 76: return getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_76(declIndex);
            case 77: return getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_77(declIndex);
            case 78: return getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_78(declIndex);
            case 79: return getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_79(declIndex);
            case 80: return getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_80(declIndex);
            case 81: return getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_81(declIndex);
            case 82: return getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_82(declIndex);
            case 83: return getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_83(declIndex);
            case 84: return getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_84(declIndex);
            case 85: return getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_85(declIndex);
            case 86: return getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_86(declIndex);
            case 87: return getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_87(declIndex);
            case 88: return getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_88(declIndex);
            case 89: return getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_89(declIndex);
            case 90: return getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_90(declIndex);
            case 91: return getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_91(declIndex);
            case 92: return getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_92(declIndex);
            case 93: return getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_93(declIndex);
            case 94: return getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_94(declIndex);
            case 95: return getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_95(declIndex);
            case 96: return getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_96(declIndex);
            case 97: return getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_97(declIndex);
            case 98: return getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_98(declIndex);
            case 99: return getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_99(declIndex);
            case 100: return getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_100(declIndex);
            case 101: return getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_101(declIndex);
            case 102: return getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_102(declIndex);
            case 103: return getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_103(declIndex);
            case 104: return getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_104(declIndex);
            case 105: return getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_105(declIndex);
            case 106: return getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_106(declIndex);
            case 107: return getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_107(declIndex);
            case 108: return getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_108(declIndex);
            case 109: return getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_109(declIndex);
            case 110: return getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_110(declIndex);
            case 111: return getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_111(declIndex);
            case 112: return getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_112(declIndex);
            case 113: return getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_113(declIndex);
            case 114: return getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_114(declIndex);
            case 115: return getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_115(declIndex);
            case 116: return getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_116(declIndex);
            case 117: return getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_117(declIndex);
            case 118: return getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_118(declIndex);
            case 119: return getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_119(declIndex);
            case 120: return getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_120(declIndex);
            case 121: return getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_121(declIndex);
            case 122: return getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_122(declIndex);
            case 123: return getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_123(declIndex);
            case 124: return getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_124(declIndex);
            case 125: return getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_125(declIndex);
            case 126: return getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_126(declIndex);
            case 127: return getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_127(declIndex);
            case 128: return getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_128(declIndex);
            case 129: return getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_129(declIndex);
            case 130: return getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_130(declIndex);
            case 131: return getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_131(declIndex);
            case 132: return getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_132(declIndex);
            case 133: return getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_133(declIndex);
            case 134: return getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_134(declIndex);
            case 135: return getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_135(declIndex);
            case 136: return getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_136(declIndex);
            case 137: return getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_137(declIndex);
            case 138: return getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_138(declIndex);
            case 139: return getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_139(declIndex);
            case 140: return getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_140(declIndex);
            case 141: return getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_141(declIndex);
            case 142: return getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_142(declIndex);
            case 143: return getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_143(declIndex);
            case 144: return getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_144(declIndex);
            case 145: return getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_145(declIndex);
            case 146: return getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_146(declIndex);
            case 147: return getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_147(declIndex);
            case 148: return getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_148(declIndex);
            case 149: return getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_149(declIndex);
            case 150: return getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_150(declIndex);
            case 151: return getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_151(declIndex);
            case 152: return getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_152(declIndex);
            case 153: return getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_153(declIndex);
            case 154: return getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_154(declIndex);
            case 155: return getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_155(declIndex);
            case 156: return getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_156(declIndex);
            case 157: return getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_157(declIndex);
            case 158: return getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_158(declIndex);
            case 159: return getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_159(declIndex);
            case 160: return getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_160(declIndex);
            case 161: return getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_161(declIndex);
            case 162: return getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_162(declIndex);
            case 163: return getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_163(declIndex);
            case 164: return getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_164(declIndex);
            case 165: return getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_165(declIndex);
            case 166: return getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_166(declIndex);
            case 167: return getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_167(declIndex);
            case 168: return getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_168(declIndex);
            case 169: return getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_169(declIndex);
            case 170: return getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_170(declIndex);
            case 171: return getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_171(declIndex);
            case 172: return getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_172(declIndex);
            case 173: return getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_173(declIndex);
            case 174: return getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_174(declIndex);
            case 175: return getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_175(declIndex);
            case 176: return getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_176(declIndex);
            case 177: return getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_177(declIndex);
            case 178: return getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_178(declIndex);
            case 179: return getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_179(declIndex);
            case 180: return getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_180(declIndex);
            case 181: return getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_181(declIndex);
            case 182: return getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_182(declIndex);
            case 183: return getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_183(declIndex);
            case 184: return getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_184(declIndex);
            case 185: return getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_185(declIndex);
            case 186: return getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_186(declIndex);
            case 187: return getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_187(declIndex);
            case 188: return getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_188(declIndex);
            case 189: return getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_189(declIndex);
            case 190: return getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_190(declIndex);
            case 191: return getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_191(declIndex);
            case 192: return getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_192(declIndex);
            case 193: return getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_193(declIndex);
            case 194: return getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_194(declIndex);
            case 195: return getDeclaredClass_regraMRE_1_REMEDIACAO_1_criterion_1_indice_195(declIndex);
            case 196: return getDeclaredClass_regraMRE_2_REMEDIACAO_4_criterion_1_indice_196(declIndex);
            case 197: return getDeclaredClass_regraMRE_2_REMEDIACAO_5_criterion_1_indice_197(declIndex);
            case 198: return getDeclaredClass_regraMRE_6_REMEDIACAO_15_criterion_1_indice_198(declIndex);
            case 199: return getDeclaredClass_regraMRE_1_REMEDIACAO_2_criterion_1_indice_199(declIndex);
            case 200: return getDeclaredClass_regraMRE_2_REMEDIACAO_6_criterion_1_indice_200(declIndex);
            case 201: return getDeclaredClass_regraMRE_6_REMEDIACAO_16_criterion_1_indice_201(declIndex);
            case 202: return getDeclaredClass_regraMRE_2_REMEDIACAO_3_criterion_1_indice_202(declIndex);
            case 203: return getDeclaredClass_regraMRE_2_REMEDIACAO_7_criterion_1_indice_203(declIndex);
            case 204: return getDeclaredClass_regraMRE_6_REMEDIACAO_17_criterion_1_indice_204(declIndex);
            case 205: return getDeclaredClass_regraMRE_4_REMEDIACAO_8_criterion_1_indice_205(declIndex);
            case 206: return getDeclaredClass_regraMRE_6_REMEDIACAO_18_criterion_1_indice_206(declIndex);
            case 207: return getDeclaredClass_regraMRE_5_REMEDIACAO_13_criterion_1_indice_207(declIndex);
            case 208: return getDeclaredClass_regraMRE_5_REMEDIACAO_14_criterion_1_indice_208(declIndex);
            case 209: return getDeclaredClass_regraMRE_6_REMEDIACAO_20_criterion_1_indice_209(declIndex);
            default: return null;
        }
    }

    /**
     * Fires one of the rules in this rule base.
     *
     * @param ruleIndex the index of the rule to be fired
     */
    protected void internalFireRule(int ruleIndex) {
        switch (ruleIndex) {
            case 0: regraMRE_1_REMEDIACAO_1_criterion_1_indice_0(); break;
            case 1: regraMRE_2_REMEDIACAO_4_criterion_1_indice_1(); break;
            case 2: regraMRE_2_REMEDIACAO_5_criterion_1_indice_2(); break;
            case 3: regraMRE_6_REMEDIACAO_15_criterion_1_indice_3(); break;
            case 4: regraMRE_1_REMEDIACAO_2_criterion_1_indice_4(); break;
            case 5: regraMRE_2_REMEDIACAO_6_criterion_1_indice_5(); break;
            case 6: regraMRE_6_REMEDIACAO_16_criterion_1_indice_6(); break;
            case 7: regraMRE_2_REMEDIACAO_3_criterion_1_indice_7(); break;
            case 8: regraMRE_2_REMEDIACAO_7_criterion_1_indice_8(); break;
            case 9: regraMRE_6_REMEDIACAO_17_criterion_1_indice_9(); break;
            case 10: regraMRE_4_REMEDIACAO_8_criterion_1_indice_10(); break;
            case 11: regraMRE_6_REMEDIACAO_18_criterion_1_indice_11(); break;
            case 12: regraMRE_5_REMEDIACAO_13_criterion_1_indice_12(); break;
            case 13: regraMRE_5_REMEDIACAO_14_criterion_1_indice_13(); break;
            case 14: regraMRE_6_REMEDIACAO_20_criterion_1_indice_14(); break;
            case 15: regraMRE_1_REMEDIACAO_1_criterion_1_indice_15(); break;
            case 16: regraMRE_2_REMEDIACAO_4_criterion_1_indice_16(); break;
            case 17: regraMRE_2_REMEDIACAO_5_criterion_1_indice_17(); break;
            case 18: regraMRE_6_REMEDIACAO_15_criterion_1_indice_18(); break;
            case 19: regraMRE_1_REMEDIACAO_2_criterion_1_indice_19(); break;
            case 20: regraMRE_2_REMEDIACAO_6_criterion_1_indice_20(); break;
            case 21: regraMRE_6_REMEDIACAO_16_criterion_1_indice_21(); break;
            case 22: regraMRE_2_REMEDIACAO_3_criterion_1_indice_22(); break;
            case 23: regraMRE_2_REMEDIACAO_7_criterion_1_indice_23(); break;
            case 24: regraMRE_6_REMEDIACAO_17_criterion_1_indice_24(); break;
            case 25: regraMRE_4_REMEDIACAO_8_criterion_1_indice_25(); break;
            case 26: regraMRE_6_REMEDIACAO_18_criterion_1_indice_26(); break;
            case 27: regraMRE_5_REMEDIACAO_13_criterion_1_indice_27(); break;
            case 28: regraMRE_5_REMEDIACAO_14_criterion_1_indice_28(); break;
            case 29: regraMRE_6_REMEDIACAO_20_criterion_1_indice_29(); break;
            case 30: regraMRE_1_REMEDIACAO_1_criterion_1_indice_30(); break;
            case 31: regraMRE_2_REMEDIACAO_4_criterion_1_indice_31(); break;
            case 32: regraMRE_2_REMEDIACAO_5_criterion_1_indice_32(); break;
            case 33: regraMRE_6_REMEDIACAO_15_criterion_1_indice_33(); break;
            case 34: regraMRE_1_REMEDIACAO_2_criterion_1_indice_34(); break;
            case 35: regraMRE_2_REMEDIACAO_6_criterion_1_indice_35(); break;
            case 36: regraMRE_6_REMEDIACAO_16_criterion_1_indice_36(); break;
            case 37: regraMRE_2_REMEDIACAO_3_criterion_1_indice_37(); break;
            case 38: regraMRE_2_REMEDIACAO_7_criterion_1_indice_38(); break;
            case 39: regraMRE_6_REMEDIACAO_17_criterion_1_indice_39(); break;
            case 40: regraMRE_4_REMEDIACAO_8_criterion_1_indice_40(); break;
            case 41: regraMRE_6_REMEDIACAO_18_criterion_1_indice_41(); break;
            case 42: regraMRE_5_REMEDIACAO_13_criterion_1_indice_42(); break;
            case 43: regraMRE_5_REMEDIACAO_14_criterion_1_indice_43(); break;
            case 44: regraMRE_6_REMEDIACAO_20_criterion_1_indice_44(); break;
            case 45: regraMRE_1_REMEDIACAO_1_criterion_1_indice_45(); break;
            case 46: regraMRE_2_REMEDIACAO_4_criterion_1_indice_46(); break;
            case 47: regraMRE_2_REMEDIACAO_5_criterion_1_indice_47(); break;
            case 48: regraMRE_6_REMEDIACAO_15_criterion_1_indice_48(); break;
            case 49: regraMRE_1_REMEDIACAO_2_criterion_1_indice_49(); break;
            case 50: regraMRE_2_REMEDIACAO_6_criterion_1_indice_50(); break;
            case 51: regraMRE_6_REMEDIACAO_16_criterion_1_indice_51(); break;
            case 52: regraMRE_2_REMEDIACAO_3_criterion_1_indice_52(); break;
            case 53: regraMRE_2_REMEDIACAO_7_criterion_1_indice_53(); break;
            case 54: regraMRE_6_REMEDIACAO_17_criterion_1_indice_54(); break;
            case 55: regraMRE_4_REMEDIACAO_8_criterion_1_indice_55(); break;
            case 56: regraMRE_6_REMEDIACAO_18_criterion_1_indice_56(); break;
            case 57: regraMRE_5_REMEDIACAO_13_criterion_1_indice_57(); break;
            case 58: regraMRE_5_REMEDIACAO_14_criterion_1_indice_58(); break;
            case 59: regraMRE_6_REMEDIACAO_20_criterion_1_indice_59(); break;
            case 60: regraMRE_1_REMEDIACAO_1_criterion_1_indice_60(); break;
            case 61: regraMRE_2_REMEDIACAO_4_criterion_1_indice_61(); break;
            case 62: regraMRE_2_REMEDIACAO_5_criterion_1_indice_62(); break;
            case 63: regraMRE_6_REMEDIACAO_15_criterion_1_indice_63(); break;
            case 64: regraMRE_1_REMEDIACAO_2_criterion_1_indice_64(); break;
            case 65: regraMRE_2_REMEDIACAO_6_criterion_1_indice_65(); break;
            case 66: regraMRE_6_REMEDIACAO_16_criterion_1_indice_66(); break;
            case 67: regraMRE_2_REMEDIACAO_3_criterion_1_indice_67(); break;
            case 68: regraMRE_2_REMEDIACAO_7_criterion_1_indice_68(); break;
            case 69: regraMRE_6_REMEDIACAO_17_criterion_1_indice_69(); break;
            case 70: regraMRE_4_REMEDIACAO_8_criterion_1_indice_70(); break;
            case 71: regraMRE_6_REMEDIACAO_18_criterion_1_indice_71(); break;
            case 72: regraMRE_5_REMEDIACAO_13_criterion_1_indice_72(); break;
            case 73: regraMRE_5_REMEDIACAO_14_criterion_1_indice_73(); break;
            case 74: regraMRE_6_REMEDIACAO_20_criterion_1_indice_74(); break;
            case 75: regraMRE_1_REMEDIACAO_1_criterion_1_indice_75(); break;
            case 76: regraMRE_2_REMEDIACAO_4_criterion_1_indice_76(); break;
            case 77: regraMRE_2_REMEDIACAO_5_criterion_1_indice_77(); break;
            case 78: regraMRE_6_REMEDIACAO_15_criterion_1_indice_78(); break;
            case 79: regraMRE_1_REMEDIACAO_2_criterion_1_indice_79(); break;
            case 80: regraMRE_2_REMEDIACAO_6_criterion_1_indice_80(); break;
            case 81: regraMRE_6_REMEDIACAO_16_criterion_1_indice_81(); break;
            case 82: regraMRE_2_REMEDIACAO_3_criterion_1_indice_82(); break;
            case 83: regraMRE_2_REMEDIACAO_7_criterion_1_indice_83(); break;
            case 84: regraMRE_6_REMEDIACAO_17_criterion_1_indice_84(); break;
            case 85: regraMRE_4_REMEDIACAO_8_criterion_1_indice_85(); break;
            case 86: regraMRE_6_REMEDIACAO_18_criterion_1_indice_86(); break;
            case 87: regraMRE_5_REMEDIACAO_13_criterion_1_indice_87(); break;
            case 88: regraMRE_5_REMEDIACAO_14_criterion_1_indice_88(); break;
            case 89: regraMRE_6_REMEDIACAO_20_criterion_1_indice_89(); break;
            case 90: regraMRE_1_REMEDIACAO_1_criterion_1_indice_90(); break;
            case 91: regraMRE_2_REMEDIACAO_4_criterion_1_indice_91(); break;
            case 92: regraMRE_2_REMEDIACAO_5_criterion_1_indice_92(); break;
            case 93: regraMRE_6_REMEDIACAO_15_criterion_1_indice_93(); break;
            case 94: regraMRE_1_REMEDIACAO_2_criterion_1_indice_94(); break;
            case 95: regraMRE_2_REMEDIACAO_6_criterion_1_indice_95(); break;
            case 96: regraMRE_6_REMEDIACAO_16_criterion_1_indice_96(); break;
            case 97: regraMRE_2_REMEDIACAO_3_criterion_1_indice_97(); break;
            case 98: regraMRE_2_REMEDIACAO_7_criterion_1_indice_98(); break;
            case 99: regraMRE_6_REMEDIACAO_17_criterion_1_indice_99(); break;
            case 100: regraMRE_4_REMEDIACAO_8_criterion_1_indice_100(); break;
            case 101: regraMRE_6_REMEDIACAO_18_criterion_1_indice_101(); break;
            case 102: regraMRE_5_REMEDIACAO_13_criterion_1_indice_102(); break;
            case 103: regraMRE_5_REMEDIACAO_14_criterion_1_indice_103(); break;
            case 104: regraMRE_6_REMEDIACAO_20_criterion_1_indice_104(); break;
            case 105: regraMRE_1_REMEDIACAO_1_criterion_1_indice_105(); break;
            case 106: regraMRE_2_REMEDIACAO_4_criterion_1_indice_106(); break;
            case 107: regraMRE_2_REMEDIACAO_5_criterion_1_indice_107(); break;
            case 108: regraMRE_6_REMEDIACAO_15_criterion_1_indice_108(); break;
            case 109: regraMRE_1_REMEDIACAO_2_criterion_1_indice_109(); break;
            case 110: regraMRE_2_REMEDIACAO_6_criterion_1_indice_110(); break;
            case 111: regraMRE_6_REMEDIACAO_16_criterion_1_indice_111(); break;
            case 112: regraMRE_2_REMEDIACAO_3_criterion_1_indice_112(); break;
            case 113: regraMRE_2_REMEDIACAO_7_criterion_1_indice_113(); break;
            case 114: regraMRE_6_REMEDIACAO_17_criterion_1_indice_114(); break;
            case 115: regraMRE_4_REMEDIACAO_8_criterion_1_indice_115(); break;
            case 116: regraMRE_6_REMEDIACAO_18_criterion_1_indice_116(); break;
            case 117: regraMRE_5_REMEDIACAO_13_criterion_1_indice_117(); break;
            case 118: regraMRE_5_REMEDIACAO_14_criterion_1_indice_118(); break;
            case 119: regraMRE_6_REMEDIACAO_20_criterion_1_indice_119(); break;
            case 120: regraMRE_1_REMEDIACAO_1_criterion_1_indice_120(); break;
            case 121: regraMRE_2_REMEDIACAO_4_criterion_1_indice_121(); break;
            case 122: regraMRE_2_REMEDIACAO_5_criterion_1_indice_122(); break;
            case 123: regraMRE_6_REMEDIACAO_15_criterion_1_indice_123(); break;
            case 124: regraMRE_1_REMEDIACAO_2_criterion_1_indice_124(); break;
            case 125: regraMRE_2_REMEDIACAO_6_criterion_1_indice_125(); break;
            case 126: regraMRE_6_REMEDIACAO_16_criterion_1_indice_126(); break;
            case 127: regraMRE_2_REMEDIACAO_3_criterion_1_indice_127(); break;
            case 128: regraMRE_2_REMEDIACAO_7_criterion_1_indice_128(); break;
            case 129: regraMRE_6_REMEDIACAO_17_criterion_1_indice_129(); break;
            case 130: regraMRE_4_REMEDIACAO_8_criterion_1_indice_130(); break;
            case 131: regraMRE_6_REMEDIACAO_18_criterion_1_indice_131(); break;
            case 132: regraMRE_5_REMEDIACAO_13_criterion_1_indice_132(); break;
            case 133: regraMRE_5_REMEDIACAO_14_criterion_1_indice_133(); break;
            case 134: regraMRE_6_REMEDIACAO_20_criterion_1_indice_134(); break;
            case 135: regraMRE_1_REMEDIACAO_1_criterion_1_indice_135(); break;
            case 136: regraMRE_2_REMEDIACAO_4_criterion_1_indice_136(); break;
            case 137: regraMRE_2_REMEDIACAO_5_criterion_1_indice_137(); break;
            case 138: regraMRE_6_REMEDIACAO_15_criterion_1_indice_138(); break;
            case 139: regraMRE_1_REMEDIACAO_2_criterion_1_indice_139(); break;
            case 140: regraMRE_2_REMEDIACAO_6_criterion_1_indice_140(); break;
            case 141: regraMRE_6_REMEDIACAO_16_criterion_1_indice_141(); break;
            case 142: regraMRE_2_REMEDIACAO_3_criterion_1_indice_142(); break;
            case 143: regraMRE_2_REMEDIACAO_7_criterion_1_indice_143(); break;
            case 144: regraMRE_6_REMEDIACAO_17_criterion_1_indice_144(); break;
            case 145: regraMRE_4_REMEDIACAO_8_criterion_1_indice_145(); break;
            case 146: regraMRE_6_REMEDIACAO_18_criterion_1_indice_146(); break;
            case 147: regraMRE_5_REMEDIACAO_13_criterion_1_indice_147(); break;
            case 148: regraMRE_5_REMEDIACAO_14_criterion_1_indice_148(); break;
            case 149: regraMRE_6_REMEDIACAO_20_criterion_1_indice_149(); break;
            case 150: regraMRE_1_REMEDIACAO_1_criterion_1_indice_150(); break;
            case 151: regraMRE_2_REMEDIACAO_4_criterion_1_indice_151(); break;
            case 152: regraMRE_2_REMEDIACAO_5_criterion_1_indice_152(); break;
            case 153: regraMRE_6_REMEDIACAO_15_criterion_1_indice_153(); break;
            case 154: regraMRE_1_REMEDIACAO_2_criterion_1_indice_154(); break;
            case 155: regraMRE_2_REMEDIACAO_6_criterion_1_indice_155(); break;
            case 156: regraMRE_6_REMEDIACAO_16_criterion_1_indice_156(); break;
            case 157: regraMRE_2_REMEDIACAO_3_criterion_1_indice_157(); break;
            case 158: regraMRE_2_REMEDIACAO_7_criterion_1_indice_158(); break;
            case 159: regraMRE_6_REMEDIACAO_17_criterion_1_indice_159(); break;
            case 160: regraMRE_4_REMEDIACAO_8_criterion_1_indice_160(); break;
            case 161: regraMRE_6_REMEDIACAO_18_criterion_1_indice_161(); break;
            case 162: regraMRE_5_REMEDIACAO_13_criterion_1_indice_162(); break;
            case 163: regraMRE_5_REMEDIACAO_14_criterion_1_indice_163(); break;
            case 164: regraMRE_6_REMEDIACAO_20_criterion_1_indice_164(); break;
            case 165: regraMRE_1_REMEDIACAO_1_criterion_1_indice_165(); break;
            case 166: regraMRE_2_REMEDIACAO_4_criterion_1_indice_166(); break;
            case 167: regraMRE_2_REMEDIACAO_5_criterion_1_indice_167(); break;
            case 168: regraMRE_6_REMEDIACAO_15_criterion_1_indice_168(); break;
            case 169: regraMRE_1_REMEDIACAO_2_criterion_1_indice_169(); break;
            case 170: regraMRE_2_REMEDIACAO_6_criterion_1_indice_170(); break;
            case 171: regraMRE_6_REMEDIACAO_16_criterion_1_indice_171(); break;
            case 172: regraMRE_2_REMEDIACAO_3_criterion_1_indice_172(); break;
            case 173: regraMRE_2_REMEDIACAO_7_criterion_1_indice_173(); break;
            case 174: regraMRE_6_REMEDIACAO_17_criterion_1_indice_174(); break;
            case 175: regraMRE_4_REMEDIACAO_8_criterion_1_indice_175(); break;
            case 176: regraMRE_6_REMEDIACAO_18_criterion_1_indice_176(); break;
            case 177: regraMRE_5_REMEDIACAO_13_criterion_1_indice_177(); break;
            case 178: regraMRE_5_REMEDIACAO_14_criterion_1_indice_178(); break;
            case 179: regraMRE_6_REMEDIACAO_20_criterion_1_indice_179(); break;
            case 180: regraMRE_1_REMEDIACAO_1_criterion_1_indice_180(); break;
            case 181: regraMRE_2_REMEDIACAO_4_criterion_1_indice_181(); break;
            case 182: regraMRE_2_REMEDIACAO_5_criterion_1_indice_182(); break;
            case 183: regraMRE_6_REMEDIACAO_15_criterion_1_indice_183(); break;
            case 184: regraMRE_1_REMEDIACAO_2_criterion_1_indice_184(); break;
            case 185: regraMRE_2_REMEDIACAO_6_criterion_1_indice_185(); break;
            case 186: regraMRE_6_REMEDIACAO_16_criterion_1_indice_186(); break;
            case 187: regraMRE_2_REMEDIACAO_3_criterion_1_indice_187(); break;
            case 188: regraMRE_2_REMEDIACAO_7_criterion_1_indice_188(); break;
            case 189: regraMRE_6_REMEDIACAO_17_criterion_1_indice_189(); break;
            case 190: regraMRE_4_REMEDIACAO_8_criterion_1_indice_190(); break;
            case 191: regraMRE_6_REMEDIACAO_18_criterion_1_indice_191(); break;
            case 192: regraMRE_5_REMEDIACAO_13_criterion_1_indice_192(); break;
            case 193: regraMRE_5_REMEDIACAO_14_criterion_1_indice_193(); break;
            case 194: regraMRE_6_REMEDIACAO_20_criterion_1_indice_194(); break;
            case 195: regraMRE_1_REMEDIACAO_1_criterion_1_indice_195(); break;
            case 196: regraMRE_2_REMEDIACAO_4_criterion_1_indice_196(); break;
            case 197: regraMRE_2_REMEDIACAO_5_criterion_1_indice_197(); break;
            case 198: regraMRE_6_REMEDIACAO_15_criterion_1_indice_198(); break;
            case 199: regraMRE_1_REMEDIACAO_2_criterion_1_indice_199(); break;
            case 200: regraMRE_2_REMEDIACAO_6_criterion_1_indice_200(); break;
            case 201: regraMRE_6_REMEDIACAO_16_criterion_1_indice_201(); break;
            case 202: regraMRE_2_REMEDIACAO_3_criterion_1_indice_202(); break;
            case 203: regraMRE_2_REMEDIACAO_7_criterion_1_indice_203(); break;
            case 204: regraMRE_6_REMEDIACAO_17_criterion_1_indice_204(); break;
            case 205: regraMRE_4_REMEDIACAO_8_criterion_1_indice_205(); break;
            case 206: regraMRE_6_REMEDIACAO_18_criterion_1_indice_206(); break;
            case 207: regraMRE_5_REMEDIACAO_13_criterion_1_indice_207(); break;
            case 208: regraMRE_5_REMEDIACAO_14_criterion_1_indice_208(); break;
            case 209: regraMRE_6_REMEDIACAO_20_criterion_1_indice_209(); break;
        }
    }

    /**
     * Returns the number of rules.
     *
     * @return the number of rules.
     */
    public int getNumberOfRules() {
        return 210;
    }

    /**
     * Returns the identifiers declared in a given rule.
     *
     * @param ruleIndex the index of the rule.
     * @return an array with the identifiers of the rule declarations.
     */
    public String[] getDeclaredIdentifiers(int ruleIndex) {
        switch (ruleIndex) {
            case 0: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_0();
            case 1: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_1();
            case 2: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_2();
            case 3: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_3();
            case 4: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_4();
            case 5: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_5();
            case 6: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_6();
            case 7: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_7();
            case 8: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_8();
            case 9: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_9();
            case 10: return getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_10();
            case 11: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_11();
            case 12: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_12();
            case 13: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_13();
            case 14: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_14();
            case 15: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_15();
            case 16: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_16();
            case 17: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_17();
            case 18: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_18();
            case 19: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_19();
            case 20: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_20();
            case 21: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_21();
            case 22: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_22();
            case 23: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_23();
            case 24: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_24();
            case 25: return getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_25();
            case 26: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_26();
            case 27: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_27();
            case 28: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_28();
            case 29: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_29();
            case 30: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_30();
            case 31: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_31();
            case 32: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_32();
            case 33: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_33();
            case 34: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_34();
            case 35: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_35();
            case 36: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_36();
            case 37: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_37();
            case 38: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_38();
            case 39: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_39();
            case 40: return getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_40();
            case 41: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_41();
            case 42: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_42();
            case 43: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_43();
            case 44: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_44();
            case 45: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_45();
            case 46: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_46();
            case 47: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_47();
            case 48: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_48();
            case 49: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_49();
            case 50: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_50();
            case 51: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_51();
            case 52: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_52();
            case 53: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_53();
            case 54: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_54();
            case 55: return getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_55();
            case 56: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_56();
            case 57: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_57();
            case 58: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_58();
            case 59: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_59();
            case 60: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_60();
            case 61: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_61();
            case 62: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_62();
            case 63: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_63();
            case 64: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_64();
            case 65: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_65();
            case 66: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_66();
            case 67: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_67();
            case 68: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_68();
            case 69: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_69();
            case 70: return getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_70();
            case 71: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_71();
            case 72: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_72();
            case 73: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_73();
            case 74: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_74();
            case 75: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_75();
            case 76: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_76();
            case 77: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_77();
            case 78: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_78();
            case 79: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_79();
            case 80: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_80();
            case 81: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_81();
            case 82: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_82();
            case 83: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_83();
            case 84: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_84();
            case 85: return getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_85();
            case 86: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_86();
            case 87: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_87();
            case 88: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_88();
            case 89: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_89();
            case 90: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_90();
            case 91: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_91();
            case 92: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_92();
            case 93: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_93();
            case 94: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_94();
            case 95: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_95();
            case 96: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_96();
            case 97: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_97();
            case 98: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_98();
            case 99: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_99();
            case 100: return getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_100();
            case 101: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_101();
            case 102: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_102();
            case 103: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_103();
            case 104: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_104();
            case 105: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_105();
            case 106: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_106();
            case 107: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_107();
            case 108: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_108();
            case 109: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_109();
            case 110: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_110();
            case 111: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_111();
            case 112: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_112();
            case 113: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_113();
            case 114: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_114();
            case 115: return getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_115();
            case 116: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_116();
            case 117: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_117();
            case 118: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_118();
            case 119: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_119();
            case 120: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_120();
            case 121: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_121();
            case 122: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_122();
            case 123: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_123();
            case 124: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_124();
            case 125: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_125();
            case 126: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_126();
            case 127: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_127();
            case 128: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_128();
            case 129: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_129();
            case 130: return getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_130();
            case 131: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_131();
            case 132: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_132();
            case 133: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_133();
            case 134: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_134();
            case 135: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_135();
            case 136: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_136();
            case 137: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_137();
            case 138: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_138();
            case 139: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_139();
            case 140: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_140();
            case 141: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_141();
            case 142: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_142();
            case 143: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_143();
            case 144: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_144();
            case 145: return getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_145();
            case 146: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_146();
            case 147: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_147();
            case 148: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_148();
            case 149: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_149();
            case 150: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_150();
            case 151: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_151();
            case 152: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_152();
            case 153: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_153();
            case 154: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_154();
            case 155: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_155();
            case 156: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_156();
            case 157: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_157();
            case 158: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_158();
            case 159: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_159();
            case 160: return getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_160();
            case 161: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_161();
            case 162: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_162();
            case 163: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_163();
            case 164: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_164();
            case 165: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_165();
            case 166: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_166();
            case 167: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_167();
            case 168: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_168();
            case 169: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_169();
            case 170: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_170();
            case 171: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_171();
            case 172: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_172();
            case 173: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_173();
            case 174: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_174();
            case 175: return getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_175();
            case 176: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_176();
            case 177: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_177();
            case 178: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_178();
            case 179: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_179();
            case 180: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_180();
            case 181: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_181();
            case 182: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_182();
            case 183: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_183();
            case 184: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_184();
            case 185: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_185();
            case 186: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_186();
            case 187: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_187();
            case 188: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_188();
            case 189: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_189();
            case 190: return getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_190();
            case 191: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_191();
            case 192: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_192();
            case 193: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_193();
            case 194: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_194();
            case 195: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_1_criterion_1_indice_195();
            case 196: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_4_criterion_1_indice_196();
            case 197: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_5_criterion_1_indice_197();
            case 198: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_15_criterion_1_indice_198();
            case 199: return getDeclaredIdentifiers_regraMRE_1_REMEDIACAO_2_criterion_1_indice_199();
            case 200: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_6_criterion_1_indice_200();
            case 201: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_16_criterion_1_indice_201();
            case 202: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_3_criterion_1_indice_202();
            case 203: return getDeclaredIdentifiers_regraMRE_2_REMEDIACAO_7_criterion_1_indice_203();
            case 204: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_17_criterion_1_indice_204();
            case 205: return getDeclaredIdentifiers_regraMRE_4_REMEDIACAO_8_criterion_1_indice_205();
            case 206: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_18_criterion_1_indice_206();
            case 207: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_13_criterion_1_indice_207();
            case 208: return getDeclaredIdentifiers_regraMRE_5_REMEDIACAO_14_criterion_1_indice_208();
            case 209: return getDeclaredIdentifiers_regraMRE_6_REMEDIACAO_20_criterion_1_indice_209();
            default: return new String[0];
        }
    }

    /**
     * Sets an object that represents a declaration of some rule.
     *
     * @param ruleIndex the index of the rule
     * @param declIndex the index of the declaration in the rule.
     * @param value the value of the object being set.
     */
    public void setObject(int ruleIndex, int declIndex, Object value) {
        switch (ruleIndex) {
            case 0: setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_0(declIndex, value); break;
            case 1: setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_1(declIndex, value); break;
            case 2: setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_2(declIndex, value); break;
            case 3: setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_3(declIndex, value); break;
            case 4: setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_4(declIndex, value); break;
            case 5: setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_5(declIndex, value); break;
            case 6: setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_6(declIndex, value); break;
            case 7: setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_7(declIndex, value); break;
            case 8: setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_8(declIndex, value); break;
            case 9: setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_9(declIndex, value); break;
            case 10: setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_10(declIndex, value); break;
            case 11: setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_11(declIndex, value); break;
            case 12: setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_12(declIndex, value); break;
            case 13: setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_13(declIndex, value); break;
            case 14: setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_14(declIndex, value); break;
            case 15: setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_15(declIndex, value); break;
            case 16: setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_16(declIndex, value); break;
            case 17: setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_17(declIndex, value); break;
            case 18: setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_18(declIndex, value); break;
            case 19: setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_19(declIndex, value); break;
            case 20: setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_20(declIndex, value); break;
            case 21: setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_21(declIndex, value); break;
            case 22: setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_22(declIndex, value); break;
            case 23: setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_23(declIndex, value); break;
            case 24: setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_24(declIndex, value); break;
            case 25: setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_25(declIndex, value); break;
            case 26: setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_26(declIndex, value); break;
            case 27: setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_27(declIndex, value); break;
            case 28: setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_28(declIndex, value); break;
            case 29: setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_29(declIndex, value); break;
            case 30: setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_30(declIndex, value); break;
            case 31: setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_31(declIndex, value); break;
            case 32: setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_32(declIndex, value); break;
            case 33: setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_33(declIndex, value); break;
            case 34: setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_34(declIndex, value); break;
            case 35: setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_35(declIndex, value); break;
            case 36: setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_36(declIndex, value); break;
            case 37: setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_37(declIndex, value); break;
            case 38: setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_38(declIndex, value); break;
            case 39: setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_39(declIndex, value); break;
            case 40: setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_40(declIndex, value); break;
            case 41: setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_41(declIndex, value); break;
            case 42: setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_42(declIndex, value); break;
            case 43: setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_43(declIndex, value); break;
            case 44: setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_44(declIndex, value); break;
            case 45: setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_45(declIndex, value); break;
            case 46: setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_46(declIndex, value); break;
            case 47: setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_47(declIndex, value); break;
            case 48: setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_48(declIndex, value); break;
            case 49: setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_49(declIndex, value); break;
            case 50: setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_50(declIndex, value); break;
            case 51: setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_51(declIndex, value); break;
            case 52: setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_52(declIndex, value); break;
            case 53: setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_53(declIndex, value); break;
            case 54: setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_54(declIndex, value); break;
            case 55: setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_55(declIndex, value); break;
            case 56: setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_56(declIndex, value); break;
            case 57: setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_57(declIndex, value); break;
            case 58: setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_58(declIndex, value); break;
            case 59: setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_59(declIndex, value); break;
            case 60: setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_60(declIndex, value); break;
            case 61: setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_61(declIndex, value); break;
            case 62: setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_62(declIndex, value); break;
            case 63: setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_63(declIndex, value); break;
            case 64: setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_64(declIndex, value); break;
            case 65: setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_65(declIndex, value); break;
            case 66: setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_66(declIndex, value); break;
            case 67: setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_67(declIndex, value); break;
            case 68: setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_68(declIndex, value); break;
            case 69: setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_69(declIndex, value); break;
            case 70: setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_70(declIndex, value); break;
            case 71: setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_71(declIndex, value); break;
            case 72: setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_72(declIndex, value); break;
            case 73: setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_73(declIndex, value); break;
            case 74: setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_74(declIndex, value); break;
            case 75: setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_75(declIndex, value); break;
            case 76: setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_76(declIndex, value); break;
            case 77: setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_77(declIndex, value); break;
            case 78: setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_78(declIndex, value); break;
            case 79: setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_79(declIndex, value); break;
            case 80: setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_80(declIndex, value); break;
            case 81: setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_81(declIndex, value); break;
            case 82: setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_82(declIndex, value); break;
            case 83: setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_83(declIndex, value); break;
            case 84: setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_84(declIndex, value); break;
            case 85: setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_85(declIndex, value); break;
            case 86: setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_86(declIndex, value); break;
            case 87: setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_87(declIndex, value); break;
            case 88: setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_88(declIndex, value); break;
            case 89: setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_89(declIndex, value); break;
            case 90: setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_90(declIndex, value); break;
            case 91: setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_91(declIndex, value); break;
            case 92: setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_92(declIndex, value); break;
            case 93: setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_93(declIndex, value); break;
            case 94: setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_94(declIndex, value); break;
            case 95: setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_95(declIndex, value); break;
            case 96: setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_96(declIndex, value); break;
            case 97: setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_97(declIndex, value); break;
            case 98: setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_98(declIndex, value); break;
            case 99: setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_99(declIndex, value); break;
            case 100: setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_100(declIndex, value); break;
            case 101: setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_101(declIndex, value); break;
            case 102: setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_102(declIndex, value); break;
            case 103: setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_103(declIndex, value); break;
            case 104: setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_104(declIndex, value); break;
            case 105: setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_105(declIndex, value); break;
            case 106: setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_106(declIndex, value); break;
            case 107: setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_107(declIndex, value); break;
            case 108: setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_108(declIndex, value); break;
            case 109: setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_109(declIndex, value); break;
            case 110: setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_110(declIndex, value); break;
            case 111: setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_111(declIndex, value); break;
            case 112: setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_112(declIndex, value); break;
            case 113: setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_113(declIndex, value); break;
            case 114: setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_114(declIndex, value); break;
            case 115: setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_115(declIndex, value); break;
            case 116: setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_116(declIndex, value); break;
            case 117: setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_117(declIndex, value); break;
            case 118: setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_118(declIndex, value); break;
            case 119: setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_119(declIndex, value); break;
            case 120: setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_120(declIndex, value); break;
            case 121: setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_121(declIndex, value); break;
            case 122: setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_122(declIndex, value); break;
            case 123: setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_123(declIndex, value); break;
            case 124: setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_124(declIndex, value); break;
            case 125: setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_125(declIndex, value); break;
            case 126: setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_126(declIndex, value); break;
            case 127: setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_127(declIndex, value); break;
            case 128: setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_128(declIndex, value); break;
            case 129: setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_129(declIndex, value); break;
            case 130: setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_130(declIndex, value); break;
            case 131: setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_131(declIndex, value); break;
            case 132: setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_132(declIndex, value); break;
            case 133: setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_133(declIndex, value); break;
            case 134: setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_134(declIndex, value); break;
            case 135: setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_135(declIndex, value); break;
            case 136: setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_136(declIndex, value); break;
            case 137: setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_137(declIndex, value); break;
            case 138: setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_138(declIndex, value); break;
            case 139: setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_139(declIndex, value); break;
            case 140: setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_140(declIndex, value); break;
            case 141: setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_141(declIndex, value); break;
            case 142: setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_142(declIndex, value); break;
            case 143: setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_143(declIndex, value); break;
            case 144: setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_144(declIndex, value); break;
            case 145: setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_145(declIndex, value); break;
            case 146: setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_146(declIndex, value); break;
            case 147: setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_147(declIndex, value); break;
            case 148: setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_148(declIndex, value); break;
            case 149: setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_149(declIndex, value); break;
            case 150: setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_150(declIndex, value); break;
            case 151: setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_151(declIndex, value); break;
            case 152: setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_152(declIndex, value); break;
            case 153: setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_153(declIndex, value); break;
            case 154: setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_154(declIndex, value); break;
            case 155: setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_155(declIndex, value); break;
            case 156: setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_156(declIndex, value); break;
            case 157: setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_157(declIndex, value); break;
            case 158: setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_158(declIndex, value); break;
            case 159: setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_159(declIndex, value); break;
            case 160: setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_160(declIndex, value); break;
            case 161: setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_161(declIndex, value); break;
            case 162: setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_162(declIndex, value); break;
            case 163: setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_163(declIndex, value); break;
            case 164: setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_164(declIndex, value); break;
            case 165: setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_165(declIndex, value); break;
            case 166: setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_166(declIndex, value); break;
            case 167: setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_167(declIndex, value); break;
            case 168: setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_168(declIndex, value); break;
            case 169: setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_169(declIndex, value); break;
            case 170: setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_170(declIndex, value); break;
            case 171: setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_171(declIndex, value); break;
            case 172: setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_172(declIndex, value); break;
            case 173: setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_173(declIndex, value); break;
            case 174: setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_174(declIndex, value); break;
            case 175: setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_175(declIndex, value); break;
            case 176: setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_176(declIndex, value); break;
            case 177: setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_177(declIndex, value); break;
            case 178: setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_178(declIndex, value); break;
            case 179: setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_179(declIndex, value); break;
            case 180: setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_180(declIndex, value); break;
            case 181: setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_181(declIndex, value); break;
            case 182: setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_182(declIndex, value); break;
            case 183: setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_183(declIndex, value); break;
            case 184: setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_184(declIndex, value); break;
            case 185: setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_185(declIndex, value); break;
            case 186: setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_186(declIndex, value); break;
            case 187: setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_187(declIndex, value); break;
            case 188: setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_188(declIndex, value); break;
            case 189: setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_189(declIndex, value); break;
            case 190: setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_190(declIndex, value); break;
            case 191: setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_191(declIndex, value); break;
            case 192: setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_192(declIndex, value); break;
            case 193: setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_193(declIndex, value); break;
            case 194: setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_194(declIndex, value); break;
            case 195: setObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_195(declIndex, value); break;
            case 196: setObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_196(declIndex, value); break;
            case 197: setObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_197(declIndex, value); break;
            case 198: setObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_198(declIndex, value); break;
            case 199: setObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_199(declIndex, value); break;
            case 200: setObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_200(declIndex, value); break;
            case 201: setObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_201(declIndex, value); break;
            case 202: setObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_202(declIndex, value); break;
            case 203: setObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_203(declIndex, value); break;
            case 204: setObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_204(declIndex, value); break;
            case 205: setObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_205(declIndex, value); break;
            case 206: setObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_206(declIndex, value); break;
            case 207: setObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_207(declIndex, value); break;
            case 208: setObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_208(declIndex, value); break;
            case 209: setObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_209(declIndex, value); break;
        }
    }

    /**
     * Returns an object that represents a declaration of some rule.
     *
     * @param ruleIndex the index of the rule
     * @param declIndex the index of the declaration in the rule.
     * @return the value of the corresponding object.
     */
    public Object getObject(int ruleIndex, int declIndex) {
        switch (ruleIndex) {
            case 0: return getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_0(declIndex);
            case 1: return getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_1(declIndex);
            case 2: return getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_2(declIndex);
            case 3: return getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_3(declIndex);
            case 4: return getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_4(declIndex);
            case 5: return getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_5(declIndex);
            case 6: return getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_6(declIndex);
            case 7: return getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_7(declIndex);
            case 8: return getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_8(declIndex);
            case 9: return getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_9(declIndex);
            case 10: return getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_10(declIndex);
            case 11: return getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_11(declIndex);
            case 12: return getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_12(declIndex);
            case 13: return getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_13(declIndex);
            case 14: return getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_14(declIndex);
            case 15: return getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_15(declIndex);
            case 16: return getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_16(declIndex);
            case 17: return getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_17(declIndex);
            case 18: return getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_18(declIndex);
            case 19: return getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_19(declIndex);
            case 20: return getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_20(declIndex);
            case 21: return getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_21(declIndex);
            case 22: return getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_22(declIndex);
            case 23: return getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_23(declIndex);
            case 24: return getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_24(declIndex);
            case 25: return getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_25(declIndex);
            case 26: return getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_26(declIndex);
            case 27: return getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_27(declIndex);
            case 28: return getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_28(declIndex);
            case 29: return getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_29(declIndex);
            case 30: return getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_30(declIndex);
            case 31: return getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_31(declIndex);
            case 32: return getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_32(declIndex);
            case 33: return getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_33(declIndex);
            case 34: return getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_34(declIndex);
            case 35: return getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_35(declIndex);
            case 36: return getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_36(declIndex);
            case 37: return getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_37(declIndex);
            case 38: return getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_38(declIndex);
            case 39: return getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_39(declIndex);
            case 40: return getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_40(declIndex);
            case 41: return getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_41(declIndex);
            case 42: return getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_42(declIndex);
            case 43: return getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_43(declIndex);
            case 44: return getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_44(declIndex);
            case 45: return getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_45(declIndex);
            case 46: return getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_46(declIndex);
            case 47: return getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_47(declIndex);
            case 48: return getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_48(declIndex);
            case 49: return getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_49(declIndex);
            case 50: return getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_50(declIndex);
            case 51: return getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_51(declIndex);
            case 52: return getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_52(declIndex);
            case 53: return getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_53(declIndex);
            case 54: return getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_54(declIndex);
            case 55: return getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_55(declIndex);
            case 56: return getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_56(declIndex);
            case 57: return getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_57(declIndex);
            case 58: return getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_58(declIndex);
            case 59: return getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_59(declIndex);
            case 60: return getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_60(declIndex);
            case 61: return getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_61(declIndex);
            case 62: return getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_62(declIndex);
            case 63: return getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_63(declIndex);
            case 64: return getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_64(declIndex);
            case 65: return getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_65(declIndex);
            case 66: return getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_66(declIndex);
            case 67: return getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_67(declIndex);
            case 68: return getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_68(declIndex);
            case 69: return getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_69(declIndex);
            case 70: return getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_70(declIndex);
            case 71: return getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_71(declIndex);
            case 72: return getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_72(declIndex);
            case 73: return getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_73(declIndex);
            case 74: return getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_74(declIndex);
            case 75: return getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_75(declIndex);
            case 76: return getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_76(declIndex);
            case 77: return getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_77(declIndex);
            case 78: return getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_78(declIndex);
            case 79: return getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_79(declIndex);
            case 80: return getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_80(declIndex);
            case 81: return getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_81(declIndex);
            case 82: return getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_82(declIndex);
            case 83: return getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_83(declIndex);
            case 84: return getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_84(declIndex);
            case 85: return getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_85(declIndex);
            case 86: return getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_86(declIndex);
            case 87: return getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_87(declIndex);
            case 88: return getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_88(declIndex);
            case 89: return getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_89(declIndex);
            case 90: return getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_90(declIndex);
            case 91: return getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_91(declIndex);
            case 92: return getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_92(declIndex);
            case 93: return getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_93(declIndex);
            case 94: return getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_94(declIndex);
            case 95: return getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_95(declIndex);
            case 96: return getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_96(declIndex);
            case 97: return getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_97(declIndex);
            case 98: return getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_98(declIndex);
            case 99: return getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_99(declIndex);
            case 100: return getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_100(declIndex);
            case 101: return getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_101(declIndex);
            case 102: return getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_102(declIndex);
            case 103: return getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_103(declIndex);
            case 104: return getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_104(declIndex);
            case 105: return getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_105(declIndex);
            case 106: return getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_106(declIndex);
            case 107: return getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_107(declIndex);
            case 108: return getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_108(declIndex);
            case 109: return getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_109(declIndex);
            case 110: return getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_110(declIndex);
            case 111: return getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_111(declIndex);
            case 112: return getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_112(declIndex);
            case 113: return getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_113(declIndex);
            case 114: return getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_114(declIndex);
            case 115: return getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_115(declIndex);
            case 116: return getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_116(declIndex);
            case 117: return getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_117(declIndex);
            case 118: return getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_118(declIndex);
            case 119: return getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_119(declIndex);
            case 120: return getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_120(declIndex);
            case 121: return getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_121(declIndex);
            case 122: return getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_122(declIndex);
            case 123: return getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_123(declIndex);
            case 124: return getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_124(declIndex);
            case 125: return getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_125(declIndex);
            case 126: return getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_126(declIndex);
            case 127: return getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_127(declIndex);
            case 128: return getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_128(declIndex);
            case 129: return getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_129(declIndex);
            case 130: return getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_130(declIndex);
            case 131: return getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_131(declIndex);
            case 132: return getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_132(declIndex);
            case 133: return getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_133(declIndex);
            case 134: return getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_134(declIndex);
            case 135: return getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_135(declIndex);
            case 136: return getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_136(declIndex);
            case 137: return getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_137(declIndex);
            case 138: return getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_138(declIndex);
            case 139: return getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_139(declIndex);
            case 140: return getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_140(declIndex);
            case 141: return getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_141(declIndex);
            case 142: return getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_142(declIndex);
            case 143: return getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_143(declIndex);
            case 144: return getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_144(declIndex);
            case 145: return getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_145(declIndex);
            case 146: return getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_146(declIndex);
            case 147: return getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_147(declIndex);
            case 148: return getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_148(declIndex);
            case 149: return getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_149(declIndex);
            case 150: return getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_150(declIndex);
            case 151: return getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_151(declIndex);
            case 152: return getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_152(declIndex);
            case 153: return getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_153(declIndex);
            case 154: return getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_154(declIndex);
            case 155: return getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_155(declIndex);
            case 156: return getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_156(declIndex);
            case 157: return getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_157(declIndex);
            case 158: return getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_158(declIndex);
            case 159: return getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_159(declIndex);
            case 160: return getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_160(declIndex);
            case 161: return getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_161(declIndex);
            case 162: return getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_162(declIndex);
            case 163: return getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_163(declIndex);
            case 164: return getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_164(declIndex);
            case 165: return getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_165(declIndex);
            case 166: return getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_166(declIndex);
            case 167: return getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_167(declIndex);
            case 168: return getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_168(declIndex);
            case 169: return getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_169(declIndex);
            case 170: return getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_170(declIndex);
            case 171: return getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_171(declIndex);
            case 172: return getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_172(declIndex);
            case 173: return getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_173(declIndex);
            case 174: return getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_174(declIndex);
            case 175: return getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_175(declIndex);
            case 176: return getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_176(declIndex);
            case 177: return getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_177(declIndex);
            case 178: return getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_178(declIndex);
            case 179: return getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_179(declIndex);
            case 180: return getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_180(declIndex);
            case 181: return getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_181(declIndex);
            case 182: return getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_182(declIndex);
            case 183: return getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_183(declIndex);
            case 184: return getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_184(declIndex);
            case 185: return getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_185(declIndex);
            case 186: return getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_186(declIndex);
            case 187: return getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_187(declIndex);
            case 188: return getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_188(declIndex);
            case 189: return getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_189(declIndex);
            case 190: return getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_190(declIndex);
            case 191: return getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_191(declIndex);
            case 192: return getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_192(declIndex);
            case 193: return getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_193(declIndex);
            case 194: return getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_194(declIndex);
            case 195: return getObject_regraMRE_1_REMEDIACAO_1_criterion_1_indice_195(declIndex);
            case 196: return getObject_regraMRE_2_REMEDIACAO_4_criterion_1_indice_196(declIndex);
            case 197: return getObject_regraMRE_2_REMEDIACAO_5_criterion_1_indice_197(declIndex);
            case 198: return getObject_regraMRE_6_REMEDIACAO_15_criterion_1_indice_198(declIndex);
            case 199: return getObject_regraMRE_1_REMEDIACAO_2_criterion_1_indice_199(declIndex);
            case 200: return getObject_regraMRE_2_REMEDIACAO_6_criterion_1_indice_200(declIndex);
            case 201: return getObject_regraMRE_6_REMEDIACAO_16_criterion_1_indice_201(declIndex);
            case 202: return getObject_regraMRE_2_REMEDIACAO_3_criterion_1_indice_202(declIndex);
            case 203: return getObject_regraMRE_2_REMEDIACAO_7_criterion_1_indice_203(declIndex);
            case 204: return getObject_regraMRE_6_REMEDIACAO_17_criterion_1_indice_204(declIndex);
            case 205: return getObject_regraMRE_4_REMEDIACAO_8_criterion_1_indice_205(declIndex);
            case 206: return getObject_regraMRE_6_REMEDIACAO_18_criterion_1_indice_206(declIndex);
            case 207: return getObject_regraMRE_5_REMEDIACAO_13_criterion_1_indice_207(declIndex);
            case 208: return getObject_regraMRE_5_REMEDIACAO_14_criterion_1_indice_208(declIndex);
            case 209: return getObject_regraMRE_6_REMEDIACAO_20_criterion_1_indice_209(declIndex);
            default: return null;
        }
    }

    /**
     * Returns all variables bound to the declarations of
     * some rule.
     *
     * @param ruleIndex the index of the rule
     * @return an object array of the variables bound to the
     *          declarations of some rule.
     */
    public Object[] getObjects(int ruleIndex) {
        switch (ruleIndex) {
            case 0: return getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_0();
            case 1: return getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_1();
            case 2: return getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_2();
            case 3: return getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_3();
            case 4: return getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_4();
            case 5: return getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_5();
            case 6: return getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_6();
            case 7: return getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_7();
            case 8: return getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_8();
            case 9: return getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_9();
            case 10: return getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_10();
            case 11: return getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_11();
            case 12: return getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_12();
            case 13: return getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_13();
            case 14: return getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_14();
            case 15: return getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_15();
            case 16: return getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_16();
            case 17: return getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_17();
            case 18: return getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_18();
            case 19: return getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_19();
            case 20: return getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_20();
            case 21: return getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_21();
            case 22: return getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_22();
            case 23: return getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_23();
            case 24: return getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_24();
            case 25: return getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_25();
            case 26: return getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_26();
            case 27: return getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_27();
            case 28: return getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_28();
            case 29: return getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_29();
            case 30: return getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_30();
            case 31: return getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_31();
            case 32: return getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_32();
            case 33: return getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_33();
            case 34: return getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_34();
            case 35: return getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_35();
            case 36: return getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_36();
            case 37: return getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_37();
            case 38: return getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_38();
            case 39: return getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_39();
            case 40: return getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_40();
            case 41: return getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_41();
            case 42: return getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_42();
            case 43: return getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_43();
            case 44: return getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_44();
            case 45: return getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_45();
            case 46: return getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_46();
            case 47: return getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_47();
            case 48: return getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_48();
            case 49: return getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_49();
            case 50: return getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_50();
            case 51: return getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_51();
            case 52: return getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_52();
            case 53: return getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_53();
            case 54: return getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_54();
            case 55: return getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_55();
            case 56: return getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_56();
            case 57: return getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_57();
            case 58: return getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_58();
            case 59: return getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_59();
            case 60: return getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_60();
            case 61: return getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_61();
            case 62: return getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_62();
            case 63: return getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_63();
            case 64: return getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_64();
            case 65: return getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_65();
            case 66: return getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_66();
            case 67: return getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_67();
            case 68: return getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_68();
            case 69: return getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_69();
            case 70: return getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_70();
            case 71: return getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_71();
            case 72: return getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_72();
            case 73: return getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_73();
            case 74: return getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_74();
            case 75: return getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_75();
            case 76: return getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_76();
            case 77: return getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_77();
            case 78: return getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_78();
            case 79: return getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_79();
            case 80: return getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_80();
            case 81: return getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_81();
            case 82: return getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_82();
            case 83: return getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_83();
            case 84: return getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_84();
            case 85: return getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_85();
            case 86: return getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_86();
            case 87: return getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_87();
            case 88: return getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_88();
            case 89: return getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_89();
            case 90: return getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_90();
            case 91: return getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_91();
            case 92: return getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_92();
            case 93: return getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_93();
            case 94: return getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_94();
            case 95: return getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_95();
            case 96: return getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_96();
            case 97: return getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_97();
            case 98: return getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_98();
            case 99: return getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_99();
            case 100: return getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_100();
            case 101: return getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_101();
            case 102: return getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_102();
            case 103: return getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_103();
            case 104: return getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_104();
            case 105: return getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_105();
            case 106: return getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_106();
            case 107: return getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_107();
            case 108: return getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_108();
            case 109: return getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_109();
            case 110: return getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_110();
            case 111: return getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_111();
            case 112: return getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_112();
            case 113: return getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_113();
            case 114: return getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_114();
            case 115: return getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_115();
            case 116: return getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_116();
            case 117: return getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_117();
            case 118: return getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_118();
            case 119: return getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_119();
            case 120: return getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_120();
            case 121: return getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_121();
            case 122: return getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_122();
            case 123: return getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_123();
            case 124: return getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_124();
            case 125: return getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_125();
            case 126: return getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_126();
            case 127: return getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_127();
            case 128: return getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_128();
            case 129: return getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_129();
            case 130: return getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_130();
            case 131: return getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_131();
            case 132: return getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_132();
            case 133: return getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_133();
            case 134: return getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_134();
            case 135: return getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_135();
            case 136: return getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_136();
            case 137: return getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_137();
            case 138: return getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_138();
            case 139: return getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_139();
            case 140: return getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_140();
            case 141: return getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_141();
            case 142: return getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_142();
            case 143: return getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_143();
            case 144: return getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_144();
            case 145: return getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_145();
            case 146: return getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_146();
            case 147: return getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_147();
            case 148: return getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_148();
            case 149: return getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_149();
            case 150: return getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_150();
            case 151: return getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_151();
            case 152: return getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_152();
            case 153: return getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_153();
            case 154: return getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_154();
            case 155: return getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_155();
            case 156: return getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_156();
            case 157: return getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_157();
            case 158: return getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_158();
            case 159: return getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_159();
            case 160: return getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_160();
            case 161: return getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_161();
            case 162: return getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_162();
            case 163: return getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_163();
            case 164: return getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_164();
            case 165: return getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_165();
            case 166: return getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_166();
            case 167: return getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_167();
            case 168: return getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_168();
            case 169: return getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_169();
            case 170: return getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_170();
            case 171: return getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_171();
            case 172: return getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_172();
            case 173: return getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_173();
            case 174: return getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_174();
            case 175: return getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_175();
            case 176: return getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_176();
            case 177: return getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_177();
            case 178: return getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_178();
            case 179: return getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_179();
            case 180: return getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_180();
            case 181: return getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_181();
            case 182: return getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_182();
            case 183: return getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_183();
            case 184: return getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_184();
            case 185: return getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_185();
            case 186: return getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_186();
            case 187: return getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_187();
            case 188: return getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_188();
            case 189: return getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_189();
            case 190: return getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_190();
            case 191: return getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_191();
            case 192: return getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_192();
            case 193: return getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_193();
            case 194: return getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_194();
            case 195: return getObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_195();
            case 196: return getObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_196();
            case 197: return getObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_197();
            case 198: return getObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_198();
            case 199: return getObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_199();
            case 200: return getObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_200();
            case 201: return getObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_201();
            case 202: return getObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_202();
            case 203: return getObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_203();
            case 204: return getObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_204();
            case 205: return getObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_205();
            case 206: return getObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_206();
            case 207: return getObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_207();
            case 208: return getObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_208();
            case 209: return getObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_209();
            default: return null;
        }
    }
    /**
     * Defines all variables bound to the declarations of
     * some rule.
     *
     * @param ruleIndex the index of the rule
     * @param objects an object array of the variables bound to the
     *          declarations of some rule.
     */
    public void setObjects(int ruleIndex, Object[] objects) {
        switch (ruleIndex) {
            case 0: setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_0(objects); break;
            case 1: setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_1(objects); break;
            case 2: setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_2(objects); break;
            case 3: setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_3(objects); break;
            case 4: setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_4(objects); break;
            case 5: setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_5(objects); break;
            case 6: setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_6(objects); break;
            case 7: setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_7(objects); break;
            case 8: setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_8(objects); break;
            case 9: setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_9(objects); break;
            case 10: setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_10(objects); break;
            case 11: setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_11(objects); break;
            case 12: setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_12(objects); break;
            case 13: setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_13(objects); break;
            case 14: setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_14(objects); break;
            case 15: setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_15(objects); break;
            case 16: setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_16(objects); break;
            case 17: setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_17(objects); break;
            case 18: setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_18(objects); break;
            case 19: setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_19(objects); break;
            case 20: setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_20(objects); break;
            case 21: setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_21(objects); break;
            case 22: setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_22(objects); break;
            case 23: setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_23(objects); break;
            case 24: setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_24(objects); break;
            case 25: setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_25(objects); break;
            case 26: setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_26(objects); break;
            case 27: setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_27(objects); break;
            case 28: setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_28(objects); break;
            case 29: setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_29(objects); break;
            case 30: setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_30(objects); break;
            case 31: setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_31(objects); break;
            case 32: setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_32(objects); break;
            case 33: setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_33(objects); break;
            case 34: setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_34(objects); break;
            case 35: setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_35(objects); break;
            case 36: setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_36(objects); break;
            case 37: setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_37(objects); break;
            case 38: setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_38(objects); break;
            case 39: setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_39(objects); break;
            case 40: setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_40(objects); break;
            case 41: setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_41(objects); break;
            case 42: setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_42(objects); break;
            case 43: setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_43(objects); break;
            case 44: setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_44(objects); break;
            case 45: setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_45(objects); break;
            case 46: setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_46(objects); break;
            case 47: setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_47(objects); break;
            case 48: setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_48(objects); break;
            case 49: setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_49(objects); break;
            case 50: setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_50(objects); break;
            case 51: setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_51(objects); break;
            case 52: setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_52(objects); break;
            case 53: setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_53(objects); break;
            case 54: setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_54(objects); break;
            case 55: setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_55(objects); break;
            case 56: setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_56(objects); break;
            case 57: setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_57(objects); break;
            case 58: setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_58(objects); break;
            case 59: setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_59(objects); break;
            case 60: setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_60(objects); break;
            case 61: setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_61(objects); break;
            case 62: setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_62(objects); break;
            case 63: setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_63(objects); break;
            case 64: setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_64(objects); break;
            case 65: setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_65(objects); break;
            case 66: setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_66(objects); break;
            case 67: setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_67(objects); break;
            case 68: setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_68(objects); break;
            case 69: setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_69(objects); break;
            case 70: setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_70(objects); break;
            case 71: setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_71(objects); break;
            case 72: setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_72(objects); break;
            case 73: setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_73(objects); break;
            case 74: setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_74(objects); break;
            case 75: setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_75(objects); break;
            case 76: setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_76(objects); break;
            case 77: setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_77(objects); break;
            case 78: setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_78(objects); break;
            case 79: setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_79(objects); break;
            case 80: setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_80(objects); break;
            case 81: setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_81(objects); break;
            case 82: setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_82(objects); break;
            case 83: setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_83(objects); break;
            case 84: setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_84(objects); break;
            case 85: setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_85(objects); break;
            case 86: setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_86(objects); break;
            case 87: setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_87(objects); break;
            case 88: setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_88(objects); break;
            case 89: setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_89(objects); break;
            case 90: setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_90(objects); break;
            case 91: setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_91(objects); break;
            case 92: setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_92(objects); break;
            case 93: setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_93(objects); break;
            case 94: setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_94(objects); break;
            case 95: setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_95(objects); break;
            case 96: setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_96(objects); break;
            case 97: setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_97(objects); break;
            case 98: setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_98(objects); break;
            case 99: setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_99(objects); break;
            case 100: setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_100(objects); break;
            case 101: setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_101(objects); break;
            case 102: setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_102(objects); break;
            case 103: setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_103(objects); break;
            case 104: setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_104(objects); break;
            case 105: setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_105(objects); break;
            case 106: setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_106(objects); break;
            case 107: setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_107(objects); break;
            case 108: setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_108(objects); break;
            case 109: setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_109(objects); break;
            case 110: setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_110(objects); break;
            case 111: setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_111(objects); break;
            case 112: setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_112(objects); break;
            case 113: setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_113(objects); break;
            case 114: setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_114(objects); break;
            case 115: setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_115(objects); break;
            case 116: setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_116(objects); break;
            case 117: setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_117(objects); break;
            case 118: setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_118(objects); break;
            case 119: setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_119(objects); break;
            case 120: setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_120(objects); break;
            case 121: setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_121(objects); break;
            case 122: setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_122(objects); break;
            case 123: setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_123(objects); break;
            case 124: setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_124(objects); break;
            case 125: setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_125(objects); break;
            case 126: setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_126(objects); break;
            case 127: setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_127(objects); break;
            case 128: setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_128(objects); break;
            case 129: setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_129(objects); break;
            case 130: setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_130(objects); break;
            case 131: setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_131(objects); break;
            case 132: setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_132(objects); break;
            case 133: setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_133(objects); break;
            case 134: setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_134(objects); break;
            case 135: setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_135(objects); break;
            case 136: setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_136(objects); break;
            case 137: setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_137(objects); break;
            case 138: setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_138(objects); break;
            case 139: setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_139(objects); break;
            case 140: setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_140(objects); break;
            case 141: setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_141(objects); break;
            case 142: setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_142(objects); break;
            case 143: setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_143(objects); break;
            case 144: setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_144(objects); break;
            case 145: setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_145(objects); break;
            case 146: setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_146(objects); break;
            case 147: setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_147(objects); break;
            case 148: setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_148(objects); break;
            case 149: setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_149(objects); break;
            case 150: setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_150(objects); break;
            case 151: setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_151(objects); break;
            case 152: setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_152(objects); break;
            case 153: setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_153(objects); break;
            case 154: setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_154(objects); break;
            case 155: setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_155(objects); break;
            case 156: setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_156(objects); break;
            case 157: setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_157(objects); break;
            case 158: setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_158(objects); break;
            case 159: setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_159(objects); break;
            case 160: setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_160(objects); break;
            case 161: setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_161(objects); break;
            case 162: setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_162(objects); break;
            case 163: setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_163(objects); break;
            case 164: setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_164(objects); break;
            case 165: setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_165(objects); break;
            case 166: setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_166(objects); break;
            case 167: setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_167(objects); break;
            case 168: setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_168(objects); break;
            case 169: setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_169(objects); break;
            case 170: setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_170(objects); break;
            case 171: setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_171(objects); break;
            case 172: setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_172(objects); break;
            case 173: setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_173(objects); break;
            case 174: setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_174(objects); break;
            case 175: setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_175(objects); break;
            case 176: setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_176(objects); break;
            case 177: setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_177(objects); break;
            case 178: setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_178(objects); break;
            case 179: setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_179(objects); break;
            case 180: setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_180(objects); break;
            case 181: setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_181(objects); break;
            case 182: setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_182(objects); break;
            case 183: setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_183(objects); break;
            case 184: setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_184(objects); break;
            case 185: setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_185(objects); break;
            case 186: setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_186(objects); break;
            case 187: setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_187(objects); break;
            case 188: setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_188(objects); break;
            case 189: setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_189(objects); break;
            case 190: setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_190(objects); break;
            case 191: setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_191(objects); break;
            case 192: setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_192(objects); break;
            case 193: setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_193(objects); break;
            case 194: setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_194(objects); break;
            case 195: setObjects_regraMRE_1_REMEDIACAO_1_criterion_1_indice_195(objects); break;
            case 196: setObjects_regraMRE_2_REMEDIACAO_4_criterion_1_indice_196(objects); break;
            case 197: setObjects_regraMRE_2_REMEDIACAO_5_criterion_1_indice_197(objects); break;
            case 198: setObjects_regraMRE_6_REMEDIACAO_15_criterion_1_indice_198(objects); break;
            case 199: setObjects_regraMRE_1_REMEDIACAO_2_criterion_1_indice_199(objects); break;
            case 200: setObjects_regraMRE_2_REMEDIACAO_6_criterion_1_indice_200(objects); break;
            case 201: setObjects_regraMRE_6_REMEDIACAO_16_criterion_1_indice_201(objects); break;
            case 202: setObjects_regraMRE_2_REMEDIACAO_3_criterion_1_indice_202(objects); break;
            case 203: setObjects_regraMRE_2_REMEDIACAO_7_criterion_1_indice_203(objects); break;
            case 204: setObjects_regraMRE_6_REMEDIACAO_17_criterion_1_indice_204(objects); break;
            case 205: setObjects_regraMRE_4_REMEDIACAO_8_criterion_1_indice_205(objects); break;
            case 206: setObjects_regraMRE_6_REMEDIACAO_18_criterion_1_indice_206(objects); break;
            case 207: setObjects_regraMRE_5_REMEDIACAO_13_criterion_1_indice_207(objects); break;
            case 208: setObjects_regraMRE_5_REMEDIACAO_14_criterion_1_indice_208(objects); break;
            case 209: setObjects_regraMRE_6_REMEDIACAO_20_criterion_1_indice_209(objects); break;
        }
    }

    /*
     * The variables declared in the rules.
     */
    private module.entity.Action module_entity_Action_1;
    private module.entity.DBConnect module_entity_DBConnect_1;
    private module.entity.RuleToHuman module_entity_RuleToHuman_1;

    /**
     * Class constructor.
     *
     * @param knowledgeBase the knowledge base that contains this rule base.
     */
    public Jeops_RuleBase_MERManagerSpecificMERKB(jeops.AbstractKnowledgeBase knowledgeBase) {
        super(knowledgeBase);
    }

}

/**
 * Knowledge base created by JEOPS from file MERManagerSpecificMERKB.rules
 *
 * @version 14/09/2015
 */
public class MERManagerSpecificMERKB extends jeops.AbstractKnowledgeBase {

    /**
     * Creates a new knowledge base with the specified conflict set with the
     * desired conflict resolution policy.
     *
     * @param conflictSet a conflict set with the desired resolution policy
     */
    public MERManagerSpecificMERKB(jeops.conflict.ConflictSet conflictSet) {
        super(conflictSet);
    }

    /**
     * Creates a new knowledge base, using the default conflict resolution
     * policy.
     */
    public MERManagerSpecificMERKB() {
        this(new jeops.conflict.DefaultConflictSet());
    }

    /**
     * Factory method used to instantiate the rule base.
     */
    protected jeops.AbstractRuleBase createRuleBase() {
        return new Jeops_RuleBase_MERManagerSpecificMERKB(this);
    }

}
