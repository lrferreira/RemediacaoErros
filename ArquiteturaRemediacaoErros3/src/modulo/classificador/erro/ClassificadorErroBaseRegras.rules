package modulo.classificador.erro;
import modulo.classificador.funcaomre.ClassificadorFuncaoMREControlador;
import entidades.RespostaErrada;
import entidades.Historico;
import util.Constantes;


ruleBase ClassificadorErroBaseRegras {
	
	
	rule interpretacaoEquivocada {
		declarations
			Historico h;
			RespostaErrada e;
		localdecl
		
		conditions
			e.getDescricao().equalsIgnoreCase("1");	
		actions
			System.out.println("Erro classificado como Interpretação Equivocada");
			e.setTipo(Constantes.TIPO_ERRO_INTERPRETACAO_EQUIVOCADA);
			modified(e);
			retract(h);
			retract(e);
	}
	
	rule diretamenteIdentificavelDeficienciaDominio {
		declarations
			Historico h;
			RespostaErrada e;
		localdecl
		
		conditions
			e.getDescricao().equalsIgnoreCase("2");
		actions
			System.out.println("Erro classificado como Diretamente Identificável - Deficiência no Domínio");		
			e.setTipo(Constantes.TIPO_ERRO_DIRETAMENTE_IDENTIFICAVEL_DEFICIENCIA_DOMINIO);
			modified(e);			
			retract(h);
			retract(e);	
	}
	
	rule diretamenteIdentificavelDeficienciaRegra {
		declarations
			Historico h;
			RespostaErrada e;
		localdecl
		
		conditions
			e.getDescricao().equalsIgnoreCase("3");
		actions
			System.out.println("Erro classificado como Diretamente Identificável - Deficiência na Regra");		
			e.setTipo(Constantes.TIPO_ERRO_DIRETAMENTE_IDENTIFICAVEL_DEFICIENCIA_REGRA);
			modified(e);			
			retract(h);
			retract(e);	
	}
	
	rule diretamenteIdentificavelDeficienciaEscolhaOperador {
		declarations
			Historico h;
			RespostaErrada e;
		localdecl
		
		conditions
			e.getDescricao().equalsIgnoreCase("4");
		actions
			System.out.println("Erro classificado como Diretamente Identificável - Deficiência na Escolha do Operador Correto");
			e.setTipo(Constantes.TIPO_ERRO_DIRETAMENTE_IDENTIFICAVEL_DEFICIENCIA_ESCOLHA_OPERADOR);	
			modified(e);
			retract(h);
			retract(e);			
	}
	
	rule indiretamenteIdentificavel {
		declarations
			Historico h;
			RespostaErrada e;
		localdecl
		
		conditions
			e.getDescricao().equalsIgnoreCase("5");
		actions
			System.out.println("Erro classificado como Indiretamente Identificável");		
			e.setTipo(Constantes.TIPO_ERRO_INDIRETAMENTE_IDENTIFICAVEL);	
			modified(e);
			retract(h);
			retract(e);			
	}
	
	rule solucaoNaoCategorizavel {
		declarations
			Historico h;
			RespostaErrada e;
		localdecl
		
		conditions
		
		actions
			System.out.println("Resposta Errada classificada como Solução Não Categorizável");		
			e.setTipo(Constantes.TIPO_ERRO_SOLUCAO_NAO_CATEGORIZAVEL);	
			modified(e);
			retract(h);
			retract(e);			
	}
	
	
}
